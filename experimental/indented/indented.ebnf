# indented-tree-grammar
@ whitespace  = horizontal
@ comment     = /#.*/
@ ignorecase  = False

# Tree-simplification while parsing:  none, flatten, merge_treetops, merge
@ reduction   = flatten
@ disposable  = EOF
@ drop        = EOF, whitespace




document     = ~ { LF ~ &LF } [§ZERO_INDENT (scope | statement)] { SAME_INDENT (scope | statement) } §EOF
statement    = line_of_code
scope        = line_of_code <-& `:`
               § &DEEPER_INDENT INDENT (scope | statement)
               {SAME_INDENT (scope | statement)}
               [&:?INDENT]
line_of_code = /(?![ \t])[^\n]*/

INDENT        = LF / */
ZERO_INDENT   = &LF !/ / INDENT
DEEPER_INDENT = LF :INDENT / +/
SAME_INDENT   = LF :INDENT § !/ /
DEDENT        = [&:?INDENT]

node          = tag_name { attr } content
content       = ( ~ QUOTE { !:QUOTE /[^'"\n]*/ } ::QUOTE ~
                | {SAME_INDENT QUOTE { !:QUOTE /[^'"\n]*/ } ::QUOTE}+ ~
                | {SAME_INDENT node }+
                | empty_line+ ) § DEDENT
empty_line    = [LF] ~

QUOTE    = "'" | '"'

LF       =  /\n/
EOF      =  !/./        # no more characters ahead, end of file reached
