# indented-tree-grammar
@ whitespace   = horizontal
@ comment      = /#.*/
@ ignorecase   = False

# Tree-simplification while parsing:  none, flatten, merge_treetops, merge
@ reduction    = flatten
@ disposable   = EOF, empty_line
@ drop         = whitespace, strings, EOF, empty_line

document       = { empty_line } [LF] INDENT { node }+ /\s*/ EOF
node           = tag_name { attr } ยง content ~
content        = (string
               | { empty_line } &(LF HAS_DEEPER_INDENT) LF INDENT (string | node)
                 { { empty_line } LF SAME_INDENT (string | node) } )
               { empty_line }
               ยง !(LF HAS_DEEPER_INDENT) DEDENT

tag_name       = IDENTIFIER
attr           = attribute value
   attribute   = "`" IDENTIFIER
   value       = '"' /[^"\n]*/ '"'~
empty_line     = LF ~ &LF
string = QUOTE { !:QUOTE /[^'"\n]*/ } ::QUOTE ~

INDENT            = / */
SAME_INDENT       = :INDENT ยง !/ /
HAS_DEEPER_INDENT = :INDENT / +/
DEDENT            = [&:?INDENT]

QUOTE    = `'` | `"`

IDENTIFIER = /\w+/~
LF         =  /\n/
EOF        =  !/./        # no more characters ahead, end of file reached
