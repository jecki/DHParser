[match:interface]
M1: """interface ClientCapabilities {
		/**
		 * Workspace specific client capabilities.
		 */
		workspace?: {
			/**
			 * The client supports applying batch edits
			 * to the workspace by supporting the request
			 * 'workspace/applyEdit'
			 */
			applyEdit?: boolean;

			/**
			 * Capabilities specific to `WorkspaceEdit`s
			 */
			workspaceEdit?: WorkspaceEditClientCapabilities;

			/**
			 * Capabilities specific to the `workspace/didChangeConfiguration`
			 * notification.
			 */
			didChangeConfiguration?: DidChangeConfigurationClientCapabilities;

			/**
			 * Capabilities specific to the `workspace/didChangeWatchedFiles`
			 * notification.
			 */
			didChangeWatchedFiles?: DidChangeWatchedFilesClientCapabilities;

			/**
			 * Capabilities specific to the `workspace/symbol` request.
			 */
			symbol?: WorkspaceSymbolClientCapabilities;

			/**
			 * Capabilities specific to the `workspace/executeCommand` request.
			 */
			executeCommand?: ExecuteCommandClientCapabilities;

			/**
			 * The client has support for workspace folders.
			 *
			 * @since 3.6.0
			 */
			workspaceFolders?: boolean;

			/**
			 * The client supports `workspace/configuration` requests.
			 *
			 * @since 3.6.0
			 */
			configuration?: boolean;

			/**
			 * Capabilities specific to the semantic token requests scoped to the
			 * workspace.
			 *
			 * @since 3.16.0
			 */
			 semanticTokens?: SemanticTokensWorkspaceClientCapabilities;

			/**
			 * Capabilities specific to the code lens requests scoped to the
			 * workspace.
			 *
			 * @since 3.16.0
			 */
			codeLens?: CodeLensWorkspaceClientCapabilities;

			/**
			 * The client has support for file requests/notifications.
			 *
			 * @since 3.16.0
			 */
			fileOperations?: {
				/**
				 * Whether the client supports dynamic registration for file
				 * requests/notifications.
				 */
				dynamicRegistration?: boolean;

				/**
				 * The client has support for sending didCreateFiles notifications.
				 */
				didCreate?: boolean;

				/**
				 * The client has support for sending willCreateFiles requests.
				 */
				willCreate?: boolean;

				/**
				 * The client has support for sending didRenameFiles notifications.
				 */
				didRename?: boolean;

				/**
				 * The client has support for sending willRenameFiles requests.
				 */
				willRename?: boolean;

				/**
				 * The client has support for sending didDeleteFiles notifications.
				 */
				didDelete?: boolean;

				/**
				 * The client has support for sending willDeleteFiles requests.
				 */
				willDelete?: boolean;
			};
		};

		/**
		 * Text document specific client capabilities.
		 */
		textDocument?: TextDocumentClientCapabilities;

		/**
		 * Window specific client capabilities.
		 */
		window?: {
			/**
			 * Whether client supports handling progress notifications. If set
			 * servers are allowed to report in `workDoneProgress` property in the
			 * request specific server capabilities.
			 *
			 * @since 3.15.0
			 */
			workDoneProgress?: boolean;

			/**
			 * Capabilities specific to the showMessage request
			 *
			 * @since 3.16.0
			 */
			showMessage?: ShowMessageRequestClientCapabilities;

			/**
			 * Client capabilities for the show document request.
			 *
			 * @since 3.16.0
			 */
			showDocument?: ShowDocumentClientCapabilities;
		};

		/**
		 * General client capabilities.
		 *
		 * @since 3.16.0
		 */
		general?: {
			/**
			 * Client capability that signals how the client
			 * handles stale requests (e.g. a request
			 * for which the client will not process the response
			 * anymore since the information is outdated).
			 *
			 * @since 3.17.0
			 */
			staleRequestSupport?: {
				/**
				 * The client will actively cancel the request.
				 */
				cancel: boolean;

				/**
				 * The list of requests for which the client
				 * will retry the request if it receives a
				 * response with error code `ContentModified``
				 */
				 retryOnContentModified: string[];
			}

			/**
			 * Client capabilities specific to regular expressions.
			 *
			 * @since 3.16.0
			 */
			regularExpressions?: RegularExpressionsClientCapabilities;

			/**
			 * Client capabilities specific to the client's markdown parser.
			 *
			 * @since 3.16.0
			 */
			markdown?: MarkdownClientCapabilities;
		};

		/**
		 * Experimental client capabilities.
		 */
		experimental?: any;
	}"""


[match:document]
M1: """
	type DocumentUri = string;

	type URI = string;

	interface Position {
		line: uinteger;
		character: uinteger;
	}

	interface Range {
		start: Position;
		end: Position;
	}

	interface Location {
		uri: DocumentUri;
		range: Range;
	}

    export namespace DiagnosticSeverity {
		export const Error: 1 = 1;
		export const Warning: 2 = 2;
		export const Information: 3 = 3;
		export const Hint: 4 = 4;
	}

	export namespace DiagnosticTag {
		export const Unnecessary: 1 = 1;
		export const Deprecated: 2 = 2;
	}

	export interface DiagnosticRelatedInformation {
		location: Location;
		message: string;
	}

	export interface CodeDescription {
		href: URI;
	}

    export interface Diagnostic {
		range: Range;
		severity?: DiagnosticSeverity;
		code?: integer | string;
		codeDescription?: CodeDescription;
		source?: string;
		message: string;
		tags?: DiagnosticTag[];
		relatedInformation?: DiagnosticRelatedInformation[];
		data?: unknown;
	}"""