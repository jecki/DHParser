
[match:document]
M1: """

    /**
     * Defines an integer number in the range of -2^31 to 2^31 - 1.
     */
    export type integer = number;

    /**
     * Defines an unsigned integer number in the range of 0 to 2^31 - 1.
     */
    export type uinteger = number;

    {
    start: { line: 5, character: 23 },
    end : { line: 6, character: 0 }
    }

    """

M2: """
    type DocumentUri = string;

    type URI = string;

    /**
     * Client capabilities specific to regular expressions.
     */
    export interface RegularExpressionsClientCapabilities {
        /**
         * The engine's name.
         */
        engine: string;

        /**
         * The engine's version.
         */
        version?: string;
    }

    export const EOL: string[] = ['\n', '\r\n', '\r'];

    interface Position {
        /**
         * Line position in a document (zero-based).
         */
        line: uinteger;

        /**
         * Character offset on a line in a document (zero-based). Assuming that
         * the line is represented as a string, the `character` value represents
         * the gap between the `character` and `character + 1`.
         *
         * If the character value is greater than the line length it defaults back
         * to the line length.
         */
        character: uinteger;
    }

    {
        start: { line: 5, character: 23 },
        end : { line: 6, character: 0 }
    }

    interface Range {
        /**
         * The range's start position.
         */
        start: Position;

        /**
         * The range's end position.
         */
        end: Position;
    }
    """

[ast:document]

[fail:document]

