
[match:expression]
M1: 'a | b'
M2: 'a b | c d'
M3: 'a (b | c) d'

[ast:expression]
M1: (expression (symbol "a") (symbol "b"))
M2: (expression (sequence (symbol "a") (symbol "b")) (sequence (symbol "c") (symbol "d")))
M3: (sequence (symbol "a") (group (expression (symbol "b") (symbol "c"))) (symbol "d"))


[match:sequence]
M1: 'a b'
M2: 'a b c'
M3: 'a §[b] c'
M4: '§&:symbol'

[ast:sequence]
M1: (sequence (symbol "a") (symbol "b"))
M2: (sequence (symbol "a") (symbol "b") (symbol "c"))
M3: (sequence (symbol "a") (:Text "§") (option (symbol "b")) (symbol "c"))
M4: (sequence (:Text "§") (lookaround (flowmarker "&") (element (retrieveop ":") (symbol "symbol"))))


[match:interleave]

[ast:interleave]

[fail:interleave]


[match:lookaround]
M10*: '&:symbol'
M11*: '!(a ° b)'

[ast:lookaround]
M10: (lookaround (flowmarker "&") (element (retrieveop ":") (symbol "symbol")))
M11: (lookaround (flowmarker "!") (group (interleave (symbol "a") (symbol "b"))))

[fail:lookaround]


[match:difference]

[ast:difference]

[fail:difference]


[match:term]
M1: 'symbol'
M2: '"literal"'
M3: "'literal'"
M4: '`plaintext`'
M5: '/regexp/'
M6: '~'
M7: '{ one }+'
M8: '{ zero }'
M9: '[option]'

[ast:term]
M1: (symbol "symbol")
M2: (literal '"literal"')
M3: (literal "'literal'")
M4: (plaintext "`plaintext`")
M5: (regexp "regexp")
M6: (whitespace "~")
M7: (oneormore (symbol "one"))
M8: (repetition (symbol "zero"))
M9: (option (symbol "option"))


[fail:term]
F1: ':(group)'      # retrieve operators only work with symbols
F2: '&{zero}'       # lookahead operators don't make sense with parsers
F3: '&[option]'     # that never fail
