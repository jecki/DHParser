# LaTeX-Grammar for DHParser

# preamble
@ literalws  = right
@ whitespace = /[ \t]*(?:\n(?![ \t]*\n)[ \t]*)?/    # optional whitespace, including at most one linefeed
@ comment    = /%.*/
@ anonymous  = _WSPC, _GAP, _LB, _PARSEP,
               block_environment, known_environment, text_element,
               line_element, inline_environment, known_inline_env,
               begin_inline_env, end_inline_env, command, known_command
@ drop       = strings, whitespace, regexps, _WSPC, _GAP, _PARSEP, _LB

########################################################################
#
# outer document structure
#
########################################################################

latexdoc       = preamble document
preamble       = { [_WSPC] command }+

document       = [_WSPC] "\begin{document}"
                 frontpages
                 (Chapters | Sections)
                 [Bibliography] [Index] [_WSPC]
                 "\end{document}" [_WSPC] §EOF
frontpages     = sequence


#######################################################################
#
# document structure
#
#######################################################################

Chapters       = { [_WSPC] Chapter }+
Chapter        = "\chapter" heading { sequence | Sections }

Sections       = { [_WSPC] Section }+
Section        = "\section" heading { sequence | SubSections }

SubSections    = { [_WSPC] SubSection }+
SubSection     = "\subsection" heading { sequence | SubSubSections }

SubSubSections = { [_WSPC] SubSubSection }+
SubSubSection  = "\subsubsection" heading { sequence | Paragraphs }

Paragraphs     = { [_WSPC] Paragraph  }+
Paragraph      = "\paragraph" heading { sequence | SubParagraphs }

SubParagraphs  = { [_WSPC] SubParagraph }+
SubParagraph   = "\subparagraph" heading [ sequence ]

Bibliography   = [_WSPC] "\bibliography" heading
Index          = [_WSPC] "\printindex"

heading        = block

#######################################################################
#
# document content
#
#######################################################################


#### block environments ####

block_environment   = known_environment | generic_block
known_environment   = itemize | enumerate | figure | tabular | quotation
                    | verbatim
generic_block       = begin_generic_block sequence §end_generic_block
begin_generic_block = <-&_LB begin_environment LFF
end_generic_block   = <-&_LB  end_environment LFF

itemize             = "\begin{itemize}" [_WSPC] { item } §"\end{itemize}"
enumerate           = "\begin{enumerate}" [_WSPC] {item } §"\end{enumerate}"
item                = "\item" sequence

figure              = "\begin{figure}" sequence §"\end{figure}"
quotation           = ("\begin{quotation}" sequence §"\end{quotation}")
                    | ("\begin{quote}" sequence §"\end{quote}")
verbatim            = "\begin{verbatim}" sequence §"\end{verbatim}"
tabular             = "\begin{tabular}" tabular_config { tabular_row } §"\end{tabular}"
tabular_row         = (multicolumn | tabular_cell) { "&" (multicolumn | tabular_cell) }
                      "\\" ( hline | { cline } )
tabular_cell        = {line_element [S] }
tabular_config      = "{" TBCFG_VALUE §"}"
TBCFG_VALUE         = /[lcr|]+/~

#### paragraphs and sequences of paragraphs ####

block_of_paragraphs = "{" [sequence] §"}"
sequence            = [_WSPC] { (paragraph | block_environment ) [_PARSEP] }+
paragraph           = { !blockcmd text_element [S] }+
text_element        = line_element | LINEFEED
line_element        = text | block |inline_environment |command


#### inline enivronments ####

inline_environment  = known_inline_env | generic_inline_env
known_inline_env    = inline_math
generic_inline_env  = begin_inline_env ~ paragraph §end_inline_env
begin_inline_env    = (<-!_LB begin_environment) | (begin_environment !LFF)
end_inline_env      = end_environment
                      ## (<-!_LB end_environment)   | (end_environment !LFF)  # ambiguity with generic_block when EOF
begin_environment   = /\\begin{/ §NAME /}/
end_environment     = /\\end{/ §::NAME /}/

inline_math         = /\$/ /[^$]*/ §/\$/


#### commands ####

command             = known_command | text_command | generic_command
known_command       = citet | citep | footnote | includegraphics | caption
                    | multicolumn | hline | cline | documentclass | pdfinfo
text_command        = TXTCOMMAND | ESCAPED | BRACKETS
generic_command     = !no_command CMDNAME [[ ~ config ] ~ block ]

citet               = "\citet" [config] block
citep               = ("\citep" | "\cite") [config] block
footnote            = "\footnote" block_of_paragraphs
includegraphics     = "\includegraphics" [ config ] block
caption             = "\caption" block
multicolumn         = "\multicolumn" "{" INTEGER "}" tabular_config block_of_paragraphs
hline               = "\hline"
cline               = "\cline{" INTEGER "-" INTEGER "}"
documentclass       = "\documentclass" [ config ] block
pdfinfo             = "\pdfinfo" block


#######################################################################
#
# low-level text and character sequences
#
#######################################################################


config     = "[" cfg_text §"]"
cfg_text   = { (~ text) | CMDNAME | SPECIAL }
block      = /{/ ~ { !blockcmd text_element [S] } §/}/
# text       = LETTERS { S LETTERS }
# text       = LINE { S LINE }
text       = TEXT { S TEXT }

no_command = "\begin{" | "\end" | BACKSLASH structural
blockcmd   = BACKSLASH ( ( "begin{" | "end{" )
                         ( "enumerate" | "itemize" | "figure" | "quote"
                         | "quotation" | "tabular") "}"
                       | structural | begin_generic_block | end_generic_block )

structural = "subsection" | "section" | "chapter" | "subsubsection"
           | "paragraph" | "subparagraph" | "item"


#######################################################################
#
# primitives
#
#######################################################################


CMDNAME    = /\\(?:(?!_)\w)+/~
TXTCOMMAND = /\\text\w+/
ESCAPED    = /\\[%$&_\/{}]/
SPECIAL    = /[$&_\/\\\\]/
BRACKETS   = /[\[\]]/                       # left or right square bracket: [ ]
LINEFEED   = /[\\][\\]/

NAME       = /\w+/
INTEGER    = /\d+/~

TEXT       = /(?:[^\\%$&\{\}\[\]\n]+(?:\n(?![ \t]*\n))?)+/
LINE       = /[^\\%$&\{\}\[\]\n]+/          # a line of text
LETTERS    = /[^\\%$&\{\}\[\]\s\n]+/        # some piece of text excluding whitespace,
                                            # linefeed and special characters
LF         = NEW_LINE { COMMENT__ WHITESPACE__ }   # linefeed but not an empty line
LFF        = NEW_LINE [ _WSPC ]             # at least one linefeed
S          = &/[% \t\n]/ !_GAP WSP_RE__     # significant whitespace
_PARSEP    = { WHITESPACE__ COMMENT__ } _GAP [_WSPC] # paragraph separator
_WSPC      = { COMMENT__ | /\s+/ }+         # arbitrary horizontal or vertical whitespace
_GAP       = /[ \t]*(?:\n[ \t]*)+\n/~       # at least one empty line, i.e.
                                            # [whitespace] linefeed [whitespace] linefeed
NEW_LINE   = /[ \t]*/ [COMMENT__] /\n/
_LB        = /\s*?\n|$/                     # backwards line break for Lookbehind-Operator
                                            # beginning of text marker '$' added for test code
BACKSLASH  = /[\\]/

EOF        = /(?!.)/                        # End-Of-File
