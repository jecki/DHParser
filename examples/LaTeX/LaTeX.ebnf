# LaTeX-Grammar for DHParser

@ testing    = True
@ whitespace = /[ \t]*(?:\n(?![ \t]*\n)[ \t]*)?/    # optional whitespace, including at most one linefeed
@ comment    = /%.*(?:\n|$)/


latexdoc       = preamble document
preamble       = { command }+

document       = [WSPC] "\begin{document}" [WSPC]
                 frontpages [WSPC]
                 (Chapters | Sections) [WSPC]
                 [Bibliography] [Index] [WSPC]
                 "\end{document}" [WSPC] §EOF
frontpages     = sequence


#######################################################################
#
# document structure
#
#######################################################################

Chapters       = { Chapter [WSPC] }+
Chapter        = "\Chapter" block [WSPC] { sequence | Sections }

Sections       = { Section [WSPC] }+
Section        = "\Section" block [WSPC] { sequence | SubSections }

SubSections    = { SubSection [WSPC] }+
SubSection     = "\SubSection" block [WSPC] { sequence | SubSubSections }

SubSubSections = { SubSubSection [WSPC] }+
SubSubSection  = "\SubSubSection" block [WSPC] { sequence | Paragraphs }

Paragraphs     = { Paragraph [WSPC] }+
Paragraph      = "\paragraph" block [WSPC] { sequence | SubParagraphs }

SubParagraphs  = { SubParagraph [WSPC] }+
SubParagraph   = "\subparagraph" block [WSPC] [ sequence ]

Bibliography   = "\bibliography" block [WSPC]
Index          = "\printindex" [WSPC]


#######################################################################
#
# document content
#
#######################################################################


#### block environments ####

block_environment   = known_environment | generic_block
known_environment   = itemize | enumerate | figure | tabular | quotation
                    | verbatim
generic_block       = begin_generic_block sequence §end_generic_block
begin_generic_block = -&LB begin_environment LFF
end_generic_block   = -&LB  end_environment LFF

itemize             = "\begin{itemize}" [WSPC] { item } §"\end{itemize}"
enumerate           = "\begin{enumerate}" [WSPC] {item } §"\end{enumerate}"
item                = "\item" [WSPC] sequence

figure              = "\begin{figure}" sequence §"\end{figure}"
quotation           = ("\begin{quotation}" sequence §"\end{quotation}")
                    | ("\begin{quote}" sequence §"\end{quote}")
verbatim            = "\begin{verbatim}" sequence §"\end{verbatim}"
tabular             = "\begin{tabular}" tabular_config sequence §"\end{tabular}"
tabular_config      = "{" /[lcr|]+/~ §"}"


#### paragraphs and sequences of paragraphs ####

block_of_paragraphs = /{/~ sequence §/}/
sequence            = { (paragraph | block_environment ) [PARSEP] }+

paragraph           = { !blockcmd text_element //~ }+
text_element       = command | text | block | inline_environment


#### inline enivronments ####

inline_environment  = known_inline_env | generic_inline_env
known_inline_env    = inline_math
generic_inline_env  = begin_inline_env //~ paragraph §end_inline_env
begin_inline_env    = (-!LB begin_environment) | (begin_environment !LFF)
end_inline_env      = end_environment
                      ## (-!LB end_environment)   | (end_environment !LFF)  # ambiguity with genric_block when EOF
begin_environment   = /\\begin{/ §NAME §/}/
end_environment     = /\\end{/ §::NAME §/}/

inline_math         = /\$/ /[^$]*/ §/\$/


#### commands ####

command             = known_command | text_command | generic_command
known_command       = footnote | includegraphics | caption
text_command        = TXTCOMMAND | ESCAPED | BRACKETS
generic_command     = !no_command CMDNAME [[ //~ config ] //~ block ]

footnote            = "\footnote" block_of_paragraphs
includegraphics     = "\includegraphics" [ config ] block
caption             = "\caption" block


#######################################################################
#
# low-level text and character sequences
#
#######################################################################


config     = "[" text §"]"
block      = /{/ //~ { !blockcmd text_element //~ } §/}/
text       = TEXTCHUNK { //~ TEXTCHUNK }

no_command = "\begin{" | "\end" | BACKSLASH structural
blockcmd   = BACKSLASH ( ( "begin{" | "end{" )
                         ( "enumerate" | "itemize" | "figure" | "quote"
                         | "quotation" | "tabular") "}"
                       | structural | begin_generic_block | end_generic_block )

structural = "subsection" | "section" | "chapter" | "subsubsection"
           | "paragraph" | "subparagraph" | "item"


#######################################################################
#
# Primitives
#
#######################################################################


CMDNAME    = /\\(?:(?!_)\w)+/~
TXTCOMMAND = /\\text\w+/
ESCAPED    = /\\[%$&_\/{}]/
BRACKETS   = /[\[\]]/                       # left or right square bracket: [ ]

NAME       = /\w+/~

TEXTCHUNK  = /[^\\%$&\{\}\[\]\s\n]+/        # some piece of text excluding whitespace,
                                            # linefeed and special characters
LF         = !GAP /[ \t]*\n[ \t]*/          # linefeed but not an empty line
LFF        = //~ -&LB [ WSPC ]              # at least one linefeed
WSPC       = { ~/\s+/~ }+                   # arbitrary horizontal or vertical whitespace
PARSEP     = { GAP }+                       # paragraph separator
GAP        = /[ \t]*(?:\n[ \t]*)+\n/~       # at least one empty line, i.e.
                                            # [whitespace] linefeed [whitespace] linefeed
LB         = /\s*?\n|$/                     # backwards line break for Lookbehind-Operator
                                            # beginning of text marker '$' added for test code
BACKSLASH  = /[\\]/

EOF        = /(?!.)/                        # End-Of-File
