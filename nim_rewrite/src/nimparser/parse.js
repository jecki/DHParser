/* Generated by the Nim Compiler v2.2.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI520096170 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520096154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520098921 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520099277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520099376 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520098348 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520098420 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520098549 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405244 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520098722 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520096664 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520096663 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554436 = {size: 0,kind: 32,base: null,node: null,finalizer: null};
var NTI1174405184 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956301329 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1174405155 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405157 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520097233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520099454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520099451 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520099448 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520099440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520100765 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207960849 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960808 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960181 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960403 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960318 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960312 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207960307 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI503316810 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093765 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093784 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520094275 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI520094512 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520094274 = {size: 0, kind: 47, base: null, node: null, finalizer: null};
var NTI520101744 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI520101743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520101739 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093834 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520101741 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI520101740 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520094842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520096621 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207959560 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520094605 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520094612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520094607 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1140850958 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520101633 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520101640 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI520101639 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1241514002 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520101635 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI520101634 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1140850751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093811 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093770 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093810 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093809 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093823 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093767 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI520093769 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093808 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093776 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093763 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093785 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643142 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1040187471 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187477 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093819 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093818 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207959557 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093764 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093807 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093804 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093801 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093793 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093761 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093792 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093782 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554443 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI520093772 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI520093773 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI520093791 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093775 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093762 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI520093778 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093777 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093783 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093816 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI520093779 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093887 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1241513991 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1241513987 = {size: 0,kind: 42,base: null,node: null,finalizer: null};
var NTI1241513990 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1241513988 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1241514010 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093780 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI520093781 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI855638019 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959573 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959570 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207959567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959577 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959556 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959576 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1207959575 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093738 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1157627908 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157627907 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1140850938 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1140850693 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1140850691 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI33555836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555836.node = NNI33555836;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
NTI1140850693.base = NTI33554449;
var NNI1140850691 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1140850693, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554438, name: "Field2", sons: null}]};
NTI1140850691.node = NNI1140850691;
var NNI1157627908 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI1157627908.node = NNI1157627908;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555167;
NTI1157627908.base = NTI33555177;
NTI1157627907.base = NTI1157627908;
var NNI1140850938 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1157627907, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1157627907, name: "Field1", sons: null}]};
NTI1140850938.node = NNI1140850938;
var NNI520093738 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1140850938, name: "Field1", sons: null}]};
NTI520093738.node = NNI520093738;
NTI1207959575.base = NTI33554449;
NTI1207959556.base = NTI1207959558;
NTI1207959576.base = NTI1207959556;
var NNI1207959573 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI855638019, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554449, name: "Field3", sons: null}]};
NTI1207959573.node = NNI1207959573;
NTI1207959570.base = NTI1207959573;
var NNI1207959567 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1207959570, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1207959567.node = NNI1207959567;
NTI1207959577.base = NTI1207959567;
var NNI1207959558 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nameRef", len: 0, typ: NTI1207959575, name: "nameRef", sons: null}, 
{kind: 1, offset: "childrenSeq", len: 0, typ: NTI1207959576, name: "childrenSeq", sons: null}, 
{kind: 1, offset: "textSlice", len: 0, typ: NTI1140850691, name: "textSlice", sons: null}, 
{kind: 1, offset: "attributesRef", len: 0, typ: NTI1207959577, name: "attributesRef", sons: null}, 
{kind: 1, offset: "sourcePos", len: 0, typ: NTI33554438, name: "sourcePos", sons: null}]};
NTI1207959558.node = NNI1207959558;
NTI1207959558.base = NTI33555167;
var NNI520093780 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI520093780, name: "postfixNotation", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI520093780, name: "memoize", len: 0, sons: null}}};
NTI520093780.node = NNI520093780;
NTI520093781.base = NTI520093780;
NTI1241513991.base = NTI1241513988;
var NNI1241513990 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554438, name: "pos", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI1241513987, name: "code", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554438, name: "line", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554438, name: "column", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554438, name: "length", sons: null}, 
{kind: 1, offset: "related", len: 0, typ: NTI1241513991, name: "related", sons: null}, 
{kind: 1, offset: "origPos", len: 0, typ: NTI33554438, name: "origPos", sons: null}, 
{kind: 1, offset: "origDoc", len: 0, typ: NTI33554449, name: "origDoc", sons: null}]};
NTI1241513990.node = NNI1241513990;
NTI1241513988.base = NTI1241513990;
NTI1241514010.base = NTI1241513988;
var NNI520093779 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI520093816, name: "Field1", sons: null}]};
NTI520093779.node = NNI520093779;
NTI520093887.base = NTI520093779;
NTI520093791.base = NTI33554449;
var NNI520093772 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI520093772, name: "isLeaf", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI520093772, name: "isNary", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI520093772, name: "isFlowParser", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI520093772, name: "isLookahead", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI520093772, name: "isContextSensitive", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI520093772, name: "isErrorCatching", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI520093772, name: "isForward", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI520093772, name: "isDisposable", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI520093772, name: "noMemoization", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI520093772, name: "dropContent", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI520093772, name: "traversalTracker", len: 0, sons: null}}};
NTI520093772.node = NNI520093772;
NTI520093773.base = NTI520093772;
NTI520093782.base = NTI520093783;
NTI520093761.base = NTI520093775;
NTI520093792.base = NTI520093761;
NTI1207959557.base = NTI1207959558;
var NNI520093764 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1207959557, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI520093764.node = NNI520093764;
var NNI520093807 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI855638019, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI520093764, name: "Field2", sons: null}]};
NTI520093807.node = NNI520093807;
NTI520093804.base = NTI520093807;
var NNI520093801 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI520093804, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI520093801.node = NNI520093801;
var NNI520093775 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ptype", len: 0, typ: NTI33554449, name: "ptype", sons: null}, 
{kind: 1, offset: "pname", len: 0, typ: NTI33554449, name: "pname", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI520093791, name: "nodeName", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI520093773, name: "flags", sons: null}, 
{kind: 1, offset: "uniqueID", len: 0, typ: NTI33554443, name: "uniqueID", sons: null}, 
{kind: 1, offset: "grammarVar", len: 0, typ: NTI520093782, name: "grammarVar", sons: null}, 
{kind: 1, offset: "symbol", len: 0, typ: NTI520093762, name: "symbol", sons: null}, 
{kind: 1, offset: "subParsers", len: 0, typ: NTI520093792, name: "subParsers", sons: null}, 
{kind: 1, offset: "call", len: 0, typ: NTI520093793, name: "call", sons: null}, 
{kind: 1, offset: "visited", len: 0, typ: NTI520093801, name: "visited", sons: null}]};
NTI520093775.node = NNI520093775;
NTI520093775.base = NTI33555167;
NTI520093762.base = NTI520093775;
NTI520093818.base = NTI1241513988;
NTI520093819.base = NTI520093779;
var NNI520093783 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI520093781, name: "flags", sons: null}, 
{kind: 1, offset: "returnItem", len: 0, typ: NTI520093777, name: "returnItem", sons: null}, 
{kind: 1, offset: "returnSequence", len: 0, typ: NTI520093778, name: "returnSequence", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI1140850691, name: "document", sons: null}, 
{kind: 1, offset: "root", len: 0, typ: NTI520093762, name: "root", sons: null}, 
{kind: 1, offset: "commentRe", len: 0, typ: NTI520093738, name: "commentRe", sons: null}, 
{kind: 1, offset: "errors", len: 0, typ: NTI520093818, name: "errors", sons: null}, 
{kind: 1, offset: "rollbackStack", len: 0, typ: NTI520093819, name: "rollbackStack", sons: null}, 
{kind: 1, offset: "rollbackLocation", len: 0, typ: NTI33554438, name: "rollbackLocation", sons: null}, 
{kind: 1, offset: "farthestFail", len: 0, typ: NTI33554438, name: "farthestFail", sons: null}, 
{kind: 1, offset: "farthestParser", len: 0, typ: NTI520093762, name: "farthestParser", sons: null}]};
NTI520093783.node = NNI520093783;
NTI520093783.base = NTI33555167;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555172;
var NNI1040187477 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187471, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187477.node = NNI1040187477;
var NNI704643142 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI704643142.node = NNI704643142;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555173.base = NTI33555171;
NTI134217746.base = NTI33555173;
NTI134217747.base = NTI134217746;
var NNI520093767 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI520093767, name: "mkRegex", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI520093767, name: "mkString", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI520093767, name: "mkProc", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI520093767, name: "mkParser", len: 0, sons: null}}};
NTI520093767.node = NNI520093767;
var NNI520093769 = {kind: 3, offset: "kind", len: 4, typ: NTI520093767, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rxInfo", len: 0, typ: NTI520093738, name: "rxInfo", sons: null}], 
[setConstr(1), {kind: 1, offset: "cmpStr", len: 0, typ: NTI33554449, name: "cmpStr", sons: null}], 
[setConstr(2), {kind: 1, offset: "findProc", len: 0, typ: NTI520093823, name: "findProc", sons: null}], 
[setConstr(3), {kind: 1, offset: "consumeParser", len: 0, typ: NTI520093761, name: "consumeParser", sons: null}]]};
NTI520093769.node = NNI520093769;
NTI520093808.base = NTI520093769;
NTI520093809.base = NTI520093769;
var NNI520093770 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI520093769, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI520093770.node = NNI520093770;
NTI520093810.base = NTI520093770;
NTI520093811.base = NTI520093761;
var NNI520093776 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mandatory", len: 0, typ: NTI33554443, name: "mandatory", sons: null}, 
{kind: 1, offset: "skipList", len: 0, typ: NTI520093808, name: "skipList", sons: null}, 
{kind: 1, offset: "resumeList", len: 0, typ: NTI520093809, name: "resumeList", sons: null}, 
{kind: 1, offset: "errorList", len: 0, typ: NTI520093810, name: "errorList", sons: null}, 
{kind: 1, offset: "referredParsers", len: 0, typ: NTI520093811, name: "referredParsers", sons: null}]};
NTI520093776.node = NNI520093776;
NTI520093776.base = NTI520093775;
NTI520093763.base = NTI520093776;
var NNI520093785 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "origin", len: 0, typ: NTI520093763, name: "origin", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI1207959556, name: "node", sons: null}, 
{kind: 1, offset: "node_orig_len", len: 0, typ: NTI33554438, name: "node_orig_len", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI33554438, name: "location", sons: null}, 
{kind: 1, offset: "error", len: 0, typ: NTI1241513988, name: "error", sons: null}, 
{kind: 1, offset: "first_throw", len: 0, typ: NTI33554466, name: "first_throw", sons: null}]};
NTI520093785.node = NNI520093785;
NTI520093785.base = NTI33555173;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI1140850751 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554438, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554438, name: "b", sons: null}]};
NTI1140850751.node = NNI1140850751;
NTI520101635.base = NTI33554435;
var NNI520101634 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "HEX3Astate", len: 0, typ: NTI520101635, name: ":state", sons: null}, 
{kind: 1, offset: "commentPointer1", len: 0, typ: NTI33554438, name: "commentPointer1", sons: null}, 
{kind: 1, offset: "upperLimit2", len: 0, typ: NTI33554438, name: "upperLimit2", sons: null}, 
{kind: 1, offset: "document3", len: 0, typ: NTI1140850691, name: "document3", sons: null}, 
{kind: 1, offset: "commentRe4", len: 0, typ: NTI520093738, name: "commentRe4", sons: null}, 
{kind: 1, offset: "searchWindow5", len: 0, typ: NTI33554438, name: "searchWindow5", sons: null}, 
{kind: 1, offset: "location6", len: 0, typ: NTI33554438, name: "location6", sons: null}]};
NTI520101634.node = NNI520101634;
NTI520101634.base = NTI33555167;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555172;
NTI1241514002.base = NTI1241513988;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555172;
NTI520101640.base = NTI33554435;
NTI520101633.base = NTI520101634;
var NNI520101639 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "HEX3Astate", len: 0, typ: NTI520101640, name: ":state", sons: null}, 
{kind: 1, offset: "m1", len: 0, typ: NTI520093769, name: "m1", sons: null}, 
{kind: 1, offset: "HEX3Aup", len: 0, typ: NTI520101633, name: ":up", sons: null}]};
NTI520101639.node = NNI520101639;
NTI520101639.base = NTI33555167;
var NNI1140850958 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1140850958.node = NNI1140850958;
var NNI520094607 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI520094607.node = NNI520094607;
var NNI520094612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI520094612.node = NNI520094612;
var NNI520094605 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1207959557, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI520094605.node = NNI520094605;
var NNI1207959560 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1207959560.node = NNI1207959560;
NTI1207959560.base = NTI33555172;
var NNI520096621 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "slice", len: 0, typ: NTI1140850691, name: "slice", sons: null}, 
{kind: 1, offset: "empty", len: 0, typ: NTI33554466, name: "empty", sons: null}]};
NTI520096621.node = NNI520096621;
NTI520096621.base = NTI520093775;
NTI520094842.base = NTI1207959556;
NTI520101741.base = NTI33554435;
NTI520101739.base = NTI520101740;
var NNI520101740 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "HEX3Astate", len: 0, typ: NTI520101741, name: ":state", sons: null}, 
{kind: 1, offset: "p1", len: 0, typ: NTI520093761, name: "p1", sons: null}, 
{kind: 1, offset: "subIter2", len: 0, typ: NTI520093834, name: "subIter2", sons: null}, 
{kind: 1, offset: "q3", len: 0, typ: NTI520093761, name: "q3", sons: null}, 
{kind: 1, offset: "HEX3AenvP4", len: 0, typ: NTI520101739, name: ":envP4", sons: null}]};
NTI520101740.node = NNI520101740;
NTI520101740.base = NTI33555167;
NTI520101744.base = NTI33554435;
NTI520094274.base = NTI520093761;
NTI520094512.base = NTI520093761;
var NNI520101743 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "HEX3Astate", len: 0, typ: NTI520101744, name: ":state", sons: null}, 
{kind: 1, offset: "p1", len: 0, typ: NTI520094274, name: "p1", sons: null}, 
{kind: 1, offset: "HEX3Atmp2", len: 0, typ: NTI520094512, name: ":tmp2", sons: null}, 
{kind: 1, offset: "i3", len: 0, typ: NTI520094275, name: "i3", sons: null}, 
{kind: 1, offset: "L4", len: 0, typ: NTI33554435, name: "L4", sons: null}]};
NTI520101743.node = NNI520101743;
NTI520101743.base = NTI33555167;
NTI520093784.base = NTI1241513988;
var NNI520093765 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1207959557, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI520093784, name: "Field1", sons: null}]};
NTI520093765.node = NNI520093765;
NTI503316810.base = NTI33554449;
NTI1207960307.base = NTI33554449;
NTI1207960312.base = NTI33554449;
NTI1207960318.base = NTI33554449;
NTI1207960181.base = NTI33554449;
NTI1207960403.base = NTI1207960181;
NTI1207960425.base = NTI33554449;
NTI1207960808.base = NTI33554449;
NTI1207960849.base = NTI33554449;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555172;
var NNI520100765 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520100765.node = NNI520100765;
NTI520100765.base = NTI520093775;
var NNI520099454 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI855638019, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554438, name: "Field2", sons: null}]};
NTI520099454.node = NNI520099454;
NTI520099451.base = NTI520099454;
var NNI520099448 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI520099451, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI520099448.node = NNI520099448;
var NNI520099440 = {kind: 1, offset: "recursionCounter", len: 0, typ: NTI520099448, name: "recursionCounter", sons: null};
NTI520099440.node = NNI520099440;
NTI520099440.base = NTI520093775;
var NNI1174405155 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI956301329, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI956301329, name: "Field1", sons: null}]};
NTI1174405155.node = NNI1174405155;
NTI1174405157.base = NTI1174405155;
var NNI1174405156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1174405157, name: "Field1", sons: null}]};
NTI1174405156.node = NNI1174405156;
var NNI1174405154 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554443, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554443, name: "Field1", sons: null}]};
NTI1174405154.node = NNI1174405154;
var NNI520097233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "runes", len: 0, typ: NTI1174405156, name: "runes", sons: null}, 
{kind: 1, offset: "repetitions", len: 0, typ: NTI1174405154, name: "repetitions", sons: null}]};
NTI520097233.node = NNI520097233;
NTI520097233.base = NTI520093775;
var NNI1174405184 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554436, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI1174405184.node = NNI1174405184;
var NNI520096663 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "compare", len: 0, typ: NTI520096664, name: "compare", sons: null}]};
NTI520096663.node = NNI520096663;
NTI520096663.base = NTI520093775;
var NNI520098722 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520098722.node = NNI520098722;
NTI520098722.base = NTI520093775;
NTI1174405244.base = NTI33554449;
var NNI520098549 = {kind: 1, offset: "repRange", len: 0, typ: NTI1174405154, name: "repRange", sons: null};
NTI520098549.node = NNI520098549;
NTI520098549.base = NTI520093775;
var NNI520098420 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "combined", len: 0, typ: NTI520093738, name: "combined", sons: null}, 
{kind: 1, offset: "whitespace", len: 0, typ: NTI520093738, name: "whitespace", sons: null}, 
{kind: 1, offset: "comment", len: 0, typ: NTI520093738, name: "comment", sons: null}, 
{kind: 1, offset: "keep_comments", len: 0, typ: NTI33554466, name: "keep_comments", sons: null}]};
NTI520098420.node = NNI520098420;
NTI520098420.base = NTI520093775;
var NNI520098348 = {kind: 1, offset: "reInfo", len: 0, typ: NTI520093738, name: "reInfo", sons: null};
NTI520098348.node = NNI520098348;
NTI520098348.base = NTI520093775;
var NNI520099376 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520099376.node = NNI520099376;
NTI520099376.base = NTI520093775;
var NNI520099277 = {kind: 1, offset: "positive", len: 0, typ: NTI33554466, name: "positive", sons: null};
NTI520099277.node = NNI520099277;
NTI520099277.base = NTI520093775;
var NNI520098921 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520098921.node = NNI520098921;
NTI520098921.base = NTI520093776;
var NNI520096154 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1207959556, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI520096154.node = NNI520096154;
var NNI520096170 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1241513988, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI520096170.node = NNI520096170;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557318 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2866(ti_p2))) {
      result_33557318 = src_p1;
      }
      else {
        result_33557318 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557318 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557318 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557318 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557318 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557318, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557318 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557318 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557318 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557318[i] = nimCopy(result_33557318[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557318 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557318 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557318[i] = nimCopy(result_33557318[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557318 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557318 = src_p1;
      break;
    }

  return result_33557318;

}

function arrayConstr(len_p0, value_p1, typ_p2) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; ++i) result[i] = nimCopy(null, value_p1, typ_p2);
    return result;
  

  
}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557358 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557358 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557358;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557353 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557353 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557353;

}

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_p0) {
  var result_33556911 = null;

    var res_33556965 = newSeq__system_u2508((s_p0).length);
    var i_33556966 = 0;
    var j_33556967 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556966 < (s_p0).length)) break Label2;
          var c_33556968 = s_p0[i_33556966];
          if ((c_33556968 < 128)) {
          res_33556965[j_33556967] = String.fromCharCode(c_33556968);
          i_33556966 += 1;
          }
          else {
            var helper_33556994 = newSeq__system_u2508(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556995 = c_33556968.toString(16);
                  if ((((code_33556995) == null ? 0 : (code_33556995).length) == 1)) {
                  helper_33556994.push("%0");;
                  }
                  else {
                  helper_33556994.push("%");;
                  }
                  
                  helper_33556994.push(code_33556995);;
                  i_33556966 += 1;
                  if ((((s_p0).length <= i_33556966) || (s_p0[i_33556966] < 128))) {
                  break Label3;
                  }
                  
                  c_33556968 = s_p0[i_33556966];
                }
            };
++excHandler;
            try {
            res_33556965[j_33556967] = decodeURIComponent(helper_33556994.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556965[j_33556967] = helper_33556994.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556967 += 1;
        }
    };
    if (res_33556965.length < j_33556967) { for (var i = res_33556965.length ; i < j_33556967 ; ++i) res_33556965.push(null); }
               else { res_33556965.length = j_33556967; };
    result_33556911 = res_33556965.join("");

  return result_33556911;

}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    e_p0.trace = nimCopy(null, rawWriteStackTrace__system_u2181(), NTI33554449);
    throw e_p0;

  
}

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(1);

function eqStrings(a_p0, b_p1) {
        if (a_p0 == b_p1) return true;
    if (a_p0 === null && b_p1.length == 0) return true;
    if (b_p1 === null && a_p0.length == 0) return true;
    if ((!a_p0) || (!b_p1)) return false;
    var alen = a_p0.length;
    if (alen != b_p1.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_p0[i] != b_p1[i]) return false;
    return true;
  

  
}

function makeNimstrLit(c_p0) {
      var result = [];
  for (var i = 0; i < c_p0.length; ++i) {
    result[i] = c_p0.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet3 = setConstr(7);

function isObj(obj_p0, subclass_p1) {
  var result_33557431 = false;

  BeforeRet: {
    var x_33557432 = obj_p0;
    if ((x_33557432 == subclass_p1)) {
    result_33557431 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557432 == subclass_p1))) break Label2;
          if ((x_33557432 == null)) {
          result_33557431 = false;
          break BeforeRet;
          }
          
          x_33557432 = x_33557432.base;
        }
    };
    result_33557431 = true;
    break BeforeRet;
  };

  return result_33557431;

}

function divInt(a_p0, b_p1) {
        if (b_p1 == 0) raiseDivByZero();
    if (b_p1 == -1 && a_p0 == 2147483647) raiseOverflow();
    return Math.trunc(a_p0 / b_p1);
  

  
}

function nimBoolToStr(x_p0) {
  var result_33556446 = [];

    if (x_p0) {
    result_33556446 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556446 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556446;

}

function nimMax(a_p0, b_p1) {
    var Temporary1;

  var result_33557145 = 0;

  BeforeRet: {
    if ((b_p1 <= a_p0)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557145 = Temporary1;
    break BeforeRet;
  };

  return result_33557145;

}

function nimMin(a_p0, b_p1) {
    var Temporary1;

  var result_33557141 = 0;

  BeforeRet: {
    if ((a_p0 <= b_p1)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557141 = Temporary1;
    break BeforeRet;
  };

  return result_33557141;

}
var ConstSet4 = setConstr(3);

function raiseFieldError2(f_p0, discVal_p1) {
    raiseException({message: (f_p0).concat(discVal_p1,[39]), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function reprDiscriminant(e_p0, typ_p1) {
    var Temporary1;

  var result_33557651 = [];

  var F = {procname: "system.reprDiscriminant", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/repr_impl.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "repr_impl.nim";
    F.line = 12;
    switch (typ_p1.kind) {
    case 14:
      Temporary1 = reprEnum(e_p0, typ_p1);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_p0 == 0)));
      break;
    default: 
      Temporary1 = HEX24__systemZdollars_u8(e_p0);
      break;
    }
    result_33557651 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_33557651;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException__system_u2018()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet5 = setConstr(0);
var ConstSet6 = setConstr(1);
var ConstSet7 = setConstr(1);
var ConstSet8 = setConstr(2);

function mulInt(a_p0, b_p1) {
        var result = a_p0 * b_p1;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet9 = setConstr(1);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet10 = setConstr(13, 10);

function addChar(x_p0, c_p1) {
    x_p0.push(c_p1);

  
}
      var NaryParsers_520093972 = [[58,65,108,116,101,114,110,97,116,105,118,101], [58,83,101,114,105,101,115], [58,73,110,116,101,114,108,101,97,118,101]];
var ConstSet11 = setConstr(3);
var ConstSet12 = setConstr(3);
var ConstSet13 = setConstr(3);
var ConstSet14 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet15 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet16 = setConstr(0);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr(2);
var ConstSet21 = setConstr(3);
var ConstSet22 = setConstr([48, 57]);
var ConstSet23 = setConstr([48, 57]);

function divInt64(a_p0, b_p1) {
        if (b_p1 == 0n) raiseDivByZero();
    if (b_p1 == -1n && a_p0 == 9223372036854775807n) raiseOverflow();
    return a_p0 / b_p1;
  

  
}
var F = {procname: "module macros", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_855638193 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isFatPointer__system_u2866(ti_p0) {
  var result_33557300 = false;

  BeforeRet: {
    result_33557300 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557300;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function add__system_u1943(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u8(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u8(a_p1),[32,46,46,32],HEX24__systemZdollars_u8(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_p0[result_p0_Idx]).length;
    F.line = 45;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_1140851101 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_1140851101 < n_p3)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_1140851101;
            F.line = 47;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_1140851101 = addInt(i_1140851101, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u8(x_p0) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt__stdZprivateZdigitsutils_u241(result_369098762, 0, x_p0);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace__system_u2085(f_p0) {
  var result_33556519 = [[]];

    var it_33556527 = f_p0;
    var i_33556528 = 0;
    var total_33556529 = 0;
    var tempFrames_33556530 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555836);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556527 == null)) && (i_33556528 <= 63))) break Label2;
          tempFrames_33556530[i_33556528].Field0 = it_33556527.procname;
          tempFrames_33556530[i_33556528].Field1 = it_33556527.line;
          tempFrames_33556530[i_33556528].Field2 = it_33556527.filename;
          i_33556528 += 1;
          total_33556529 += 1;
          it_33556527 = it_33556527.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556527 == null))) break Label4;
          total_33556529 += 1;
          it_33556527 = it_33556527.prev;
        }
    };
    result_33556519[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556529 == i_33556528))) {
    result_33556519[0].push.apply(result_33556519[0], [40]);;
    result_33556519[0].push.apply(result_33556519[0], HEX24__systemZdollars_u8((total_33556529 - i_33556528)));;
    result_33556519[0].push.apply(result_33556519[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556563 = 0;
      var colontmp__1140851093 = 0;
      colontmp__1140851093 = (i_33556528 - 1);
      var res_1140851095 = colontmp__1140851093;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_1140851095)) break Label7;
            j_33556563 = res_1140851095;
            result_33556519[0].push.apply(result_33556519[0], cstrToNimstr(tempFrames_33556530[j_33556563].Field2));;
            if ((0 < tempFrames_33556530[j_33556563].Field1)) {
            result_33556519[0].push.apply(result_33556519[0], [40]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556519, 0, tempFrames_33556530[j_33556563].Field1);
            if (false) {
            result_33556519[0].push.apply(result_33556519[0], [44,32]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556519, 0, 0);
            }
            
            result_33556519[0].push.apply(result_33556519[0], [41]);;
            }
            
            result_33556519[0].push.apply(result_33556519[0], [32,97,116,32]);;
            add__system_u1943(result_33556519, 0, tempFrames_33556530[j_33556563].Field0);
            result_33556519[0].push.apply(result_33556519[0], [10]);;
            res_1140851095 -= 1;
          }
      };
    };

  return result_33556519[0];

}

function rawWriteStackTrace__system_u2181() {
  var result_33556614 = [];

    if (!((framePtr == null))) {
    result_33556614 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10]).concat(auxWriteStackTrace__system_u2085(framePtr)), NTI33554449);
    }
    else {
      result_33556614 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556614;

}

function newSeq__system_u2508(len_p0) {
  var result_33556944 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556944 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556944[i] = null; }  framePtr = F.prev;

  return result_33556944;

}

function unhandledException(e_p0) {
    var buf_33556659 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556659[0].push.apply(buf_33556659[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556659[0].push.apply(buf_33556659[0], e_p0.message);;
    }
    else {
    buf_33556659[0].push.apply(buf_33556659[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556659[0].push.apply(buf_33556659[0], [32,91]);;
    add__system_u1943(buf_33556659, 0, e_p0.name);
    buf_33556659[0].push.apply(buf_33556659[0], [93,10]);;
    buf_33556659[0].push.apply(buf_33556659[0], rawWriteStackTrace__system_u2181());;
    var cbuf_33556660 = toJSStr(buf_33556659[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556660);
  }
  else {
    throw cbuf_33556660;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function makeStringSlice__strslice_u15(str_p0) {
  var result_1140850706 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "makeStringSlice.makeStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 54;
    F.filename = "strslice.nim";
    F.line = 58;
    var strRef_1140850707 = null;
    var strRef_1140850707_Idx = 0;
    F.line = 62;
    strRef_1140850707 = [[]]; strRef_1140850707_Idx = 0;
    F.line = 63;
    strRef_1140850707[strRef_1140850707_Idx] = nimCopy(null, str_p0, NTI33554449);
    result_1140850706 = nimCopy(result_1140850706, {Field0: [strRef_1140850707, strRef_1140850707_Idx], Field1: 0, Field2: subInt((((strRef_1140850707[strRef_1140850707_Idx]).length) | 0), 1)}, NTI1140850691);
  framePtr = F.prev;

  return result_1140850706;

}
var F = {procname: "module strslice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
framePtr = F;
F.line = 67;
F.filename = "strslice.nim";
var EmptyStringSlice_1140850746 = makeStringSlice__strslice_u15([]);
F.line = 231;
var PCREFlag_1140851008 = new RegExp("\\(\\*\\w+\\)", "g");
F.line = 232;
var comment_1140851009 = new RegExp("#[^\\n]*", "g");
F.line = 233;
var whitespace_1140851010 = new RegExp("(?: *\\n *)|(?:^ *)|(?: *$)", "g");
F.line = 234;
var slashU_1140851011 = new RegExp("\\\\U([0-9a-fA-F]+)", "g");
framePtr = F.prev;
var F = {procname: "module strslice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module runerange", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module runerange", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function ure__parse_u49(pattern_p0) {
  var result_520093748 = {Field0: null, Field1: null};

  var F = {procname: "ure.ure", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 237;
    F.filename = "strslice.nim";
    var cleanPattern_520093749 = toJSStr(pattern_p0).replace(PCREFlag_1140851008, "").replace(slashU_1140851011, "\\u{$1}");
    F.line = 238;
    var colontmp__520104389 = new RegExp(cleanPattern_520093749, "uy");
    F.line = 239;
    var colontmp__520104390 = new RegExp(cleanPattern_520093749, "ug");
    F.line = 238;
    result_520093748 = nimCopy(result_520093748, {Field0: colontmp__520104389, Field1: colontmp__520104390}, NTI1140850938);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093748;

}

function toStringSlice__parse_u296(str_p0) {
  var result_520093995 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "toStringSlice.toStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "strslice.nim";
    result_520093995 = nimCopy(result_520093995, makeStringSlice__strslice_u15(str_p0), NTI1140850691);
  framePtr = F.prev;

  return result_520093995;

}

function init__parse_u282(node_p0, name_p1, data_p2, attributes_p3) {
  var result_520093985 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 30;
    F.filename = "nodetree.nim";
    node_p0.nameRef[0] = [[]]; node_p0.nameRef[1] = 0;
    F.line = 31;
    node_p0.nameRef[0][node_p0.nameRef[1]] = nimCopy(null, name_p1, NTI33554449);
    F.line = 43;
    node_p0.textSlice = nimCopy(node_p0.textSlice, toStringSlice__parse_u296(data_p2), NTI1140850691);
    F.line = 44;
    node_p0.attributesRef = attributes_p3;
    F.line = 45;
    node_p0.sourcePos = (-1);
    F.line = 46;
    result_520093985 = node_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093985;

}

function new__nodetree_u708() {
  var result_1207960263 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 820;
    F.filename = "system.nim";
    var r_1207960265 = null;
    F.line = 823;
    r_1207960265 = ({m_type: NTI1207959558, nameRef: [null, 0], childrenSeq: [], textSlice: {Field0: [null, 0], Field1: 0, Field2: 0}, attributesRef: null, sourcePos: 0});
    F.line = 824;
    result_1207960263 = r_1207960265;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1207960263;

}

function cleanUp__parse_u317(grammar_p0) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 179;
    F.filename = "parse.nim";
    delete grammar_p0.flags[1];
    F.line = 180;
    grammar_p0.errors = nimCopy(null, [], NTI1241514010);
    F.line = 181;
    grammar_p0.rollbackStack = nimCopy(null, [], NTI520093887);
    F.line = 182;
    grammar_p0.rollbackLocation = (-2);
    F.line = 183;
    grammar_p0.farthestFail = (-1);
    F.line = 184;
    grammar_p0.farthestParser = null;
    F.line = 185;
    grammar_p0.root = null;
  framePtr = F.prev;

  
}

function init__parse_u388(grammar_p0, name_p1, flags_p2, document_p3, returnItem_p4, returnSequence_p5) {
  var result_520094091 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 192;
    F.filename = "parse.nim";
    grammar_p0.name = nimCopy(null, name_p1, NTI33554449);
    F.line = 193;
    grammar_p0.flags = nimCopy(grammar_p0.flags, flags_p2, NTI520093781);
    F.line = 194;
    grammar_p0.returnItem = returnItem_p4;
    F.line = 195;
    grammar_p0.returnSequence = returnSequence_p5;
    F.line = 196;
    grammar_p0.document = nimCopy(grammar_p0.document, document_p3, NTI1140850691);
    F.line = 197;
    grammar_p0.commentRe = nimCopy(grammar_p0.commentRe, RxNeverMatch_520093816, NTI520093738);
    F.line = 198;
    cleanUp__parse_u317(grammar_p0);
    F.line = 199;
    result_520094091 = grammar_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094091;

}

function new__parse_u462() {
  var result_520094161 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 820;
    F.filename = "system.nim";
    var r_520094163 = null;
    F.line = 823;
    r_520094163 = ({m_type: NTI520093783, name: [], flags: {}, returnItem: null, returnSequence: null, document: {Field0: [null, 0], Field1: 0, Field2: 0}, root: null, commentRe: {Field0: [], Field1: {Field0: null, Field1: null}}, errors: [], rollbackStack: [], rollbackLocation: 0, farthestFail: 0, farthestParser: null});
    F.line = 824;
    result_520094161 = r_520094163;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094161;

}

function returnItemPlaceholder__parse_u311(parser_p0, node_p1) {
  var result_520097549 = null;

  var F = {procname: "parse.returnItemPlaceholder", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 759;
    F.filename = "parse.nim";
    result_520097549 = EmptyNode_520094000;
    F.line = 760;
    raiseException({message: [114,101,116,117,114,110,73,116,101,109,32,99,97,108,108,101,100,32,111,110,32,71,114,97,109,109,97,114,80,108,97,99,104,111,108,100,101,114], parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  return result_520097549;

}

function returnSeqPlaceholder__parse_u314(parser_p0, nodes_p1) {
  var result_520097554 = null;

  var F = {procname: "parse.returnSeqPlaceholder", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 763;
    F.filename = "parse.nim";
    result_520097554 = EmptyNode_520094000;
    F.line = 764;
    raiseException({message: [114,101,116,117,114,110,73,116,101,109,32,99,97,108,108,101,100,32,111,110,32,71,114,97,109,109,97,114,80,108,97,99,104,111,108,100,101,114], parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  return result_520097554;

}

function newStringRef__parse_u5773(s_p0) {
  var result_520099471 = null;
  var result_520099471_Idx = 0;

  var F = {procname: "parse.newStringRef", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1337;
    F.filename = "parse.nim";
    result_520099471 = [[]]; result_520099471_Idx = 0;
    F.line = 1338;
    result_520099471[result_520099471_Idx] = nimCopy(null, s_p0, NTI33554449);
  framePtr = F.prev;

  return [result_520099471, result_520099471_Idx];

}

function type__parse_u979(parser_p0) {
    var Temporary1;

  var result_520094677 = [];

  var F = {procname: "parse.type", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 240;
    F.filename = "parse.nim";
    if ((eqStrings(parser_p0.ptype, [58,70,111,114,119,97,114,100]) && (0 < (parser_p0.subParsers).length))) {
    Temporary1 = parser_p0.subParsers[chckIndx(0, 0, (parser_p0.subParsers).length - 1)].ptype;
    }
    else {
    Temporary1 = parser_p0.ptype;
    }
    
    result_520094677 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_520094677;

}

function sysFatal__stdZassertions_u45(message_p1) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_p1, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert__stdZassertions_u43(msg_p0) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal__stdZassertions_u45(msg_p0);
  framePtr = F.prev;

  
}

function failedAssertImpl__stdZassertions_u85(msg_p0) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert__stdZassertions_u43(msg_p0);
  framePtr = F.prev;

  
}

function HEX5BHEX5D__pureZstrutils_u1307(s_p0, x_p1) {
  var result_1006634272 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_1006634274 = x_p1.a;
    F.line = 84;
    var L_1006634276 = addInt(subInt(subInt((s_p0).length, x_p1.b), a_1006634274), 1);
    F.line = 85;
    result_1006634272 = nimCopy(null, mnewString(chckRange(L_1006634276, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_1006634281 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520104392 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520104392 < L_1006634276)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_1006634281 = i_520104392;
            F.line = 86;
            result_1006634272[chckIndx(i_1006634281, 0, (result_1006634272).length - 1)] = s_p0[chckIndx(addInt(i_1006634281, a_1006634274), 0, (s_p0).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520104392 = addInt(i_520104392, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1006634272;

}

function HEX2EHEX2E__stdZenumutils_u105(a_p0, b_p1) {
  var result_1040187504 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 420;
    F.filename = "system.nim";
    result_1040187504 = nimCopy(result_1040187504, {a: a_p0, b: b_p1}, NTI1040187477);
  framePtr = F.prev;

  return result_1040187504;

}

function HEX5BHEX5D__pureZstrutils_u1279(s_p0, x_p1) {
  var result_1006634244 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_1006634246 = x_p1.a;
    F.line = 84;
    var L_1006634248 = addInt(subInt(x_p1.b, a_1006634246), 1);
    F.line = 85;
    result_1006634244 = nimCopy(null, mnewString(chckRange(L_1006634248, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_1006634253 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520104395 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520104395 < L_1006634248)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_1006634253 = i_520104395;
            F.line = 86;
            result_1006634244[chckIndx(i_1006634253, 0, (result_1006634244).length - 1)] = s_p0[chckIndx(addInt(i_1006634253, a_1006634246), 0, (s_p0).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520104395 = addInt(i_520104395, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1006634244;

}

function HEX2EHEX2E__stdZstrbasics_u48(a_p0, b_p1) {
  var result_973078581 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 420;
    F.filename = "system.nim";
    result_973078581 = nimCopy(result_973078581, {a: a_p0, b: b_p1}, NTI704643142);
  framePtr = F.prev;

  return result_973078581;

}

function assignSymbol__parse_u997(parser_p0, symbol_p1) {
  var F = {procname: "parse.assignSymbol", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 252;
    F.filename = "parse.nim";
    parser_p0.symbol = symbol_p1;
    Label1: {
      F.line = 253;
      var p_520094717 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104399 = 0;
      F.line = 250;
      var L_520104400 = (parser_p0.subParsers).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104399 < L_520104400)) break Label3;
            F.line = 253;
            F.filename = "parse.nim";
            p_520094717 = parser_p0.subParsers[chckIndx(i_520104399, 0, (parser_p0.subParsers).length - 1)];
            if ((p_520094717.symbol == null)) {
            F.line = 254;
            assignSymbol__parse_u997(p_520094717, symbol_p1);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104399 += 1;
            if (!(((parser_p0.subParsers).length == L_520104400))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function assignName__parse_u1057(name_p0, parser_p1) {
  var result_520094756 = null;

  var F = {procname: "parse.assignName", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (eqStrings(type__parse_u979(parser_p1), [58,84,114,97,99,101])) {
    F.line = 258;
    F.filename = "parse.nim";
    (assignName__parse_u1057(name_p0, parser_p1.subParsers[chckIndx(0, 0, (parser_p1.subParsers).length - 1)]));
    F.line = 259;
    result_520094756 = parser_p1;
    break BeforeRet;
    }
    
    if (!(eqStrings(parser_p1.pname, []))) {
    F.line = 260;
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(260, 3) `parser.pname == \"\"` "));
    }
    
    if (!(!(eqStrings(name_p0, [])))) {
    F.line = 261;
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(261, 3) `name != \"\"` "));
    }
    
    if ((name_p0[chckIndx(0, 0, (name_p0).length - 1)] == 58)) {
    F.line = 263;
    parser_p1.nodeName[0][parser_p1.nodeName[1]] = nimCopy(null, name_p0, NTI33554449);
    F.line = 264;
    parser_p1.pname = nimCopy(null, HEX5BHEX5D__pureZstrutils_u1307(name_p0, HEX2EHEX2E__stdZenumutils_u105(1, 1)), NTI33554449);
    }
    else {
    if (((5 <= (name_p0).length) && (name_p0[chckIndx(4, 0, (name_p0).length - 1)] == 58))) {
    if (eqStrings(HEX5BHEX5D__pureZstrutils_u1279(name_p0, HEX2EHEX2E__stdZstrbasics_u48(0, 3)), [68,82,79,80])) {
    F.line = 267;
    parser_p1.flags[9] = true;
    }
    else {
      if (!(eqStrings(HEX5BHEX5D__pureZstrutils_u1279(name_p0, HEX2EHEX2E__stdZstrbasics_u48(0, 3)), [72,73,68,69]))) {
      F.line = 269;
      failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(269, 7) `name[0 .. 3] == \"HIDE\"` "));
      }
      
      F.line = 270;
      parser_p1.flags[7] = true;
    }
    
    F.line = 271;
    parser_p1.nodeName[0][parser_p1.nodeName[1]] = nimCopy(null, HEX5BHEX5D__pureZstrutils_u1307(name_p0, HEX2EHEX2E__stdZenumutils_u105(5, 1)), NTI33554449);
    F.line = 272;
    parser_p1.pname = nimCopy(null, HEX5BHEX5D__pureZstrutils_u1307(name_p0, HEX2EHEX2E__stdZenumutils_u105(5, 1)), NTI33554449);
    }
    else {
      if (!(eqStrings(parser_p1.ptype, [58,87,104,105,116,101,115,112,97,99,101]))) {
      F.line = 278;
      delete parser_p1.flags[7];
      }
      
      F.line = 279;
      parser_p1.nodeName[0][parser_p1.nodeName[1]] = nimCopy(null, name_p0, NTI33554449);
      F.line = 280;
      parser_p1.pname = nimCopy(null, name_p0, NTI33554449);
    }
    }
    F.line = 281;
    assignSymbol__parse_u997(parser_p1, parser_p1);
    F.line = 282;
    result_520094756 = parser_p1;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094756;

}

function grammar__parse_u1419(parser_p0) {
  var result_520095117 = null;

  var F = {procname: "parse.grammar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "parse.nim";
    if (!(!((parser_p0.grammarVar == GrammarPlaceholder_520094198)))) {
    F.line = 416;
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(416, 3) `parser.grammarVar != GrammarPlaceholder` "));
    }
    
    result_520095117 = parser_p0.grammarVar;
  framePtr = F.prev;

  return result_520095117;

}

function HEX5BHEX5D__parse_u1965(s_p0, i_p1) {
  var result_520095665 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520095665 = s_p0[chckIndx(subInt((s_p0).length, i_p1), 0, (s_p0).length - 1)];
  framePtr = F.prev;

  return result_520095665;

}

function pop__parse_u1990(s_p0, s_p0_Idx) {
  var result_520095689 = {Field0: 0, Field1: null};

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1773;
    F.filename = "system.nim";
    var L_520095693 = subInt((s_p0[s_p0_Idx]).length, 1);
    F.line = 1778;
    result_520095689 = nimCopy(result_520095689, s_p0[s_p0_Idx][chckIndx(L_520095693, 0, (s_p0[s_p0_Idx]).length - 1)], NTI520093779);
    F.line = 1779;
    if (s_p0[s_p0_Idx].length < chckRange(L_520095693, 0, 2147483647)) { for (var i = s_p0[s_p0_Idx].length ; i < chckRange(L_520095693, 0, 2147483647) ; ++i) s_p0[s_p0_Idx].push({Field0: 0, Field1: null}); }
               else { s_p0[s_p0_Idx].length = chckRange(L_520095693, 0, 2147483647); };
  framePtr = F.prev;

  return result_520095689;

}

function rollback__parse_u1957(grammar_p0, location_p1) {
  var F = {procname: "parse.rollback", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 595;
    F.filename = "parse.nim";
    var rb_520095656 = {Field0: 0, Field1: null};
    if (((0 < (grammar_p0.rollbackStack).length) && (location_p1 <= HEX5BHEX5D__parse_u1965(grammar_p0.rollbackStack, 1).Field0))) {
    F.line = 597;
    rb_520095656 = nimCopy(rb_520095656, pop__parse_u1990(grammar_p0, "rollbackStack"), NTI520093779);
    F.line = 598;
    rb_520095656.Field1();
    if ((0 < (grammar_p0.rollbackStack).length)) {
    F.line = 600;
    grammar_p0.rollbackLocation = HEX5BHEX5D__parse_u1965(grammar_p0.rollbackStack, 1).Field0;
    }
    else {
      F.line = 602;
      grammar_p0.rollbackLocation = (-2);
    }
    
    }
    
  framePtr = F.prev;

  
}

function hasJsBigInt__stdZprivateZjsutils_u43() {
  var result_771751980 = false;

    result_771751980 = typeof BigInt != 'undefined';

  return result_771751980;

}

function hiXorLoJs__pureZhashes_u85(a_p0, b_p1) {
  var result_855638104 = 0n;

  var F = {procname: "hashes.hiXorLoJs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "hashes.nim";
    var prod_855638105 = (a_p0 * b_p1);
    F.line = 141;
    var mask_855638106 = BigInt("0xffffffffffffffff");
    F.line = 142;
    result_855638104 = ((prod_855638105 >> BigInt("64")) ^ (prod_855638105 & mask_855638106));
  framePtr = F.prev;

  return result_855638104;

}

function hashWangYi1__pureZhashes_u193(x_p0) {
  var result_855638212 = 0;

  var F = {procname: "hashWangYi1.hashWangYi1", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    if (hasJsBigInt__stdZprivateZjsutils_u43()) {
    F.line = 182;
    F.filename = "hashes.nim";
    F.line = 146;
    var P0HEX60gensym4_855638226 = BigInt("0xa0761d6478bd642f");
    F.line = 147;
    var P1HEX60gensym4_855638227 = BigInt("0xe7037ed1a0b428db");
    F.line = 148;
    var P58HEX60gensym4_855638228 = BigInt("0xeb44accab455d16d");
    F.line = 149;
    var resHEX60gensym4_855638229 = hiXorLoJs__pureZhashes_u85(hiXorLoJs__pureZhashes_u85(P0HEX60gensym4_855638226, (BigInt(x_p0) ^ P1HEX60gensym4_855638227)), P58HEX60gensym4_855638228);
    result_855638212 = Number((() => { const i = resHEX60gensym4_855638229, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      F.line = 184;
      result_855638212 = (Number(BigInt.asIntN(32, x_p0)) & Number(BigInt.asIntN(32, 4294967295n)));
    }
    
  framePtr = F.prev;

  return result_855638212;

}

function hash__pureZhashes_u185(x_p0) {
  var result_855638204 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 214;
    F.filename = "hashes.nim";
    result_855638204 = hashWangYi1__pureZhashes_u193(BigInt.asUintN(64, BigInt(x_p0)));
  framePtr = F.prev;

  return result_855638204;

}

function isFilled__pureZcollectionsZtables_u31(hcode_p0) {
  var result_1107296289 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1107296289 = !((hcode_p0 == 0));
  framePtr = F.prev;

  return result_1107296289;

}

function nextTry__pureZcollectionsZtables_u34(h_p0, maxHash_p1) {
  var result_1107296293 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_1107296293 = (addInt(h_p0, 1) & maxHash_p1);
  framePtr = F.prev;

  return result_1107296293;

}

function rawGet__parse_u2124(t_p0, key_p1, hc_p2, hc_p2_Idx) {
  var result_520095826 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_p2[hc_p2_Idx] = hash__pureZhashes_u185(key_p1);
    if ((hc_p2[hc_p2_Idx] == 0)) {
    F.line = 64;
    hc_p2[hc_p2_Idx] = 314159265;
    }
    
    if (((t_p0.data).length == 0)) {
    F.line = 43;
    result_520095826 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_520095890 = (hc_p2[hc_p2_Idx] & (t_p0.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_520095890, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_520095890, 0, (t_p0.data).length - 1)].Field0 == hc_p2[hc_p2_Idx]) && (t_p0.data[chckIndx(h_520095890, 0, (t_p0.data).length - 1)].Field1 == key_p1))) {
          F.line = 51;
          result_520095826 = h_520095890;
          break BeforeRet;
          }
          
          F.line = 52;
          h_520095890 = nextTry__pureZcollectionsZtables_u34(h_520095890, (t_p0.data).length - 1);
        }
    };
    F.line = 53;
    result_520095826 = subInt((-1), h_520095890);
  };
  framePtr = F.prev;

  return result_520095826;

}

function hasKey__parse_u2117(t_p0, key_p1) {
  var result_520095818 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "tables.nim";
    var hc_520095819 = [0];
    F.line = 371;
    result_520095818 = (0 <= rawGet__parse_u2124(t_p0, key_p1, hc_520095819, 0));
  framePtr = F.prev;

  return result_520095818;

}

function contains__parse_u2096(t_p0, key_p1) {
  var result_520095797 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 381;
    F.filename = "tables.nim";
    result_520095797 = hasKey__parse_u2117(t_p0, key_p1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095797;

}

function raiseKeyError__parse_u2492(key_p0) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 232;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32]).concat(HEX24__systemZdollars_u8(key_p0)), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D__parse_u2425(t_p0, key_p1) {
  var result_520096126 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 240;
    F.filename = "tables.nim";
    var hcHEX60gensym22_520096127 = [0];
    F.line = 241;
    var indexHEX60gensym22_520096134 = rawGet__parse_u2124(t_p0, key_p1, hcHEX60gensym22_520096127, 0);
    if ((0 <= indexHEX60gensym22_520096134)) {
    F.line = 242;
    result_520096126 = t_p0.data[chckIndx(indexHEX60gensym22_520096134, 0, (t_p0.data).length - 1)].Field2;
    }
    else {
      F.line = 244;
    raiseKeyError__parse_u2492(key_p1);
    }
    
  framePtr = F.prev;

  return result_520096126;

}

function isNimException__system_u2018() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556453 = null;

    if (isNimException__system_u2018()) {
    result_33556453 = lastJSError;
    }
    

  return result_33556453;

}

function formatValue__error_u88(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 501;
    F.filename = "strformat.nim";
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], HEX24__systemZdollars_u8(((value_p1) | 0)));;
  framePtr = F.prev;

  
}

function validateUtf8__pureZunicode_u336(s_p0) {
  var result_956301650 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_956301651 = 0;
    F.line = 185;
    var L_956301655 = (s_p0).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_956301651 < L_956301655)) break Label2;
          if ((s_p0[chckIndx(i_956301651, 0, (s_p0).length - 1)] <= 127)) {
          F.line = 188;
          i_956301651 = addInt(i_956301651, 1);
          }
          else {
          if (((s_p0[chckIndx(i_956301651, 0, (s_p0).length - 1)] >>> 5) == 6)) {
          if ((s_p0[chckIndx(i_956301651, 0, (s_p0).length - 1)] < 194)) {
          F.line = 190;
          result_956301650 = i_956301651;
          break BeforeRet;
          }
          
          if (((addInt(i_956301651, 1) < L_956301655) && ((s_p0[chckIndx(addInt(i_956301651, 1), 0, (s_p0).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_956301651 = addInt(i_956301651, 2);
          }
          else {
            F.line = 192;
            result_956301650 = i_956301651;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_p0[chckIndx(i_956301651, 0, (s_p0).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_956301651, 2) < L_956301655) && ((s_p0[chckIndx(addInt(i_956301651, 1), 0, (s_p0).length - 1)] >>> 6) == 2)) && ((s_p0[chckIndx(addInt(i_956301651, 2), 0, (s_p0).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_956301651 = addInt(i_956301651, 3);
          }
          else {
            F.line = 196;
            result_956301650 = i_956301651;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_p0[chckIndx(i_956301651, 0, (s_p0).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_956301651, 3) < L_956301655) && ((s_p0[chckIndx(addInt(i_956301651, 1), 0, (s_p0).length - 1)] >>> 6) == 2)) && ((s_p0[chckIndx(addInt(i_956301651, 2), 0, (s_p0).length - 1)] >>> 6) == 2)) && ((s_p0[chckIndx(addInt(i_956301651, 3), 0, (s_p0).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_956301651 = addInt(i_956301651, 4);
          }
          else {
            F.line = 202;
            result_956301650 = i_956301651;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_956301650 = i_956301651;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_956301650 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_956301650;

}

function validateUtf8__pureZunicode_u7390(s_p0) {
  var result_956308704 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1191;
    F.filename = "unicode.nim";
    result_956308704 = validateUtf8__pureZunicode_u336((s_p0.slice(0, (s_p0).length - 1 + 1)));
  framePtr = F.prev;

  return result_956308704;

}

function nucruneLen(s_p0) {
  var result_956301341 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_956301341 = 0;
    F.line = 53;
    var i_956301342 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_956301342 < (s_p0).length)) break Label2;
          if ((s_p0[chckIndx(i_956301342, 0, (s_p0).length - 1)] <= 127)) {
          F.line = 55;
          i_956301342 = addInt(i_956301342, 1);
          }
          else {
          if (((s_p0[chckIndx(i_956301342, 0, (s_p0).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_956301342 = addInt(i_956301342, 2);
          }
          else {
          if (((s_p0[chckIndx(i_956301342, 0, (s_p0).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_956301342 = addInt(i_956301342, 3);
          }
          else {
          if (((s_p0[chckIndx(i_956301342, 0, (s_p0).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_956301342 = addInt(i_956301342, 4);
          }
          else {
          if (((s_p0[chckIndx(i_956301342, 0, (s_p0).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_956301342 = addInt(i_956301342, 5);
          }
          else {
          if (((s_p0[chckIndx(i_956301342, 0, (s_p0).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_956301342 = addInt(i_956301342, 6);
          }
          else {
            F.line = 61;
          i_956301342 = addInt(i_956301342, 1);
          }
          }}}}}
          F.line = 62;
          result_956301341 = addInt(result_956301341, 1);
        }
    };
  framePtr = F.prev;

  return result_956301341;

}

function runeLen__pureZunicode_u7218(s_p0) {
  var result_956308532 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1158;
    F.filename = "unicode.nim";
    result_956308532 = nucruneLen((s_p0.slice(0, (s_p0).length - 1 + 1)));
  framePtr = F.prev;

  return result_956308532;

}

function nsuRepeatChar(c_p0, count_p1) {
  var result_1006634083 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1350;
    F.filename = "strutils.nim";
    result_1006634083 = nimCopy(null, mnewString(count_p1), NTI33554449);
    Label1: {
      F.line = 1351;
      var i_1006634088 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520104415 = 0;
      F.line = 1351;
      F.filename = "strutils.nim";
      colontmp__520104415 = subInt(count_p1, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520104416 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520104416 <= colontmp__520104415)) break Label3;
            F.line = 1351;
            F.filename = "strutils.nim";
            i_1006634088 = res_520104416;
            F.line = 1351;
            result_1006634083[chckIndx(i_1006634088, 0, (result_1006634083).length - 1)] = c_p0;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520104416 = addInt(res_520104416, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1006634083;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function alignString__pureZstrformat_u20(s_p0, minimumWidth_p1, align_p2, fill_p3) {
      var Temporary1;

  var result_922746905 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_p1 == 0)) {
    F.line = 344;
    F.filename = "strformat.nim";
    result_922746905 = nimCopy(null, s_p0, NTI33554449);
    }
    else {
      F.line = 346;
      if ((validateUtf8__pureZunicode_u7390(s_p0) == (-1))) {
      Temporary1 = runeLen__pureZunicode_u7218(s_p0);
      }
      else {
      Temporary1 = (s_p0).length;
      }
      
      var sRuneLen_922746906 = Temporary1;
      F.line = 347;
      var toFill_922746907 = subInt(minimumWidth_p1, sRuneLen_922746906);
      if ((toFill_922746907 <= 0)) {
      F.line = 349;
      result_922746905 = nimCopy(null, s_p0, NTI33554449);
      }
      else {
      if (((align_p2 == 60) || (align_p2 == 0))) {
      F.line = 351;
      result_922746905 = nimCopy(null, (s_p0).concat(nsuRepeatChar(fill_p3, chckRange(toFill_922746907, 0, 2147483647))), NTI33554449);
      }
      else {
      if ((align_p2 == 94)) {
      F.line = 353;
      var half_922746908 = divInt(toFill_922746907, 2);
      F.line = 354;
      result_922746905 = nimCopy(null, (nsuRepeatChar(fill_p3, chckRange(half_922746908, 0, 2147483647))).concat(s_p0,nsuRepeatChar(fill_p3, chckRange(subInt(toFill_922746907, half_922746908), 0, 2147483647))), NTI33554449);
      }
      else {
        F.line = 356;
        result_922746905 = nimCopy(null, (nsuRepeatChar(fill_p3, chckRange(toFill_922746907, 0, 2147483647))).concat(s_p0), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_922746905;

}

function formatValue__runerange_u22(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 602;
    F.filename = "strformat.nim";
    var value_1174405154 = nimCopy(null, value_p1, NTI33554449);
    F.line = 613;
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], alignString__pureZstrformat_u20(value_1174405154, 0, 0, 32));;
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u192(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u14(x_p0) {
  var result_369098768 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 26;
    F.filename = "dollars.nim";
    addInt__stdZprivateZdigitsutils_u192(result_369098768, 0, x_p0);
  framePtr = F.prev;

  return result_369098768[0];

}

function formatValue__error_u100(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 501;
    F.filename = "strformat.nim";
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], HEX24__systemZdollars_u14(BigInt(value_p1)));;
  framePtr = F.prev;

  
}

function HEX24__error_u79(error_p0) {
    var Temporary1;

  var result_1241514065 = [];

  var F = {procname: "error.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
  framePtr = F;
    F.line = 61;
    F.filename = "error.nim";
    F.line = 61;
    var code_1241514066 = error_p0.code;
    if ((0 <= error_p0.line)) {
    Label2: {
      F.line = 63;
      var fmtRes_1241514071 = [mnewString(0)];
      F.line = 63;
      formatValue__error_u88(fmtRes_1241514071, 0, error_p0.line);
      F.line = 63;
      fmtRes_1241514071[0].push.apply(fmtRes_1241514071[0], [58]);;
      F.line = 63;
      formatValue__error_u88(fmtRes_1241514071, 0, error_p0.column);
      F.line = 63;
      fmtRes_1241514071[0].push.apply(fmtRes_1241514071[0], [58]);;
      F.line = 63;
      formatValue__error_u100(fmtRes_1241514071, 0, code_1241514066);
      F.line = 63;
      fmtRes_1241514071[0].push.apply(fmtRes_1241514071[0], [58]);;
      F.line = 63;
      formatValue__runerange_u22(fmtRes_1241514071, 0, error_p0.message);
    };
    Temporary1 = fmtRes_1241514071[0];
    }
    else {
    if ((0 <= error_p0.origPos)) {
    Label3: {
      F.line = 65;
      var fmtRes_1241514099 = [mnewString(0)];
      F.line = 65;
      formatValue__error_u88(fmtRes_1241514099, 0, error_p0.origPos);
      F.line = 65;
      fmtRes_1241514099[0].push.apply(fmtRes_1241514099[0], [58]);;
      F.line = 65;
      formatValue__error_u100(fmtRes_1241514099, 0, code_1241514066);
      F.line = 65;
      fmtRes_1241514099[0].push.apply(fmtRes_1241514099[0], [58]);;
      F.line = 65;
      formatValue__runerange_u22(fmtRes_1241514099, 0, error_p0.message);
    };
    Temporary1 = fmtRes_1241514099[0];
    }
    else {
      Label4: {
        F.line = 67;
        var fmtRes_1241514121 = [mnewString(0)];
        F.line = 67;
        fmtRes_1241514121[0].push.apply(fmtRes_1241514121[0], [63,58]);;
        F.line = 67;
        formatValue__error_u88(fmtRes_1241514121, 0, error_p0.pos);
        F.line = 67;
        fmtRes_1241514121[0].push.apply(fmtRes_1241514121[0], [58]);;
        F.line = 67;
        formatValue__error_u100(fmtRes_1241514121, 0, code_1241514066);
        F.line = 67;
        fmtRes_1241514121[0].push.apply(fmtRes_1241514121[0], [58]);;
        F.line = 67;
        formatValue__runerange_u22(fmtRes_1241514121, 0, error_p0.message);
      };
    Temporary1 = fmtRes_1241514121[0];
    }
    }
    result_1241514065 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1241514065;

}

function formatValue__parse_u1238(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "strformat.nim";
    formatValue__runerange_u22(result_p0, result_p0_Idx, HEX24__error_u79(value_p1));
  framePtr = F.prev;

  
}

function formatValue__parse_u1249(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "strformat.nim";
    formatValue__runerange_u22(result_p0, result_p0_Idx, nimBoolToStr(value_p1));
  framePtr = F.prev;

  
}

function HEX24__parse_u1218(pe_p0) {
  var result_520094916 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 301;
    F.filename = "parse.nim";
    Label1: {
      F.line = 302;
      var fmtRes_520094921 = [mnewString(0)];
      F.line = 302;
      fmtRes_520094921[0].push.apply(fmtRes_520094921[0], [80,97,114,115,105,110,103,69,120,99,101,112,116,105,111,110,40,111,114,105,103,105,110,58,32]);;
      F.line = 716;
      F.filename = "strformat.nim";
      add__system_u1943(fmtRes_520094921, 0, pe_p0.name);
      F.line = 302;
      F.filename = "parse.nim";
      fmtRes_520094921[0].push.apply(fmtRes_520094921[0], [44,32,110,111,100,101,95,111,114,105,103,110,95,108,101,110,58,32]);;
      F.line = 302;
      formatValue__error_u88(fmtRes_520094921, 0, pe_p0.node_orig_len);
      F.line = 302;
      fmtRes_520094921[0].push.apply(fmtRes_520094921[0], [32,108,111,99,97,116,105,111,110,58,32]);;
      F.line = 302;
      formatValue__error_u88(fmtRes_520094921, 0, pe_p0.location);
      F.line = 302;
      fmtRes_520094921[0].push.apply(fmtRes_520094921[0], [44,32,101,114,114,111,114,58,32,34]);;
      F.line = 302;
      formatValue__parse_u1238(fmtRes_520094921, 0, pe_p0.error);
      F.line = 302;
      fmtRes_520094921[0].push.apply(fmtRes_520094921[0], [34,44,32,102,105,114,115,116,95,116,104,114,111,119,58,32]);;
      F.line = 302;
      formatValue__parse_u1249(fmtRes_520094921, 0, pe_p0.first_throw);
    };
    result_520094916 = nimCopy(null, fmtRes_520094921[0], NTI33554449);
  framePtr = F.prev;

  return result_520094916;

}

function cut__strslice_u155(str_p0, start_p1, stop_p2) {
    var Temporary1;

  var result_1140850847 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 99;
    F.filename = "strslice.nim";
    if ((((stop_p2 < start_p1) || (stop_p2 < 0)) || (str_p0.Field2 < start_p1))) {
    Temporary1 = {Field0: [EmptyStringSlice_1140850746.Field0[0], EmptyStringSlice_1140850746.Field0[1]], Field1: 0, Field2: (-1)};
    }
    else {
    Temporary1 = {Field0: [str_p0.Field0[0], str_p0.Field0[1]], Field1: nimMax(start_p1, 0), Field2: nimMin(stop_p2, str_p0.Field2)};
    }
    
    result_1140850847 = nimCopy(result_1140850847, Temporary1, NTI1140850691);
  framePtr = F.prev;

  return result_1140850847;

}

function index__strslice_u151(str_p0, i_p1) {
  var result_1140850842 = 0;

  var F = {procname: "strslice.index", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 96;
    F.filename = "strslice.nim";
    result_1140850842 = addInt(str_p0.Field1, i_p1);
  framePtr = F.prev;

  return result_1140850842;

}

function cut__strslice_u160(str_p0, slc_p1) {
  var result_1140850853 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 105;
    F.filename = "strslice.nim";
    result_1140850853 = nimCopy(result_1140850853, cut__strslice_u155(str_p0, index__strslice_u151(str_p0, slc_p1.a), index__strslice_u151(str_p0, slc_p1.b)), NTI1140850691);
  framePtr = F.prev;

  return result_1140850853;

}

function HEX2EHEX2E__strslice_u66(a_p0, b_p1) {
  var result_1140850761 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 420;
    F.filename = "system.nim";
    result_1140850761 = nimCopy(result_1140850761, {a: a_p0, b: b_p1}, NTI1140850751);
  framePtr = F.prev;

  return result_1140850761;

}

function high__strslice_u141(str_p0) {
  var result_1140850831 = 0;

  var F = {procname: "strslice.high", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "strslice.nim";
    result_1140850831 = subInt(str_p0.Field2, str_p0.Field1);
  framePtr = F.prev;

  return result_1140850831;

}

function len__strslice_u144(str_p0) {
  var result_1140850834 = 0;

  var F = {procname: "strslice.len", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "strslice.nim";
    result_1140850834 = addInt(high__strslice_u141(str_p0), 1);
  framePtr = F.prev;

  return result_1140850834;

}

function HEX3DHEX3D__parse_u116(a_p0, b_p1) {
  var result_520093815 = false;

  var F = {procname: "parse.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 35;
    F.filename = "parse.nim";
    result_520093815 = eqStrings(a_p0.Field0, b_p1.Field0);
  framePtr = F.prev;

  return result_520093815;

}

function reprEnum(e_p0, typ_p1) {
  var result_33557613 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557614 = false;
    F.line = 31;
    var item_33557615 = typ_p1.node.sons[e_p0];
    F.line = 32;
    tmp_33557614 = item_33557615 !== undefined;
    if (tmp_33557614) {
    F.line = 34;
    result_33557613 = nimCopy(null, makeNimstrLit(item_33557615.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557613 = nimCopy(null, (HEX24__systemZdollars_u8(e_p0)).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41]), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557613;

}

function init__error_u24(error_p0, message_p1, pos_p2, code_p3, line_p4, column_p5, length_p6, related_p7, origPos_p8, origDoc_p9) {
  var result_1241514023 = null;

  var F = {procname: "error.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((0 <= pos_p2))) {
    F.line = 43;
    F.filename = "error.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim(43, 5) `pos >= 0` "));
    }
    
    F.line = 44;
    error_p0.message = nimCopy(null, message_p1, NTI33554449);
    F.line = 45;
    error_p0.pos = pos_p2;
    F.line = 46;
    error_p0.code = code_p3;
    F.line = 47;
    error_p0.line = line_p4;
    F.line = 48;
    error_p0.column = column_p5;
    F.line = 49;
    error_p0.length = length_p6;
    F.line = 50;
    error_p0.related = nimCopy(null, related_p7, NTI1241514002);
    F.line = 51;
    error_p0.origPos = origPos_p8;
    F.line = 52;
    error_p0.origDoc = nimCopy(null, origDoc_p9, NTI33554449);
    F.line = 53;
    result_1241514023 = error_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1241514023;

}

function new__parse_u1537() {
  var result_520095236 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 820;
    F.filename = "system.nim";
    var r_520095238 = null;
    F.line = 823;
    r_520095238 = ({message: [], pos: 0, code: 0, line: 0, column: 0, length: 0, related: [], origPos: 0, origDoc: []});
    F.line = 824;
    result_520095236 = r_520095238;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095236;

}

function str__strslice_u132(str_p0) {
  var result_1140850822 = null;
  var result_1140850822_Idx = 0;

  var F = {procname: "strslice.str", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 80;
    F.filename = "strslice.nim";
    result_1140850822 = str_p0.Field0[0]; result_1140850822_Idx = str_p0.Field0[1];
  framePtr = F.prev;

  return [result_1140850822, result_1140850822_Idx];

}

function find__strslice_u337(slice_p0, pattern_p1, start_p2, size_p3) {
    var Temporary1;

  var result_1140851032 = {Field0: 0, Field1: 0};

  var F = {procname: "strslice.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((0 <= start_p2) && (start_p2 <= addInt(subInt(slice_p0.Field2, slice_p0.Field1), 1))))) {
    F.line = 253;
    F.filename = "strslice.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim(253, 5) `start >= 0 and start <= slice.stop - slice.start + 1` "));
    }
    
    F.line = 254;
    pattern_p1.Field1.lastIndex = addInt(start_p2, slice_p0.Field1);
    F.line = 255;
    var s_1140851038 = toJSStr((Temporary1 = str__strslice_u132(slice_p0), Temporary1)[0][Temporary1[1]]);
    F.line = 256;
    var m_1140851039 = (pattern_p1.Field1.exec(s_1140851038) || []);
    if ((0 < (m_1140851039).length)) {
    F.line = 258;
    var l_1140851044 = (((cstrToNimstr(m_1140851039[chckIndx(0, 0, (m_1140851039).length - 1)])).length) | 0);
    F.line = 259;
    var a_1140851045 = subInt(subInt(pattern_p1.Field1.lastIndex, slice_p0.Field1), ((((m_1140851039[chckIndx(0, 0, (m_1140851039).length - 1)]) == null ? 0 : (m_1140851039[chckIndx(0, 0, (m_1140851039).length - 1)]).length)) | 0));
    if (((size_p3 < 0) || (a_1140851045 <= addInt(start_p2, size_p3)))) {
    F.line = 261;
    var colontmp__520104591 = a_1140851045;
    F.line = 261;
    var colontmp__520104592 = subInt(addInt(a_1140851045, l_1140851044), 1);
    F.line = 261;
    result_1140851032 = nimCopy(result_1140851032, {Field0: colontmp__520104591, Field1: colontmp__520104592}, NTI1140850958);
    break BeforeRet;
    }
    
    }
    
    F.line = 262;
    var colontmp__520104593 = (-1);
    F.line = 262;
    var colontmp__520104594 = (-2);
    F.line = 262;
    result_1140851032 = nimCopy(result_1140851032, {Field0: colontmp__520104593, Field1: colontmp__520104594}, NTI1140850958);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1140851032;

}

function nextComment__parse_u1475() {
  var result_520095174 = {Field0: 0, Field1: 0};

  var F = {procname: "reentry_point.nextComment", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((this.commentPointer1 < this.upperLimit2)) {
    F.line = 466;
    F.filename = "parse.nim";
    var tmpTuple_520095175 = find__strslice_u337(this.document3, this.commentRe4.Field1, this.commentPointer1, (-1));
    F.line = 466;
    var a_520095176 = tmpTuple_520095175["Field0"];
    F.line = 466;
    var b_520095177 = tmpTuple_520095175["Field1"];
    if ((0 <= a_520095176)) {
    F.line = 468;
    this.commentPointer1 = addInt(b_520095177, 1);
    F.line = 469;
    var colontmp__520104424 = a_520095176;
    F.line = 469;
    var colontmp__520104425 = addInt(b_520095177, 1);
    F.line = 469;
    result_520095174 = nimCopy(result_520095174, {Field0: colontmp__520104424, Field1: colontmp__520104425}, NTI520094607);
    break BeforeRet;
    }
    else {
      F.line = 471;
      this.commentPointer1 = this.upperLimit2;
    }
    
    }
    
    F.line = 472;
    var colontmp__520104426 = (-1);
    F.line = 472;
    var colontmp__520104427 = (-2);
    F.line = 472;
    result_520095174 = nimCopy(result_520095174, {Field0: colontmp__520104426, Field1: colontmp__520104427}, NTI520094607);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095174;

}

function nsuFindChar(s_p0, sub_p1, start_p2, last_p3) {
    var Temporary1;

  var result_1006634663 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1968;
    F.filename = "strutils.nim";
    result_1006634663 = (-1);
    F.line = 1969;
    if ((last_p3 < 0)) {
    Temporary1 = (s_p0).length - 1;
    }
    else {
    Temporary1 = last_p3;
    }
    
    var last_1006634664 = Temporary1;
    Label2: {
      F.line = 1972;
      var iHEX60gensym176_1006634678 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520104600 = 0;
      F.line = 1972;
      F.filename = "strutils.nim";
      colontmp__520104600 = start_p2;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520104601 = colontmp__520104600;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_520104601 <= last_1006634664)) break Label4;
            F.line = 1986;
            F.filename = "strutils.nim";
            iHEX60gensym176_1006634678 = res_520104601;
            if ((s_p0[chckIndx(iHEX60gensym176_1006634678, 0, (s_p0).length - 1)] == sub_p1)) {
            F.line = 1974;
            result_1006634663 = iHEX60gensym176_1006634678;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520104601 = addInt(res_520104601, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_1006634663;

}

function nsuFindStrA(a_p0, s_p1, sub_p2, start_p3, last_p4) {
    var Temporary1;

  var result_1006634642 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1928;
    F.filename = "strutils.nim";
    if ((last_p4 < 0)) {
    Temporary1 = (s_p1).length - 1;
    }
    else {
    Temporary1 = last_p4;
    }
    
    var last_1006634643 = Temporary1;
    F.line = 1929;
    var subLast_1006634644 = subInt((sub_p2).length, 1);
    if ((subLast_1006634644 == (-1))) {
    F.line = 1934;
    result_1006634642 = start_p3;
    break BeforeRet;
    }
    
    F.line = 1938;
    result_1006634642 = (-1);
    F.line = 1939;
    var skip_1006634645 = start_p3;
    Label2: {
      F.line = 1941;
        Label3: while (true) {
        if (!(subLast_1006634644 <= subInt(last_1006634643, skip_1006634645))) break Label3;
          F.line = 1942;
          var i_1006634646 = subLast_1006634644;
          Label4: {
            F.line = 1943;
              Label5: while (true) {
              if (!(s_p1[chckIndx(addInt(skip_1006634645, i_1006634646), 0, (s_p1).length - 1)] == sub_p2[chckIndx(i_1006634646, 0, (sub_p2).length - 1)])) break Label5;
                if ((i_1006634646 == 0)) {
                F.line = 1945;
                result_1006634642 = skip_1006634645;
                break BeforeRet;
                }
                
                F.line = 1946;
                i_1006634646 = subInt(i_1006634646, 1);
              }
          };
          F.line = 1947;
          skip_1006634645 = addInt(skip_1006634645, a_p0[chckIndx(s_p1[chckIndx(addInt(skip_1006634645, subLast_1006634644), 0, (s_p1).length - 1)], 0, (a_p0).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_1006634642;

}

function fill__pureZstrutils_u1622(a_p0, value_p1) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "algorithm.nim";
    var xHEX60gensym172_1006634591 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym172_1006634591 <= (a_p0).length - 1)) break Label2;
          F.line = 98;
          a_p0[chckIndx(xHEX60gensym172_1006634591, 0, (a_p0).length - 1)] = value_p1;
          F.line = 75;
          xHEX60gensym172_1006634591 = addInt(xHEX60gensym172_1006634591, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_p0, sub_p1) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1901;
    F.filename = "strutils.nim";
    var m_1006634581 = (sub_p1).length;
    F.line = 1902;
    fill__pureZstrutils_u1622(a_p0, m_1006634581);
    Label1: {
      F.line = 1904;
      var i_1006634601 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520104606 = 0;
      F.line = 1904;
      F.filename = "strutils.nim";
      colontmp__520104606 = subInt(m_1006634581, 1);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520104607 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520104607 < colontmp__520104606)) break Label3;
            F.line = 1904;
            F.filename = "strutils.nim";
            i_1006634601 = i_520104607;
            F.line = 1905;
            a_p0[chckIndx(sub_p1[chckIndx(i_1006634601, 0, (sub_p1).length - 1)], 0, (a_p0).length - 1)] = subInt(subInt(m_1006634581, 1), i_1006634601);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520104607 = addInt(i_520104607, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_p0) {
  var result_1006634635 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1914;
    F.filename = "strutils.nim";
    nsuInitSkipTable(result_1006634635[0], sub_p0);
  framePtr = F.prev;

  return result_1006634635[0];

}

function nsuFindStr(s_p0, sub_p1, start_p2, last_p3) {
  var result_1006634700 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((subInt((s_p0).length, start_p2) < (sub_p1).length)) {
    F.line = 2026;
    F.filename = "strutils.nim";
    result_1006634700 = (-1);
    break BeforeRet;
    }
    
    if (((sub_p1).length == 1)) {
    F.line = 2027;
    result_1006634700 = nsuFindChar(s_p0, sub_p1[chckIndx(0, 0, (sub_p1).length - 1)], start_p2, last_p3);
    break BeforeRet;
    }
    
    F.line = 2030;
    result_1006634700 = nsuFindStrA(nsuInitNewSkipTable(sub_p1), s_p0, sub_p1, start_p2, last_p3);
  };
  framePtr = F.prev;

  return result_1006634700;

}

function searchFunc__parse_u1485(start_p0) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_520095185 = {Field0: 0, Field1: 0};

  var F = {procname: "entry_point.searchFunc", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 476;
    F.filename = "parse.nim";
    F.line = 476;
    switch (this.m1.kind) {
    case 0:
      F.line = 478;
      var Temporary2 = this.m1;
      if (ConstSet5[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rxInfo\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI520093767)); }
      var tmpTuple_520095186 = find__strslice_u337(this.HEX3Aup.document3, Temporary2.rxInfo.Field1, start_p0, this.HEX3Aup.searchWindow5);
      F.line = 478;
      var a_520095187 = tmpTuple_520095186["Field0"];
      F.line = 478;
      var b_520095188 = tmpTuple_520095186["Field1"];
      Temporary1 = {Field0: a_520095187, Field1: addInt(subInt(b_520095188, a_520095187), 1)};
      break;
    case 1:
      var Temporary4 = this.m1;
      if (ConstSet6[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI520093767)); }
      var Temporary5 = this.m1;
      if (ConstSet7[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI520093767)); }
      Temporary1 = {Field0: ((nsuFindStr((Temporary3 = str__strslice_u132(this.HEX3Aup.document3), Temporary3)[0][Temporary3[1]], Temporary4.cmpStr, chckRange(start_p0, 0, 2147483647), ((addInt(start_p0, this.HEX3Aup.searchWindow5)) | 0))) | 0), Field1: (((Temporary5.cmpStr).length) | 0)};
      break;
    case 2:
      var Temporary6 = this.m1;
      if (ConstSet8[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'findProc\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI520093767)); }
      Temporary1 = Temporary6.findProc(this.HEX3Aup.document3, start_p0, addInt(start_p0, this.HEX3Aup.searchWindow5));
      break;
    default: 
      Temporary1 = {Field0: (-1), Field1: 0};
      break;
    }
    result_520095185 = nimCopy(result_520095185, Temporary1, NTI520094612);
  framePtr = F.prev;

  return result_520095185;

}

function entry_point__parse_u1482(m_p0) {
    var Temporary1;
    var Temporary2;
          var Temporary5;
          var Temporary8;
                var Temporary11;
    var Temporary12;

  var result_520095180 = 0;

  var F = {procname: "reentry_point.entry_point", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 490;
    F.filename = "parse.nim";
    var HEX3Aenv_520104459 = null;
    F.line = 490;
    HEX3Aenv_520104459 = {m_type: NTI520101639, HEX3Astate: 0, m1: ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null}), HEX3Aup: null};
    F.line = 474;
    HEX3Aenv_520104459.m1 = nimCopy(HEX3Aenv_520104459.m1, m_p0, NTI520093769);
    F.line = 474;
    HEX3Aenv_520104459.HEX3Aup = this;
    F.line = 489;
    Temporary1 = nextComment__parse_u1475.bind(this); Temporary1.ClP_0 = nextComment__parse_u1475; Temporary1.ClE_0 = this;
    var tmpTuple_520095197 = Temporary1();
    F.line = 489;
    var a_520095198 = tmpTuple_520095197["Field0"];
    F.line = 489;
    var b_520095199 = tmpTuple_520095197["Field1"];
    F.line = 490;
    Temporary2 = searchFunc__parse_u1485.bind(HEX3Aenv_520104459); Temporary2.ClP_0 = searchFunc__parse_u1485; Temporary2.ClE_0 = HEX3Aenv_520104459;
    var tmpTuple_520095200 = Temporary2(this.location6);
    F.line = 490;
    var k_520095201 = tmpTuple_520095200["Field0"];
    F.line = 490;
    var length_520095202 = tmpTuple_520095200["Field1"];
    Label3: {
      F.line = 492;
        Label4: while (true) {
        if (!((a_520095198 < b_520095199) && (b_520095199 <= addInt(k_520095201, length_520095202)))) break Label4;
          F.line = 493;
          Temporary5 = nextComment__parse_u1475.bind(this); Temporary5.ClP_0 = nextComment__parse_u1475; Temporary5.ClE_0 = this;
          var tmpTupleAsgn_520095203 = Temporary5();
          F.line = 493;
          a_520095198 = tmpTupleAsgn_520095203["Field0"];
          F.line = 493;
          b_520095199 = tmpTupleAsgn_520095203["Field1"];
        }
    };
    Label6: {
      F.line = 494;
        Label7: while (true) {
        if (!(((a_520095198 < k_520095201) && (k_520095201 < b_520095199)) || ((a_520095198 < addInt(k_520095201, length_520095202)) && (addInt(k_520095201, length_520095202) < b_520095199)))) break Label7;
          F.line = 495;
          Temporary8 = searchFunc__parse_u1485.bind(HEX3Aenv_520104459); Temporary8.ClP_0 = searchFunc__parse_u1485; Temporary8.ClE_0 = HEX3Aenv_520104459;
          var tmpTupleAsgn_520095204 = Temporary8(b_520095199);
          F.line = 495;
          k_520095201 = tmpTupleAsgn_520095204["Field0"];
          F.line = 495;
          length_520095202 = tmpTupleAsgn_520095204["Field1"];
          Label9: {
            F.line = 496;
              Label10: while (true) {
              if (!((a_520095198 < b_520095199) && (b_520095199 <= addInt(k_520095201, length_520095202)))) break Label10;
                F.line = 497;
                Temporary11 = nextComment__parse_u1475.bind(this); Temporary11.ClP_0 = nextComment__parse_u1475; Temporary11.ClE_0 = this;
                var tmpTupleAsgn_520095205 = Temporary11();
                F.line = 497;
                a_520095198 = tmpTupleAsgn_520095205["Field0"];
                F.line = 497;
                b_520095199 = tmpTupleAsgn_520095205["Field1"];
              }
          };
        }
    };
    F.line = 498;
    if ((0 <= k_520095201)) {
    Temporary12 = addInt(k_520095201, length_520095202);
    }
    else {
    Temporary12 = this.upperLimit2;
    }
    
    result_520095180 = Temporary12;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095180;

}

function toStringSlice__nodetree_u766(str_p0) {
  var result_1207960321 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "toStringSlice.toStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "strslice.nim";
    result_1207960321 = nimCopy(result_1207960321, str_p0, NTI1140850691);
  framePtr = F.prev;

  return result_1207960321;

}

function init__parse_u1597(node_p0, name_p1, data_p2, attributes_p3) {
  var result_520095300 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 30;
    F.filename = "nodetree.nim";
    node_p0.nameRef[0] = [[]]; node_p0.nameRef[1] = 0;
    F.line = 31;
    node_p0.nameRef[0][node_p0.nameRef[1]] = nimCopy(null, name_p1, NTI33554449);
    F.line = 43;
    node_p0.textSlice = nimCopy(node_p0.textSlice, toStringSlice__nodetree_u766(data_p2), NTI1140850691);
    F.line = 44;
    node_p0.attributesRef = attributes_p3;
    F.line = 45;
    node_p0.sourcePos = (-1);
    F.line = 46;
    result_520095300 = node_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095300;

}

function reentry_point__parse_u1460(document_p0, location_p1, rules_p2, commentRe_p3, searchWindowSize_p4) {
    var Temporary1;
    var Temporary2;
              var Temporary6;
              var Temporary8;

  var result_520095164 = {Field0: null, Field1: 0};

  var F = {procname: "parse.reentry_point", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 455;
    F.filename = "parse.nim";
    var HEX3Aenv_520104443 = null;
    F.line = 455;
    HEX3Aenv_520104443 = {m_type: NTI520101634, HEX3Astate: 0, commentPointer1: 0, upperLimit2: 0, document3: {Field0: [null, 0], Field1: 0, Field2: 0}, commentRe4: {Field0: [], Field1: {Field0: null, Field1: null}}, searchWindow5: 0, location6: 0};
    F.line = 451;
    HEX3Aenv_520104443.document3 = nimCopy(HEX3Aenv_520104443.document3, document_p0, NTI1140850691);
    F.line = 451;
    HEX3Aenv_520104443.location6 = location_p1;
    F.line = 452;
    HEX3Aenv_520104443.commentRe4 = nimCopy(HEX3Aenv_520104443.commentRe4, commentRe_p3, NTI520093738);
    F.line = 455;
    HEX3Aenv_520104443.upperLimit2 = addInt(len__strslice_u144(HEX3Aenv_520104443.document3), 1);
    F.line = 457;
    var pos_520095166 = HEX3Aenv_520104443.location6;
    F.line = 458;
    var closestMatch_520095167 = HEX3Aenv_520104443.upperLimit2;
    F.line = 459;
    if ((searchWindowSize_p4 < 0)) {
    Temporary1 = subInt(len__strslice_u144(HEX3Aenv_520104443.document3), HEX3Aenv_520104443.location6);
    }
    else {
    Temporary1 = searchWindowSize_p4;
    }
    
    HEX3Aenv_520104443.searchWindow5 = Temporary1;
    F.line = 461;
    var skipNode_520095169 = null;
    F.line = 462;
    if (!(HEX3DHEX3D__parse_u116(HEX3Aenv_520104443.commentRe4, RxNeverMatch_520093816))) {
    Temporary2 = HEX3Aenv_520104443.location6;
    }
    else {
    Temporary2 = HEX3Aenv_520104443.upperLimit2;
    }
    
    HEX3Aenv_520104443.commentPointer1 = Temporary2;
    Label3: {
      F.line = 500;
      var rule_520095228 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104586 = 0;
      F.line = 250;
      var L_520104587 = (rules_p2).length;
      Label4: {
        F.line = 251;
          Label5: while (true) {
          if (!(i_520104586 < L_520104587)) break Label5;
            F.line = 500;
            F.filename = "parse.nim";
            rule_520095228 = rules_p2[chckIndx(i_520104586, 0, (rules_p2).length - 1)];
            F.line = 501;
            switch (rule_520095228.kind) {
            case 3:
              F.line = 503;
              var Temporary6 = rule_520095228;
              if (ConstSet4[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI520093767)); }
              var parser_520095229 = Temporary6.consumeParser;
              F.line = 504;
              skipNode_520095169 = null;
              F.line = 505;
++excHandler;
              try {
              F.line = 506;
              var tmpTupleAsgn_520095230 = parser_520095229.call(parser_520095229, HEX3Aenv_520104443.location6);
              F.line = 506;
              skipNode_520095169 = tmpTupleAsgn_520095230["Field0"];
              F.line = 506;
              pos_520095166 = tmpTupleAsgn_520095230["Field1"];
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              framePtr = F;
              if (lastJSError && (isObj(lastJSError.m_type, NTI520093785))) {
              F.line = 508;
              var pe_520095231 = getCurrentException();
              F.line = 508;
              var msg_520095232 = ([69,114,114,111,114,32,119,104,105,108,101,32,115,101,97,114,99,104,105,110,103,32,114,101,45,101,110,116,114,121,32,112,111,105,110,116,32,119,105,116,104,32,112,97,114,115,101,114]).concat(HEX24__parse_u1306(parser_520095229),[58,32],pe_520095231.message);
              F.line = 509;
              var error_520095266 = init__error_u24(new__parse_u1537(), msg_520095232, HEX3Aenv_520104443.location6, 1301, (-1), (-1), (-1), [], (-1), []);
              F.line = 510;
              grammar__parse_u1419(parser_520095229).errors.push(error_520095266);;
              F.line = 512;
              pos_520095166 = HEX3Aenv_520104443.upperLimit2;
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              framePtr = F;
              }
              if (!((skipNode_520095169 == null))) {
              if ((pos_520095166 < closestMatch_520095167)) {
              F.line = 515;
              closestMatch_520095167 = pos_520095166;
              }
              
              }
              
              break;
            default: 
              F.line = 517;
              Temporary8 = entry_point__parse_u1482.bind(HEX3Aenv_520104443); Temporary8.ClP_0 = entry_point__parse_u1482; Temporary8.ClE_0 = HEX3Aenv_520104443;
              pos_520095166 = Temporary8(rule_520095228);
              if ((pos_520095166 < closestMatch_520095167)) {
              F.line = 519;
              skipNode_520095169 = null;
              F.line = 520;
              closestMatch_520095167 = pos_520095166;
              }
              
              break;
            }
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104586 += 1;
            if (!(((rules_p2).length == L_520104587))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((HEX3Aenv_520104443.upperLimit2 <= closestMatch_520095167)) {
    F.line = 522;
    F.filename = "parse.nim";
    closestMatch_520095167 = (-1);
    }
    
    if ((skipNode_520095169 == null)) {
    F.line = 524;
    var skipSlice_520095289 = cut__strslice_u160(HEX3Aenv_520104443.document3, HEX2EHEX2E__strslice_u66(HEX3Aenv_520104443.location6, subInt(nimMax(closestMatch_520095167, HEX3Aenv_520104443.location6), 1)));
    F.line = 526;
    skipNode_520095169 = init__parse_u1597(new__nodetree_u708(), [95,95,90,79,77,66,73,69], skipSlice_520095289, null);
    }
    
    F.line = 527;
    var colontmp__520104589 = skipNode_520095169;
    F.line = 527;
    var colontmp__520104590 = subInt(closestMatch_520095167, HEX3Aenv_520104443.location6);
    F.line = 527;
    result_520095164 = nimCopy(result_520095164, {Field0: colontmp__520104589, Field1: colontmp__520104590}, NTI520094605);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095164;

}

function HEX3DHEX3D__parse_u1742(str_p0, cmp_p1) {
  var result_520095442 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((len__strslice_u144(str_p0) == len__strslice_u144(cmp_p1)))) {
    F.line = 152;
    F.filename = "strslice.nim";
    result_520095442 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 154;
      var i_520095443 = 0;
      F.line = 116;
      F.filename = "iterators_1.nim";
      var res_520104612 = cmp_p1.Field1;
      Label2: {
        F.line = 117;
          Label3: while (true) {
          if (!(res_520104612 <= cmp_p1.Field2)) break Label3;
            F.line = 154;
            F.filename = "strslice.nim";
            i_520095443 = res_520104612;
            if (!((str_p0.Field0[0][str_p0.Field0[1]][chckIndx(subInt(addInt(i_520095443, str_p0.Field1), cmp_p1.Field1), 0, (str_p0.Field0[0][str_p0.Field0[1]]).length - 1)] == cmp_p1.Field0[0][cmp_p1.Field0[1]][chckIndx(i_520095443, 0, (cmp_p1.Field0[0][cmp_p1.Field0[1]]).length - 1)]))) {
            F.line = 155;
            result_520095442 = false;
            break BeforeRet;
            }
            
            F.line = 119;
            F.filename = "iterators_1.nim";
            res_520104612 = addInt(res_520104612, 1);
          }
      };
    };
    F.line = 156;
    F.filename = "strslice.nim";
    result_520095442 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095442;

}

function textHEX3D__parse_u1731(node_p0, text_p1) {
  var F = {procname: "text=.text=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    if ((0 < (node_p0.childrenSeq).length)) {
    F.line = 90;
    F.filename = "nodetree.nim";
    node_p0.childrenSeq = nimCopy(null, [], NTI1207959576);
    }
    
    if (HEX3DHEX3D__parse_u1742(node_p0.textSlice, EmptyStringSlice_1140850746)) {
    F.line = 92;
    node_p0.textSlice = nimCopy(node_p0.textSlice, toStringSlice__nodetree_u766(text_p1), NTI1140850691);
    }
    else {
      F.line = 95;
      node_p0.textSlice = nimCopy(node_p0.textSlice, text_p1, NTI1140850691);
    }
    
  framePtr = F.prev;

  
}

function last__strslice_u138(str_p0) {
  var result_1140850828 = 0;

  var F = {procname: "strslice.last", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 84;
    F.filename = "strslice.nim";
    result_1140850828 = str_p0.Field2;
  framePtr = F.prev;

  return result_1140850828;

}

function first__strslice_u135(str_p0) {
  var result_1140850825 = 0;

  var F = {procname: "strslice.first", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 82;
    F.filename = "strslice.nim";
    result_1140850825 = str_p0.Field1;
  framePtr = F.prev;

  return result_1140850825;

}

function runeLenAt__pureZunicode_u94(s_p0, i_p1) {
  var result_956301409 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_p0[chckIndx(i_p1, 0, (s_p0).length - 1)] <= 127)) {
    F.line = 74;
    F.filename = "unicode.nim";
    result_956301409 = 1;
    }
    else {
    if (((s_p0[chckIndx(i_p1, 0, (s_p0).length - 1)] >>> 5) == 6)) {
    F.line = 75;
    result_956301409 = 2;
    }
    else {
    if (((s_p0[chckIndx(i_p1, 0, (s_p0).length - 1)] >>> 4) == 14)) {
    F.line = 76;
    result_956301409 = 3;
    }
    else {
    if (((s_p0[chckIndx(i_p1, 0, (s_p0).length - 1)] >>> 3) == 30)) {
    F.line = 77;
    result_956301409 = 4;
    }
    else {
    if (((s_p0[chckIndx(i_p1, 0, (s_p0).length - 1)] >>> 2) == 62)) {
    F.line = 78;
    result_956301409 = 5;
    }
    else {
    if (((s_p0[chckIndx(i_p1, 0, (s_p0).length - 1)] >>> 1) == 126)) {
    F.line = 79;
    result_956301409 = 6;
    }
    else {
      F.line = 80;
      result_956301409 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_956301409;

}

function runeLenAt__pureZunicode_u7221(s_p0, i_p1) {
  var result_956308536 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1166;
    F.filename = "unicode.nim";
    result_956308536 = runeLenAt__pureZunicode_u94((s_p0.slice(0, (s_p0).length - 1 + 1)), i_p1);
  framePtr = F.prev;

  return result_956308536;

}

function runeLen__nodetree_u560(node_p0) {
          var Temporary3;

  var result_1207960114 = 0;

  var F = {procname: "nodetree.runeLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 138;
    F.filename = "nodetree.nim";
    result_1207960114 = 0;
    if ((((node_p0.childrenSeq).length == 0) && (0 < len__strslice_u144(node_p0.textSlice)))) {
    F.line = 140;
    var last_1207960118 = last__strslice_u138(node_p0.textSlice);
    F.line = 141;
    var i_1207960119 = first__strslice_u135(node_p0.textSlice);
    Label1: {
      F.line = 142;
        Label2: while (true) {
        if (!(i_1207960119 <= last_1207960118)) break Label2;
          F.line = 143;
          i_1207960119 = addInt(i_1207960119, runeLenAt__pureZunicode_u7221((Temporary3 = str__strslice_u132(node_p0.textSlice), Temporary3)[0][Temporary3[1]], chckRange(i_1207960119, 0, 2147483647)));
          F.line = 144;
          result_1207960114 = addInt(result_1207960114, 1);
        }
    };
    }
    else {
      Label4: {
        F.line = 146;
        var child_1207960133 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520104620 = 0;
        F.line = 250;
        var L_520104621 = (node_p0.childrenSeq).length;
        Label5: {
          F.line = 251;
            Label6: while (true) {
            if (!(i_520104620 < L_520104621)) break Label6;
              F.line = 146;
              F.filename = "nodetree.nim";
              child_1207960133 = node_p0.childrenSeq[chckIndx(i_520104620, 0, (node_p0.childrenSeq).length - 1)];
              F.line = 147;
              result_1207960114 = addInt(result_1207960114, runeLen__nodetree_u560(child_1207960133));
              F.line = 13;
              F.filename = "iterators.nim";
              i_520104620 += 1;
              if (!(((node_p0.childrenSeq).length == L_520104621))) {
              F.line = 254;
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  framePtr = F.prev;

  return result_1207960114;

}

function assignSourcePos__nodetree_u628(node_p0, sourcePos_p1) {
  var result_1207960183 = 0;

  var F = {procname: "nodetree.assignSourcePos", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((0 <= sourcePos_p1))) {
    F.line = 157;
    F.filename = "nodetree.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim(157, 3) `sourcePos >= 0` "));
    }
    
    if (((0 <= node_p0.sourcePos) && !((node_p0.sourcePos == sourcePos_p1)))) {
    F.line = 159;
    raiseException({message: [115,111,117,114,99,101,32,112,111,115,105,116,105,111,110,32,109,117,115,116,32,110,111,116,32,98,101,32,114,101,97,115,115,105,103,110,101,100,33], parent: null, m_type: NTI1207959560, name: null, trace: [], up: null}, "SourcePosReAssigmentDefect");
    }
    
    F.line = 160;
    node_p0.sourcePos = sourcePos_p1;
    F.line = 161;
    var pos_1207960190 = sourcePos_p1;
    if (((node_p0.childrenSeq).length == 0)) {
    F.line = 163;
    result_1207960183 = addInt(pos_1207960190, runeLen__nodetree_u560(node_p0));
    break BeforeRet;
    }
    else {
      Label1: {
        F.line = 165;
        var child_1207960197 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520104615 = 0;
        F.line = 250;
        var L_520104616 = (node_p0.childrenSeq).length;
        Label2: {
          F.line = 251;
            Label3: while (true) {
            if (!(i_520104615 < L_520104616)) break Label3;
              F.line = 165;
              F.filename = "nodetree.nim";
              child_1207960197 = node_p0.childrenSeq[chckIndx(i_520104615, 0, (node_p0.childrenSeq).length - 1)];
              if (!((child_1207960197 == null))) {
              if ((child_1207960197.sourcePos < 0)) {
              F.line = 168;
              pos_1207960190 = addInt(pos_1207960190, assignSourcePos__nodetree_u628(child_1207960197, pos_1207960190));
              }
              else {
                F.line = 170;
              pos_1207960190 = addInt(pos_1207960190, runeLen__nodetree_u560(child_1207960197));
              }
              
              }
              
              F.line = 13;
              F.filename = "iterators.nim";
              i_520104615 += 1;
              if (!(((node_p0.childrenSeq).length == L_520104616))) {
              F.line = 254;
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
    F.line = 171;
    F.filename = "nodetree.nim";
    result_1207960183 = pos_1207960190;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1207960183;

}

function init__nodetree_u817(node_p0, name_p1, name_p1_Idx, data_p2, attributes_p3) {
  var result_1207960376 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_p0.nameRef[0] = name_p1; node_p0.nameRef[1] = name_p1_Idx;
    F.line = 33;
    node_p0.childrenSeq = nimCopy(null, data_p2, NTI1207959576);
    F.line = 34;
    node_p0.textSlice = nimCopy(node_p0.textSlice, EmptyStringSlice_1140850746, NTI1140850691);
    F.line = 44;
    node_p0.attributesRef = attributes_p3;
    F.line = 45;
    node_p0.sourcePos = (-1);
    F.line = 46;
    result_1207960376 = node_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1207960376;

}

function HEX5BHEX5D__parse_u1795(s_p0, i_p1) {
  var result_520095495 = null;
  var result_520095495_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_520095495 = s_p0; result_520095495_Idx = chckIndx(subInt((s_p0).length, i_p1), 0, (s_p0).length - 1);
  framePtr = F.prev;

  return [result_520095495, result_520095495_Idx];

}

function handle_error__parse_u1668(parser_p0, pe_p1, location_p2) {
      var Temporary4;

  var result_520095368 = {Field0: null, Field1: 0};

  var F = {procname: "parse.handle_error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((0 <= pe_p1.node_orig_len))) {
    F.line = 531;
    F.filename = "parse.nim";
    failedAssertImpl__stdZassertions_u85((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(531, 3) `pe.node_orig_len >= 0` ")).concat(HEX24__parse_u1218(pe_p1)));
    }
    
    if (!((0 <= pe_p1.location))) {
    F.line = 532;
    failedAssertImpl__stdZassertions_u85((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(532, 3) `pe.location >= 0` ")).concat(HEX24__parse_u1218(pe_p1)));
    }
    
    F.line = 534;
    var grammar_520095379 = grammar__parse_u1419(pe_p1.origin);
    F.line = 535;
    var gap_520095380 = subInt(pe_p1.location, location_p2);
    F.line = 536;
    var cut_520095392 = cut__strslice_u160(grammar_520095379.document, HEX2EHEX2E__strslice_u66(location_p2, subInt(addInt(location_p2, gap_520095380), 1)));
    F.line = 537;
    var rules_520095393 = nimCopy(null, pe_p1.origin.resumeList, NTI520093809);
    F.line = 539;
    var node_520095394 = EmptyNode_520094000;
    F.line = 540;
    var tail_520095395 = false;
    F.line = 541;
    var nextLoc_520095396 = addInt(pe_p1.location, pe_p1.node_orig_len);
    F.line = 542;
    var tmpTuple_520095397 = reentry_point__parse_u1460(grammar_520095379.document, nextLoc_520095396, rules_520095393, grammar_520095379.commentRe, 10000);
    F.line = 542;
    var skipNode_520095398 = tmpTuple_520095397["Field0"];
    F.line = 542;
    var i_520095399 = tmpTuple_520095397["Field1"];
    if (((0 <= i_520095399) || (parser_p0 == grammar_520095379.root))) {
    F.line = 545;
    var zombie_520095404 = null;
    if ((i_520095399 < 0)) {
    F.line = 546;
    i_520095399 = 0;
    }
    
    Label1: {
      F.line = 547;
      var child_520095408 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104406 = 0;
      F.line = 250;
      var L_520104407 = (pe_p1.node.childrenSeq).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104406 < L_520104407)) break Label3;
            F.line = 547;
            F.filename = "parse.nim";
            child_520095408 = pe_p1.node.childrenSeq[chckIndx(i_520104406, 0, (pe_p1.node.childrenSeq).length - 1)];
            if (eqStrings(child_520095408.nameRef[0][child_520095408.nameRef[1]], [95,95,90,79,77,66,73,69])) {
            F.line = 549;
            zombie_520095404 = child_520095408;
            F.line = 550;
            break Label1;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104406 += 1;
            if (!(((pe_p1.node.childrenSeq).length == L_520104407))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((!((zombie_520095404 == null)) && (((zombie_520095404.childrenSeq).length == 0) && (len__strslice_u144(zombie_520095404.textSlice) == 0)))) {
    F.line = 552;
    F.filename = "parse.nim";
    textHEX3D__parse_u1731(zombie_520095404, cut__strslice_u160(grammar_520095379.document, HEX2EHEX2E__strslice_u66(location_p2, subInt(addInt(location_p2, i_520095399), 1))));
    F.line = 553;
    tail_520095395 = false;
    }
    
    F.line = 554;
    nextLoc_520095396 = addInt(nextLoc_520095396, i_520095399);
    if (pe_p1.first_throw) {
    F.line = 556;
    node_520095394 = pe_p1.node;
    if ((tail_520095395 && !((skipNode_520095398 == null)))) {
    F.line = 557;
    node_520095394.childrenSeq.push(skipNode_520095398);;
    }
    
    }
    else {
      if (!((skipNode_520095398 == null))) {
      F.line = 562;
      F.line = 177;
      F.filename = "nodetree.nim";
      (assignSourcePos__nodetree_u628(init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [init__parse_u1597(new__nodetree_u708(), [95,95,90,79,77,66,73,69], cut_520095392, null), pe_p1.node, skipNode_520095398], null), location_p2));
      node_520095394 = init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [init__parse_u1597(new__nodetree_u708(), [95,95,90,79,77,66,73,69], cut_520095392, null), pe_p1.node, skipNode_520095398], null);
      }
      else {
        if (true) {
        F.line = 564;
        F.filename = "parse.nim";
        failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(564, 9) `false` Unrechable, theoretically..."));
        }
        
      }
      
    }
    
    }
    else {
    if (pe_p1.first_throw) {
    F.line = 566;
    pe_p1.first_throw = false;
    F.line = 567;
    raiseException(pe_p1, "ParsingException:ObjectType");
    }
    else {
    if (((Temporary4 = HEX5BHEX5D__parse_u1795(grammar_520095379.errors, 1), Temporary4)[0][Temporary4[1]].code == 1015)) {
    F.line = 569;
    F.line = 177;
    F.filename = "nodetree.nim";
    (assignSourcePos__nodetree_u628(init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [pe_p1.node], null), location_p2));
    node_520095394 = init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [pe_p1.node], null);
    }
    else {
      if ((gap_520095380 == 0)) {
      F.line = 572;
      F.filename = "parse.nim";
      F.line = 177;
      F.filename = "nodetree.nim";
      (assignSourcePos__nodetree_u628(init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [pe_p1.node], null), location_p2));
      node_520095394 = init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [pe_p1.node], null);
      }
      else {
        F.line = 574;
        F.filename = "parse.nim";
        F.line = 177;
        F.filename = "nodetree.nim";
        (assignSourcePos__nodetree_u628(init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [init__parse_u1597(new__nodetree_u708(), [95,95,90,79,77,66,73,69], cut_520095392, null), pe_p1.node], null), location_p2));
        node_520095394 = init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [init__parse_u1597(new__nodetree_u708(), [95,95,90,79,77,66,73,69], cut_520095392, null), pe_p1.node], null);
      }
      
      F.line = 575;
      F.filename = "parse.nim";
      pe_p1.node = node_520095394;
      F.line = 576;
      pe_p1.node_orig_len = addInt(pe_p1.node_orig_len, gap_520095380);
      F.line = 577;
      pe_p1.location = location_p2;
      F.line = 578;
      pe_p1.first_throw = false;
      F.line = 579;
      raiseException(pe_p1, "ParsingException:ObjectType");
    }
    }}
    F.line = 580;
    var colontmp__520104409 = node_520095394;
    F.line = 580;
    var colontmp__520104410 = nextLoc_520095396;
    F.line = 580;
    result_520095368 = nimCopy(result_520095368, {Field0: colontmp__520104409, Field1: colontmp__520104410}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095368;

}

function nextPowerOfTwo__pureZmath_u274(x_p0) {
  var result_687866132 = 0;

    result_687866132 = (x_p0 - 1);
    result_687866132 = (result_687866132 | (result_687866132 >> 16));
    result_687866132 = (result_687866132 | (result_687866132 >> 8));
    result_687866132 = (result_687866132 | (result_687866132 >> 4));
    result_687866132 = (result_687866132 | (result_687866132 >> 2));
    result_687866132 = (result_687866132 | (result_687866132 >> 1));
    result_687866132 += (1 + ((x_p0 <= 0) ? 1 : 0));

  return result_687866132;

}

function slotsNeeded__pureZcollectionsZtables_u42(count_p0) {
  var result_1107296300 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "hashcommon.nim";
    result_1107296300 = nextPowerOfTwo__pureZmath_u274(addInt(divInt(mulInt(count_p0, 3), 2), 4));
  framePtr = F.prev;

  return result_1107296300;

}

function mustRehash__parse_u2798(t_p0) {
  var result_520096497 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_p0.counter < (t_p0.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_520096497 = ((mulInt((t_p0.data).length, 2) < mulInt(t_p0.counter, 3)) || (subInt((t_p0.data).length, t_p0.counter) < 4));
  framePtr = F.prev;

  return result_520096497;

}

function rawInsert__parse_u3275(t_p0, data_p1, data_p1_Idx, key_p2, val_p3, hc_p4, h_p5) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field1 = key_p2;
    F.line = 26;
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field2 = nimCopy(data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field2, val_p3, NTI520093764);
    F.line = 27;
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field0 = hc_p4;
  framePtr = F.prev;

  
}

function enlarge__parse_u2974(t_p0) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 247;
    F.filename = "tables.nim";
    var n_520096676 = [];
    F.line = 248;
    n_520096676 = new Array(chckRange(mulInt((t_p0.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_p0.data).length, 2), 0, 2147483647) ; ++i) { n_520096676[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }    F.line = 249;
    F.line = 249;
    var HEX3Atmp_520104629 = nimCopy(null, t_p0.data, NTI520093804);
    F.line = 249;
    t_p0.data = n_520096676;
    F.line = 249;
    n_520096676 = HEX3Atmp_520104629;
    Label1: {
      F.line = 250;
      var i_520096747 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520104625 = 0;
      F.line = 250;
      F.filename = "tables.nim";
      colontmp__520104625 = (n_520096676).length - 1;
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520104627 = 0;
      Label2: {
        F.line = 69;
          Label3: while (true) {
          if (!(res_520104627 <= colontmp__520104625)) break Label3;
            F.line = 250;
            F.filename = "tables.nim";
            i_520096747 = res_520104627;
            F.line = 251;
            var eh_520096801 = n_520096676[chckIndx(i_520096747, 0, (n_520096676).length - 1)].Field0;
            if (isFilled__pureZcollectionsZtables_u31(eh_520096801)) {
            F.line = 253;
            var j_520096805 = (eh_520096801 & (t_p0.data).length - 1);
            Label4: {
              F.line = 254;
                Label5: while (true) {
                if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(j_520096805, 0, (t_p0.data).length - 1)].Field0)) break Label5;
                  F.line = 255;
                  j_520096805 = nextTry__pureZcollectionsZtables_u34(j_520096805, (t_p0.data).length - 1);
                }
            };
            F.line = 257;
            rawInsert__parse_u3275(t_p0, t_p0, "data", n_520096676[chckIndx(i_520096747, 0, (n_520096676).length - 1)].Field1, n_520096676[chckIndx(i_520096747, 0, (n_520096676).length - 1)].Field2, eh_520096801, j_520096805);
            }
            
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520104627 = addInt(res_520104627, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC__parse_u3444(t_p0, key_p1, hc_p2) {
  var result_520097146 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_p0.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_520097146 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_520097204 = (hc_p2 & (t_p0.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_520097204, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_520097204, 0, (t_p0.data).length - 1)].Field0 == hc_p2) && (t_p0.data[chckIndx(h_520097204, 0, (t_p0.data).length - 1)].Field1 == key_p1))) {
          F.line = 51;
          result_520097146 = h_520097204;
          break BeforeRet;
          }
          
          F.line = 52;
          h_520097204 = nextTry__pureZcollectionsZtables_u34(h_520097204, (t_p0.data).length - 1);
        }
    };
    F.line = 53;
    result_520097146 = subInt((-1), h_520097204);
  };
  framePtr = F.prev;

  return result_520097146;

}

function HEX5BHEX5DHEX3D__parse_u2607(t_p0, key_p1, val_p2) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_p0.data).length == 0)) {
    F.line = 182;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym96_520096364 = slotsNeeded__pureZcollectionsZtables_u42(32);
    F.line = 186;
    t_p0.counter = 0;
    F.line = 187;
    t_p0.data = new Array(chckRange(correctSizeHEX60gensym96_520096364, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_520096364, 0, 2147483647) ; ++i) { t_p0.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }    }
    
    F.line = 59;
    var hc_520096373 = [0];
    F.line = 60;
    var index_520096380 = rawGet__parse_u2124(t_p0, key_p1, hc_520096373, 0);
    if ((0 <= index_520096380)) {
    F.line = 61;
    t_p0.data[chckIndx(index_520096380, 0, (t_p0.data).length - 1)].Field2 = nimCopy(t_p0.data[chckIndx(index_520096380, 0, (t_p0.data).length - 1)].Field2, val_p2, NTI520093764);
    }
    else {
      if (((t_p0.data).length == 0)) {
      F.line = 182;
      var correctSizeHEX60gensym99_520096489 = slotsNeeded__pureZcollectionsZtables_u42(32);
      F.line = 186;
      t_p0.counter = 0;
      F.line = 187;
      t_p0.data = new Array(chckRange(correctSizeHEX60gensym99_520096489, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym99_520096489, 0, 2147483647) ; ++i) { t_p0.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }      }
      
      if (mustRehash__parse_u2798(t_p0)) {
      F.line = 51;
      enlarge__parse_u2974(t_p0);
      F.line = 52;
      index_520096380 = rawGetKnownHC__parse_u3444(t_p0, key_p1, hc_520096373[0]);
      }
      
      F.line = 53;
      index_520096380 = subInt((-1), index_520096380);
      F.line = 54;
      rawInsert__parse_u3275(t_p0, t_p0, "data", key_p1, val_p2, hc_520096373[0], index_520096380);
      F.line = 62;
      t_p0.counter = addInt(t_p0.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function memoizationWrapper__parse_u503(parser_p0, location_p1) {
  var result_520095741 = {Field0: null, Field1: 0};

  var F = {procname: "parse.memoizationWrapper", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 605;
    F.filename = "parse.nim";
    var grammar_520095742 = grammar__parse_u1419(parser_p0);
    if ((location_p1 < grammar_520095742.rollbackLocation)) {
    F.line = 606;
    rollback__parse_u1957(grammar_520095742, location_p1);
    }
    
    if (contains__parse_u2096(parser_p0.visited, ((location_p1) | 0))) {
    F.line = 607;
    result_520095741 = nimCopy(result_520095741, HEX5BHEX5D__parse_u2425(parser_p0.visited, ((location_p1) | 0)), NTI520093764);
    break BeforeRet;
    }
    
    F.line = 609;
    var memoization_520096249 = (grammar_520095742.flags[1] != undefined);
    F.line = 610;
    grammar_520095742.flags[1] = true;
    F.line = 612;
++excHandler;
    try {
    F.line = 613;
    result_520095741 = nimCopy(result_520095741, parse__parse_u1955(parser_p0, location_p1), NTI520093764);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI520093785))) {
    F.line = 615;
    var pe_520096254 = getCurrentException();
    F.line = 615;
    result_520095741 = nimCopy(result_520095741, handle_error__parse_u1668(parser_p0, pe_520096254, location_p1), NTI520093764);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    F.line = 617;
    var node_520096255 = result_520095741.Field0;
    if ((node_520096255 == null)) {
    F.line = 619;
    grammar_520095742.farthestFail = location_p1;
    F.line = 620;
    grammar_520095742.farthestParser = parser_p0;
    }
    else {
    if (!((node_520096255 == EmptyNode_520094000))) {
    F.line = 622;
    node_520096255.sourcePos = location_p1;
    }
    }
    if ((grammar_520095742.flags[1] != undefined)) {
    F.line = 625;
    HEX5BHEX5DHEX3D__parse_u2607(parser_p0.visited, ((location_p1) | 0), result_520095741);
    if (!(memoization_520096249)) {
    F.line = 626;
    delete grammar_520095742.flags[1];
    }
    
    }
    
  };
  framePtr = F.prev;

  return result_520095741;

}

function initTable__parse_u896(initialSize_p0) {
  var result_520094596 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 281;
    F.filename = "tables.nim";
    result_520094596 = nimCopy(result_520094596, ({data: [], counter: 0}), NTI520093801);
    F.line = 182;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym6_520094605 = slotsNeeded__pureZcollectionsZtables_u42(chckRange(initialSize_p0, 0, 2147483647));
    F.line = 186;
    result_520094596.counter = 0;
    F.line = 187;
    result_520094596.data = new Array(chckRange(correctSizeHEX60gensym6_520094605, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_520094605, 0, 2147483647) ; ++i) { result_520094596.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }  framePtr = F.prev;

  return result_520094596;

}

function init__parse_u872(parser_p0, ptype_p1) {
  var result_520094571 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((!(eqStrings(ptype_p1, [])) && (ptype_p1[chckIndx(0, 0, (ptype_p1).length - 1)] == 58)))) {
    F.line = 219;
    F.filename = "parse.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(219, 3) `ptype != \"\" and ptype[0] == \':\'` "));
    }
    
    F.line = 220;
    parser_p0.pname = nimCopy(null, [], NTI33554449);
    F.line = 221;
    parser_p0.nodeName[0] = [[]]; parser_p0.nodeName[1] = 0;
    F.line = 222;
    parser_p0.nodeName[0][parser_p0.nodeName[1]] = nimCopy(null, ptype_p1, NTI33554449);
    F.line = 223;
    parser_p0.ptype = nimCopy(null, ptype_p1, NTI33554449);
    F.line = 224;
    parser_p0.flags = nimCopy(parser_p0.flags, ConstSet3, NTI520093773);
    F.line = 225;
    parser_p0.uniqueID = 0;
    F.line = 227;
    parser_p0.grammarVar = GrammarPlaceholder_520094198;
    F.line = 228;
    parser_p0.symbol = null;
    F.line = 231;
    parser_p0.call = memoizationWrapper__parse_u503;
    F.line = 232;
    parser_p0.visited = nimCopy(parser_p0.visited, initTable__parse_u896(0), NTI520093801);
    F.line = 233;
    cleanUp__parse_u871(parser_p0);
    F.line = 234;
    result_520094571 = parser_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094571;

}

function init__parse_u4606(textParser_p0, text_p1) {
  var result_520098305 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((text_p1).length <= 2147483647))) {
    F.line = 1048;
    F.filename = "parse.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1048, 3) `text.len <= MaxTextLen` "));
    }
    
    F.line = 1049;
    (init__parse_u872(textParser_p0, [58,84,101,120,116]));
    F.line = 1051;
    textParser_p0.flags[0] = true;
    F.line = 1052;
    textParser_p0.text = nimCopy(null, text_p1, NTI33554449);
    F.line = 1053;
    textParser_p0.slice = nimCopy(textParser_p0.slice, toStringSlice__parse_u296(text_p1), NTI1140850691);
    F.line = 1054;
    textParser_p0.empty = eqStrings(text_p1, []);
    F.line = 1055;
    result_520098305 = textParser_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520098305;

}

function new__parse_u10397() {
  var result_520104096 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 820;
    F.filename = "system.nim";
    var r_520104098 = null;
    F.line = 823;
    r_520104098 = ({m_type: NTI520096621, text: [], slice: {Field0: [null, 0], Field1: 0, Field2: 0}, empty: false, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 824;
    result_520104096 = r_520104098;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520104096;

}

function name__parse_u986(parser_p0) {
    var Temporary1;

  var result_520094684 = [];

  var F = {procname: "parse.name", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 246;
    F.filename = "parse.nim";
    if (((parser_p0.flags[6] != undefined) && (0 < (parser_p0.subParsers).length))) {
    Temporary1 = parser_p0.subParsers[chckIndx(0, 0, (parser_p0.subParsers).length - 1)].pname;
    }
    else {
    Temporary1 = parser_p0.pname;
    }
    
    result_520094684 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_520094684;

}

function init__nodetree_u755(node_p0, name_p1, name_p1_Idx, data_p2, attributes_p3) {
  var result_1207960314 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_p0.nameRef[0] = name_p1; node_p0.nameRef[1] = name_p1_Idx;
    F.line = 43;
    node_p0.textSlice = nimCopy(node_p0.textSlice, toStringSlice__nodetree_u766(data_p2), NTI1140850691);
    F.line = 44;
    node_p0.attributesRef = attributes_p3;
    F.line = 45;
    node_p0.sourcePos = (-1);
    F.line = 46;
    result_1207960314 = node_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1207960314;

}

function clone__nodetree_u867(node_p0, newName_p1, newName_p1_Idx) {
    var Temporary1;

  var result_1207960422 = null;

  var F = {procname: "nodetree.clone", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 194;
    F.filename = "nodetree.nim";
    if (((node_p0.childrenSeq).length == 0)) {
    Temporary1 = init__nodetree_u755(new__nodetree_u708(), newName_p1, newName_p1_Idx, node_p0.textSlice, null);
    }
    else {
    Temporary1 = init__nodetree_u817(new__nodetree_u708(), newName_p1, newName_p1_Idx, node_p0.childrenSeq, null);
    }
    
    result_1207960422 = Temporary1;
  framePtr = F.prev;

  return result_1207960422;

}

function init__parse_u3728(node_p0, name_p1, name_p1_Idx, data_p2, attributes_p3) {
  var result_520097431 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_p0.nameRef[0] = name_p1; node_p0.nameRef[1] = name_p1_Idx;
    if (!((data_p2 == null))) {
    F.line = 37;
    var nonNilData_520097438 = data_p2;
    F.line = 38;
    node_p0.childrenSeq = nimCopy(null, [nonNilData_520097438], NTI520094842);
    }
    
    F.line = 40;
    node_p0.textSlice = nimCopy(node_p0.textSlice, EmptyStringSlice_1140850746, NTI1140850691);
    F.line = 44;
    node_p0.attributesRef = attributes_p3;
    F.line = 45;
    node_p0.sourcePos = (-1);
    F.line = 46;
    result_520097431 = node_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097431;

}

function init__parse_u3754(node_p0, name_p1, name_p1_Idx, data_p2, attributes_p3) {
  var result_520097457 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_p0.nameRef[0] = name_p1; node_p0.nameRef[1] = name_p1_Idx;
    F.line = 43;
    node_p0.textSlice = nimCopy(node_p0.textSlice, toStringSlice__parse_u296(data_p2), NTI1140850691);
    F.line = 44;
    node_p0.attributesRef = attributes_p3;
    F.line = 45;
    node_p0.sourcePos = (-1);
    F.line = 46;
    result_520097457 = node_p0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097457;

}

function returnItemFlatten__parse_u305(parser_p0, node_p1) {
  var result_520097409 = null;

  var F = {procname: "parse.returnItemFlatten", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((node_p1 == null))) {
    if ((parser_p0.flags[7] != undefined)) {
    if ((parser_p0.flags[9] != undefined)) {
    F.line = 685;
    F.filename = "parse.nim";
    result_520097409 = EmptyNode_520094000;
    break BeforeRet;
    }
    
    F.line = 686;
    result_520097409 = node_p1;
    break BeforeRet;
    }
    
    if ((((node_p1.nameRef[0][node_p1.nameRef[1]]).length == 0) || (node_p1.nameRef[0][node_p1.nameRef[1]][chckIndx(0, 0, (node_p1.nameRef[0][node_p1.nameRef[1]]).length - 1)] == 58))) {
    F.line = 688;
    result_520097409 = clone__nodetree_u867(node_p1, parser_p0.nodeName[0], parser_p0.nodeName[1]);
    break BeforeRet;
    }
    
    F.line = 689;
    result_520097409 = init__parse_u3728(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], node_p1, null);
    break BeforeRet;
    }
    else {
    if ((parser_p0.flags[7] != undefined)) {
    F.line = 691;
    result_520097409 = EmptyNode_520094000;
    break BeforeRet;
    }
    }
    F.line = 692;
    result_520097409 = init__parse_u3754(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [], null);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097409;

}

function returnSeqFlatten__parse_u308(parser_p0, nodes_p1) {
  var result_520097467 = null;

  var F = {procname: "parse.returnSeqFlatten", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((parser_p0.flags[9] != undefined)) {
    F.line = 696;
    F.filename = "parse.nim";
    result_520097467 = EmptyNode_520094000;
    break BeforeRet;
    }
    
    F.line = 697;
    var N_520097475 = (nodes_p1).length;
    if ((1 < N_520097475)) {
    F.line = 699;
    var res_520097489 = [];
    Label1: {
      F.line = 700;
      var child_520097493 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104753 = 0;
      F.line = 250;
      var L_520104754 = (nodes_p1).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104753 < L_520104754)) break Label3;
            F.line = 700;
            F.filename = "parse.nim";
            child_520097493 = nodes_p1[chckIndx(i_520104753, 0, (nodes_p1).length - 1)];
            F.line = 701;
            var anonymous_520097494 = (((child_520097493.nameRef[0][child_520097493.nameRef[1]]).length == 0) || (child_520097493.nameRef[0][child_520097493.nameRef[1]][chckIndx(0, 0, (child_520097493.nameRef[0][child_520097493.nameRef[1]]).length - 1)] == 58));
            if ((!(((child_520097493.childrenSeq).length == 0)) && anonymous_520097494)) {
            Label4: {
              F.line = 703;
              var item_520097501 = null;
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520104750 = 0;
              F.line = 250;
              var L_520104751 = (child_520097493.childrenSeq).length;
              Label5: {
                F.line = 251;
                  Label6: while (true) {
                  if (!(i_520104750 < L_520104751)) break Label6;
                    F.line = 703;
                    F.filename = "parse.nim";
                    item_520097501 = child_520097493.childrenSeq[chckIndx(i_520104750, 0, (child_520097493.childrenSeq).length - 1)];
                    F.line = 704;
                    res_520097489.push(item_520097501);;
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520104750 += 1;
                    if (!(((child_520097493.childrenSeq).length == L_520104751))) {
                    F.line = 254;
                    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            else {
            if ((!((((child_520097493.childrenSeq).length == 0) && (len__strslice_u144(child_520097493.textSlice) == 0))) || !(anonymous_520097494))) {
            F.line = 706;
            F.filename = "parse.nim";
            res_520097489.push(child_520097493);;
            }
            }
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104753 += 1;
            if (!(((nodes_p1).length == L_520104754))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((0 < (res_520097489).length) || !((parser_p0.flags[7] != undefined)))) {
    F.line = 708;
    F.filename = "parse.nim";
    result_520097467 = init__nodetree_u817(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], res_520097489, null);
    break BeforeRet;
    }
    else {
      F.line = 710;
      result_520097467 = EmptyNode_520094000;
      break BeforeRet;
    }
    
    }
    else {
    if ((N_520097475 == 1)) {
    F.line = 712;
    result_520097467 = parser_p0.grammarVar.returnItem(parser_p0, nodes_p1[chckIndx(0, 0, (nodes_p1).length - 1)]);
    break BeforeRet;
    }
    }
    if ((parser_p0.flags[7] != undefined)) {
    F.line = 714;
    result_520097467 = EmptyNode_520094000;
    break BeforeRet;
    }
    
    F.line = 715;
    result_520097467 = init__parse_u3754(new__nodetree_u708(), parser_p0.nodeName[0], parser_p0.nodeName[1], [], null);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097467;

}

function descendants__parse_u1358(parser_p0, selector_p1) {
            var Temporary5;

  var result_520095057 = null;

  var F = {procname: "parse.descendants", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 343;
    F.filename = "parse.nim";
      Label1: while (true) {
      if (!true) break Label1;
        Label2: {
          F.line = 343;
          if (          this.HEX3Astate == 0          ){            if (!((!((parser_p0.flags[6] != undefined)) || (0 < (parser_p0.subParsers).length)))) {
            F.line = 344;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(344, 5) `isForward notin parser.flags or parser.subParsers.len > 0` "));
            }
            
            if (!((parser_p0.flags[10] != undefined))) {
            F.line = 346;
            parser_p0.flags[10] = true;
            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = 1;
            F.line = 347;
            F.filename = "parse.nim";
            result_520095057 = parser_p0;
            break BeforeRet;
            }
            else {
              F.line = 0;
              F.filename = "???";
              this.HEX3Astate = 4;
              F.line = 345;
              F.filename = "parse.nim";
              break Label2;
            }
            
            }
          else if (          this.HEX3Astate == 1          ){            F.line = 348;
            this.subIter2 = selector_p1;
            Label3: {
              F.line = 0;
              F.filename = "???";
              this.HEX3Astate = 2;
              F.line = 349;
              F.filename = "parse.nim";
              break Label2;
            };
            }
          else if (          this.HEX3Astate == 2          ){            if (true) {
            F.line = 349;
            this.p1 = this.subIter2(parser_p0);
            if ((((this.subIter2.ClE_0).HEX3Astate) < 0)) {
            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = 4;
            F.line = 349;
            F.filename = "parse.nim";
            break Label2;
            }
            
            Label4: {
              F.line = 343;
              this.HEX3AenvP4 = {m_type: NTI520101740, HEX3Astate: 0, p1: null, subIter2: null, q3: null, HEX3AenvP4: null};
              F.line = 0;
              F.filename = "???";
              this.HEX3Astate = 3;
              F.line = 350;
              F.filename = "parse.nim";
              break Label2;
            };
            }
            else {
              F.line = 0;
              F.filename = "???";
              this.HEX3Astate = 4;
              F.line = 349;
              F.filename = "parse.nim";
              break Label2;
            }
            
            }
          else if (          this.HEX3Astate == 3          ){            if (true) {
            F.line = 350;
            Temporary5 = descendants__parse_u1358.bind(this.HEX3AenvP4); Temporary5.ClP_0 = descendants__parse_u1358; Temporary5.ClE_0 = this.HEX3AenvP4;
            this.q3 = Temporary5(this.p1, selector_p1);
            if (((this.HEX3AenvP4).HEX3Astate < 0)) {
            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = 2;
            F.line = 350;
            F.filename = "parse.nim";
            break Label2;
            }
            
            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = 3;
            F.line = 350;
            F.filename = "parse.nim";
            result_520095057 = this.q3;
            break BeforeRet;
            }
            else {
              F.line = 0;
              F.filename = "???";
              this.HEX3Astate = 2;
              F.line = 350;
              F.filename = "parse.nim";
              break Label2;
            }
            
            }
          else if (          this.HEX3Astate == 4          ){            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = (-1);
            F.line = 0;
            break Label2;
            }
          else{
            F.line = 0;
            break BeforeRet;
            }
        };
      }
  };
  framePtr = F.prev;

  return result_520095057;

}

function refdSubs__parse_u1340(parser_p0) {
  var result_520095038 = null;

  var F = {procname: "parse.refdSubs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 334;
    F.filename = "parse.nim";
      Label1: while (true) {
      if (!true) break Label1;
        Label2: {
          F.line = 334;
          if (          this.HEX3Astate == 0          ){            Label3: {
              this.p1 = null;
              this.HEX3Atmp2 = [];
              F.line = 335;
              this.HEX3Atmp2 = refdParsers__parse_u1329(parser_p0);
              F.line = 249;
              F.filename = "iterators.nim";
              this.i3 = 0;
              F.line = 250;
              this.L4 = (this.HEX3Atmp2).length;
              Label4: {
                F.line = 0;
                F.filename = "???";
                this.HEX3Astate = 1;
                F.line = 251;
                F.filename = "iterators.nim";
                break Label2;
              };
            };
            }
          else if (          this.HEX3Astate == 1          ){            if ((this.i3 < this.L4)) {
            F.line = 335;
            F.filename = "parse.nim";
            this.p1 = this.HEX3Atmp2[chckIndx(this.i3, 0, (this.HEX3Atmp2).length - 1)];
            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = 2;
            F.line = 336;
            F.filename = "parse.nim";
            result_520095038 = this.p1;
            break BeforeRet;
            }
            else {
              F.line = 0;
              F.filename = "???";
              this.HEX3Astate = 3;
              F.line = 251;
              F.filename = "iterators.nim";
              break Label2;
            }
            
            }
          else if (          this.HEX3Astate == 2          ){            F.line = 13;
            this.i3 += 1;
            if (!(((this.HEX3Atmp2).length == this.L4))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = 1;
            F.line = 251;
            F.filename = "iterators.nim";
            break Label2;
            }
          else if (          this.HEX3Astate == 3          ){            F.line = 0;
            F.filename = "???";
            this.HEX3Astate = (-1);
            F.line = 0;
            break Label2;
            }
          else{
            F.line = 0;
            break BeforeRet;
            }
        };
      }
  };
  framePtr = F.prev;

  return result_520095038;

}

function resetTraversalTracker__parse_u1400(parser_p0) {
  var F = {procname: "parse.resetTraversalTracker", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if ((parser_p0.flags[10] != undefined)) {
    F.line = 380;
    F.filename = "parse.nim";
    delete parser_p0.flags[10];
    Label1: {
      F.line = 381;
      var p_520095109 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520104757 = [];
      F.line = 381;
      F.filename = "parse.nim";
      colontmp__520104757 = refdParsers__parse_u1329(parser_p0);
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104758 = 0;
      F.line = 250;
      var L_520104759 = (colontmp__520104757).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104758 < L_520104759)) break Label3;
            F.line = 381;
            F.filename = "parse.nim";
            p_520095109 = colontmp__520104757[chckIndx(i_520104758, 0, (colontmp__520104757).length - 1)];
            F.line = 382;
            resetTraversalTracker__parse_u1400(p_520095109);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104758 += 1;
            if (!(((colontmp__520104757).length == L_520104759))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5D__strslice_u117(s_p0, x_p1) {
  var result_1140850810 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_1140850812 = ((x_p1.a) | 0);
    F.line = 84;
    var L_1140850814 = addInt(subInt(((x_p1.b) | 0), a_1140850812), 1);
    F.line = 85;
    result_1140850810 = nimCopy(null, mnewString(chckRange(L_1140850814, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_1140850819 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520104762 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520104762 < L_1140850814)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_1140850819 = i_520104762;
            F.line = 86;
            result_1140850810[chckIndx(i_1140850819, 0, (result_1140850810).length - 1)] = s_p0[chckIndx(addInt(i_1140850819, a_1140850812), 0, (s_p0).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520104762 = addInt(i_520104762, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1140850810;

}

function HEX24__strslice_u63(str_p0) {
  var result_1140850753 = [];

  var F = {procname: "strslice.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((str_p0.Field2 < 0)) {
    F.line = 77;
    F.filename = "strslice.nim";
    result_1140850753 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
    F.line = 78;
    result_1140850753 = nimCopy(null, HEX5BHEX5D__strslice_u117(str_p0.Field0[0][str_p0.Field0[1]], HEX2EHEX2E__strslice_u66(str_p0.Field1, str_p0.Field2)), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1140850753;

}

function replace__strslice_u397(slice_p0, pattern_p1, replacement_p2) {
  var result_1140851089 = null;

  var F = {procname: "strslice.replace", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 274;
    F.filename = "strslice.nim";
    result_1140851089 = toJSStr(HEX24__strslice_u63(slice_p0)).replace(pattern_p1.Field1, toJSStr(replacement_p2));
  framePtr = F.prev;

  return result_1140851089;

}

function HEX28HEX29__parse_u10438(parser_p0, document_p1, location_p2) {
    var Temporary1;
          var Temporary4;
          var Temporary5;

  var result_520104139 = {Field0: null, Field1: []};

  var F = {procname: "().()", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((parser_p0.grammarVar == GrammarPlaceholder_520094198)) {
    F.line = 651;
    F.filename = "parse.nim";
    if ((0 < (name__parse_u986(parser_p0)).length)) {
    Temporary1 = name__parse_u986(parser_p0);
    }
    else {
    Temporary1 = [97,100,104,111,99];
    }
    
    var gname_520104144 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 652;
    grammarHEX3D__parse_u1449(parser_p0, init__parse_u388(new__parse_u462(), gname_520104144, ConstSet9, toStringSlice__parse_u296(document_p1), returnItemFlatten__parse_u305, returnSeqFlatten__parse_u308));
    }
    else {
      F.line = 654;
      grammar__parse_u1419(parser_p0).document = nimCopy(grammar__parse_u1419(parser_p0).document, toStringSlice__parse_u296(document_p1), NTI1140850691);
      F.line = 655;
      cleanUp__parse_u317(grammar__parse_u1419(parser_p0));
    }
    
    F.line = 656;
    grammar__parse_u1419(parser_p0).root = parser_p0;
    Label2: {
      F.line = 387;
      var descendants_520104697 = null;
      F.line = 387;
      descendants_520104697 = {m_type: NTI520101740, HEX3Astate: 0, p1: null, subIter2: null, q3: null, HEX3AenvP4: null};
      F.line = 387;
        Label3: while (true) {
        if (!true) break Label3;
          F.line = 387;
          Temporary4 = descendants__parse_u1358.bind(descendants_520104697); Temporary4.ClP_0 = descendants__parse_u1358; Temporary4.ClE_0 = descendants_520104697;
          F.line = 657;
          var refdSubs_520104708 = null;
          F.line = 657;
          refdSubs_520104708 = {m_type: NTI520101743, HEX3Astate: 0, p1: null, HEX3Atmp2: [], i3: 0, L4: 0};
          Temporary5 = refdSubs__parse_u1340.bind(refdSubs_520104708); Temporary5.ClP_0 = refdSubs__parse_u1340; Temporary5.ClE_0 = refdSubs_520104708;
          var p_520104154 = Temporary4(parser_p0, Temporary5);
          if (((descendants_520104697).HEX3Astate < 0)) {
          F.line = 387;
          break Label3;
          }
          
          F.line = 658;
          cleanUp__parse_u871(p_520104154);
        }
    };
    F.line = 389;
    resetTraversalTracker__parse_u1400(parser_p0);
    F.line = 659;
    var tmpTuple_520104155 = parser_p0.call(parser_p0, location_p2);
    F.line = 659;
    var root_520104156 = tmpTuple_520104155["Field0"];
    F.line = 659;
    var loc_520104157 = tmpTuple_520104155["Field1"];
    if (((root_520104156 == null) || (loc_520104157 < (((document_p1).length) | 0)))) {
    F.line = 661;
    var snippet_520104169 = cstrToNimstr(replace__strslice_u397(cut__strslice_u160(grammar__parse_u1419(parser_p0).document, HEX2EHEX2E__strslice_u66(loc_520104157, addInt(loc_520104157, 9))), ure__parse_u49([92,110]), [92,110]));
    F.line = 662;
    Label6: {
      F.line = 662;
      var fmtRes_520104174 = [mnewString(0)];
      F.line = 662;
      fmtRes_520104174[0].push.apply(fmtRes_520104174[0], [80,97,114,115,101,114,32]);;
      F.line = 662;
      formatValue__runerange_u22(fmtRes_520104174, 0, name__parse_u986(parser_p0));
      F.line = 662;
      fmtRes_520104174[0].push.apply(fmtRes_520104174[0], [32,115,116,111,112,112,101,100,32,98,101,102,111,114,101,32,101,110,100,32,97,116,32,194,187]);;
      F.line = 662;
      formatValue__runerange_u22(fmtRes_520104174, 0, snippet_520104169);
      F.line = 662;
      fmtRes_520104174[0].push.apply(fmtRes_520104174[0], [194,171]);;
    };
    var msg_520104185 = nimCopy(null, fmtRes_520104174[0], NTI33554449);
    F.line = 663;
    grammar__parse_u1419(parser_p0).errors.push(init__error_u24(new__parse_u1537(), msg_520104185, loc_520104157, 1040, (-1), (-1), (-1), [], (-1), []));;
    }
    
    F.line = 664;
    var colontmp__520104746 = root_520104156;
    F.line = 664;
    var colontmp__520104747 = nimCopy(null, grammar__parse_u1419(parser_p0).errors, NTI520093784);
    F.line = 664;
    result_520104139 = nimCopy(result_520104139, {Field0: colontmp__520104746, Field1: nimCopy(null, colontmp__520104747, NTI520093784)}, NTI520093765);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520104139;

}

function nsuJoinSep(a_p0, sep_p1) {
  var result_1006634541 = [];

  var F = {procname: "strutils.join", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((0 < (a_p0).length)) {
    F.line = 1868;
    F.filename = "strutils.nim";
    var L_1006634548 = mulInt((sep_p1).length, subInt((a_p0).length, 1));
    Label1: {
      F.line = 1869;
      var i_1006634556 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520104778 = 0;
      F.line = 1869;
      F.filename = "strutils.nim";
      colontmp__520104778 = (a_p0).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520104779 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520104779 <= colontmp__520104778)) break Label3;
            F.line = 1869;
            F.filename = "strutils.nim";
            i_1006634556 = res_520104779;
            F.line = 1869;
            L_1006634548 = addInt(L_1006634548, (a_p0[chckIndx(i_1006634556, 0, (a_p0).length - 1)]).length);
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520104779 = addInt(res_520104779, 1);
          }
      };
    };
    F.line = 1870;
    F.filename = "strutils.nim";
    result_1006634541 = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 1871;
    result_1006634541.push.apply(result_1006634541, a_p0[chckIndx(0, 0, (a_p0).length - 1)]);;
    Label4: {
      F.line = 1872;
      var i_1006634569 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520104782 = 0;
      F.line = 1872;
      F.filename = "strutils.nim";
      colontmp__520104782 = (a_p0).length - 1;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520104783 = 1;
      Label5: {
        F.line = 97;
          Label6: while (true) {
          if (!(res_520104783 <= colontmp__520104782)) break Label6;
            F.line = 1872;
            F.filename = "strutils.nim";
            i_1006634569 = res_520104783;
            F.line = 1873;
            result_1006634541.push.apply(result_1006634541, sep_p1);;
            F.line = 1874;
            result_1006634541.push.apply(result_1006634541, a_p0[chckIndx(i_1006634569, 0, (a_p0).length - 1)]);;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520104783 = addInt(res_520104783, 1);
          }
      };
    };
    }
    else {
      F.line = 1876;
      F.filename = "strutils.nim";
      result_1006634541 = nimCopy(null, [], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_1006634541;

}

function newSeq__stdZsyncio_u558(len_p0) {
  var result_503317042 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_503317042 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_503317042[i] = []; }  framePtr = F.prev;

  return result_503317042;

}

function nsuEndsWith(s_p0, suffix_p1) {
  var result_1006634436 = false;

  var F = {procname: "strutils.endsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 65;
    F.filename = "strimpl.nim";
    var suffixLenHEX60gensym153_1006634442 = (suffix_p1).length;
    F.line = 66;
    var sLenHEX60gensym153_1006634443 = (s_p0).length;
    F.line = 67;
    var iHEX60gensym153_1006634444 = 0;
    F.line = 68;
    var jHEX60gensym153_1006634445 = subInt(sLenHEX60gensym153_1006634443, suffixLenHEX60gensym153_1006634442);
    Label1: {
      F.line = 69;
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_1006634444, jHEX60gensym153_1006634445)) && (addInt(iHEX60gensym153_1006634444, jHEX60gensym153_1006634445) < sLenHEX60gensym153_1006634443))) break Label2;
          if (!((s_p0[chckIndx(addInt(iHEX60gensym153_1006634444, jHEX60gensym153_1006634445), 0, (s_p0).length - 1)] == suffix_p1[chckIndx(iHEX60gensym153_1006634444, 0, (suffix_p1).length - 1)]))) {
          F.line = 70;
          result_1006634436 = false;
          break BeforeRet;
          }
          
          F.line = 71;
          iHEX60gensym153_1006634444 = addInt(iHEX60gensym153_1006634444, 1);
        }
    };
    if ((suffixLenHEX60gensym153_1006634442 <= iHEX60gensym153_1006634444)) {
    F.line = 72;
    result_1006634436 = true;
    break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1006634436;

}

function nsuStartsWith(s_p0, prefix_p1) {
  var result_1006634416 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "strimpl.nim";
    var prefixLenHEX60gensym146_1006634421 = (prefix_p1).length;
    F.line = 57;
    var sLenHEX60gensym146_1006634422 = (s_p0).length;
    F.line = 58;
    var iHEX60gensym146_1006634423 = 0;
    Label1: {
      F.line = 1646;
      F.filename = "strutils.nim";
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_1006634421 <= iHEX60gensym146_1006634423)) {
          F.line = 60;
          F.filename = "strimpl.nim";
          result_1006634416 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_1006634422 <= iHEX60gensym146_1006634423) || !((s_p0[chckIndx(iHEX60gensym146_1006634423, 0, (s_p0).length - 1)] == prefix_p1[chckIndx(iHEX60gensym146_1006634423, 0, (prefix_p1).length - 1)])))) {
          F.line = 61;
          result_1006634416 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym146_1006634423 = addInt(iHEX60gensym146_1006634423, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_1006634416;

}

function substr__system_u3687(s_p0, first_p1, last_p2) {
  var result_33558123 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2779;
    F.filename = "system.nim";
    var first_33558124 = nimMax(first_p1, 0);
    F.line = 2780;
    var L_33558125 = nimMax(addInt(subInt(nimMin(last_p2, (s_p0).length - 1), first_33558124), 1), 0);
    F.line = 2781;
    result_33558123 = nimCopy(null, mnewString(chckRange(L_33558125, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2782;
      var i_33558130 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__520104808 = 0;
      F.line = 2782;
      F.filename = "system.nim";
      colontmp__520104808 = subInt(L_33558125, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_520104809 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_520104809 <= colontmp__520104808)) break Label3;
            F.line = 2782;
            F.filename = "system.nim";
            i_33558130 = res_520104809;
            F.line = 2783;
            result_33558123[chckIndx(i_33558130, 0, (result_33558123).length - 1)] = s_p0[chckIndx(addInt(i_33558130, first_33558124), 0, (s_p0).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_520104809 = addInt(res_520104809, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558123;

}

function nsuIndent(s_p0, count_p1, padding_p2) {
            var Temporary6;

  var result_1006634191 = [];

  var F = {procname: "strutils.indent", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1485;
    F.filename = "strutils.nim";
    result_1006634191 = nimCopy(null, [], NTI33554449);
    F.line = 1486;
    var i_1006634192 = 0;
    Label1: {
      F.line = 1487;
      var line_1006634193 = [];
      F.line = 683;
      var first_520104802 = 0;
      F.line = 684;
      var last_520104803 = 0;
      F.line = 685;
      var eolpos_520104804 = 0;
      Label2: {
        F.line = 686;
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
              F.line = 687;
                Label5: while (true) {
                if (!((last_520104803 < (s_p0).length) && !((ConstSet10[s_p0[chckIndx(last_520104803, 0, (s_p0).length - 1)]] != undefined)))) break Label5;
                  F.line = 687;
                  last_520104803 = addInt(last_520104803, 1);
                }
            };
            F.line = 689;
            eolpos_520104804 = last_520104803;
            if ((last_520104803 < (s_p0).length)) {
            if ((s_p0[chckIndx(last_520104803, 0, (s_p0).length - 1)] == 10)) {
            F.line = 691;
            last_520104803 = addInt(last_520104803, 1);
            }
            else {
            if ((s_p0[chckIndx(last_520104803, 0, (s_p0).length - 1)] == 13)) {
            F.line = 693;
            last_520104803 = addInt(last_520104803, 1);
            if (((last_520104803 < (s_p0).length) && (s_p0[chckIndx(last_520104803, 0, (s_p0).length - 1)] == 10))) {
            F.line = 694;
            last_520104803 = addInt(last_520104803, 1);
            }
            
            }
            }
            }
            
            F.line = 1487;
            if (false) {
            Temporary6 = subInt(last_520104803, 1);
            }
            else {
            Temporary6 = subInt(eolpos_520104804, 1);
            }
            
            line_1006634193 = substr__system_u3687(s_p0, first_520104802, Temporary6);
            if (!((i_1006634192 == 0))) {
            F.line = 1489;
            result_1006634191.push.apply(result_1006634191, [10]);;
            }
            
            Label7: {
              F.line = 1490;
              var j_1006634198 = 0;
              F.line = 81;
              F.filename = "iterators_1.nim";
              var colontmp__520104797 = 0;
              F.line = 1490;
              F.filename = "strutils.nim";
              colontmp__520104797 = count_p1;
              F.line = 96;
              F.filename = "iterators_1.nim";
              var res_520104798 = 1;
              Label8: {
                F.line = 97;
                  Label9: while (true) {
                  if (!(res_520104798 <= colontmp__520104797)) break Label9;
                    F.line = 1490;
                    F.filename = "strutils.nim";
                    j_1006634198 = res_520104798;
                    F.line = 1491;
                    result_1006634191.push.apply(result_1006634191, padding_p2);;
                    F.line = 102;
                    F.filename = "iterators_1.nim";
                    res_520104798 = addInt(res_520104798, 1);
                  }
              };
            };
            F.line = 1492;
            F.filename = "strutils.nim";
            result_1006634191.push.apply(result_1006634191, line_1006634193);;
            F.line = 1493;
            i_1006634192 = addInt(i_1006634192, 1);
            if ((eolpos_520104804 == last_520104803)) {
            F.line = 700;
            break Label2;
            }
            
            F.line = 702;
            first_520104802 = last_520104803;
          }
      };
    };
  framePtr = F.prev;

  return result_1006634191;

}

function HEX5BHEX5D__nodetree_u1026(s_p0, i_p1) {
  var result_1207960582 = null;
  var result_1207960582_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_1207960582 = s_p0; result_1207960582_Idx = chckIndx(subInt((s_p0).length, i_p1), 0, (s_p0).length - 1);
  framePtr = F.prev;

  return [result_1207960582, result_1207960582_Idx];

}

function delete__nodetree_u1050(x_p0, x_p0_Idx, i_p1) {
  var F = {procname: "delete.delete", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    if (((x_p0[x_p0_Idx]).length - 1 < i_p1)) {
    F.line = 2014;
    F.filename = "system.nim";
    raiseException({message: ([105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,58,32,39]).concat(HEX24__systemZdollars_u8(i_p1),[39,32,60,32,39],HEX24__systemZdollars_u8((x_p0[x_p0_Idx]).length),[39,32,102,97,105,108,101,100]), m_type: NTI134217749, parent: null, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    F.line = 2025;
    x_p0[x_p0_Idx].splice(i_p1, 1);
  framePtr = F.prev;

  
}

function concat__nodetree_u1087(seqs_p0) {
  var result_1207960642 = [];

  var F = {procname: "concat.concat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 135;
    F.filename = "sequtils.nim";
    var L_1207960643 = 0;
    Label1: {
      F.line = 136;
      var seqitm_1207960657 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520104818 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520104818 < (seqs_p0).length)) break Label3;
            F.line = 136;
            F.filename = "sequtils.nim";
            seqitm_1207960657 = seqs_p0[chckIndx(i_520104818, 0, (seqs_p0).length - 1)];
            F.line = 136;
            L_1207960643 = addInt(L_1207960643, (seqitm_1207960657).length);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104818 += 1;
          }
      };
    };
    F.line = 137;
    F.filename = "sequtils.nim";
    result_1207960642 = new Array(chckRange(L_1207960643, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1207960643, 0, 2147483647) ; ++i) { result_1207960642[i] = []; }    F.line = 138;
    var i_1207960670 = 0;
    Label4: {
      F.line = 139;
      var s_1207960674 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520104826 = 0;
      Label5: {
        F.line = 19;
          Label6: while (true) {
          if (!(i_520104826 < (seqs_p0).length)) break Label6;
            F.line = 139;
            F.filename = "sequtils.nim";
            s_1207960674 = seqs_p0[chckIndx(i_520104826, 0, (seqs_p0).length - 1)];
            Label7: {
              F.line = 140;
              var itm_1207960696 = [];
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520104823 = 0;
              F.line = 250;
              var L_520104824 = (s_1207960674).length;
              Label8: {
                F.line = 251;
                  Label9: while (true) {
                  if (!(i_520104823 < L_520104824)) break Label9;
                    F.line = 140;
                    F.filename = "sequtils.nim";
                    itm_1207960696 = s_1207960674[chckIndx(i_520104823, 0, (s_1207960674).length - 1)];
                    F.line = 141;
                    result_1207960642[chckIndx(i_1207960670, 0, (result_1207960642).length - 1)] = nimCopy(null, itm_1207960696, NTI33554449);
                    F.line = 142;
                    i_1207960670 = addInt(i_1207960670, 1);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520104823 += 1;
                    if (!(((s_1207960674).length == L_520104824))) {
                    F.line = 254;
                    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            F.line = 13;
            i_520104826 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_1207960642;

}

function serialize__nodetree_u895(node_p0, opening_p1, closing_p2, leafdata_p3, ind_p4) {
    var Temporary1;
    var Temporary3;
      var Temporary8;
      var Temporary12;
        var Temporary14;

  var result_1207960457 = [];

  var F = {procname: "nodetree.serialize", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 204;
    F.filename = "nodetree.nim";
    result_1207960457 = nimCopy(null, newSeq__stdZsyncio_u558(0), NTI503316810);
    F.line = 205;
    var open_1207960478 = opening_p1(node_p0);
    F.line = 206;
    var close_1207960479 = closing_p2(node_p0);
    F.line = 207;
    var openLF_1207960480 = nsuEndsWith(open_1207960478, [10]);
    F.line = 208;
    var closeLF_1207960481 = nsuStartsWith(close_1207960479, [10]);
    if ((0 < ind_p4)) {
    F.line = 210;
    if (openLF_1207960480) {
    Temporary1 = nsuIndent(HEX5BHEX5D__pureZstrutils_u1307(open_1207960478, HEX2EHEX2E__stdZenumutils_u105(0, 2)), chckRange(ind_p4, 0, 2147483647), [32]);
    }
    else {
    Temporary1 = nsuIndent(open_1207960478, chckRange(ind_p4, 0, 2147483647), [32]);
    }
    
    open_1207960478 = nimCopy(null, Temporary1, NTI33554449);
    if (closeLF_1207960481) {
    F.line = 211;
    close_1207960479 = nimCopy(null, nsuIndent(HEX5BHEX5D__pureZstrutils_u1307(close_1207960479, HEX2EHEX2E__stdZenumutils_u105(1, 1)), chckRange(ind_p4, 0, 2147483647), [32]), NTI33554449);
    }
    
    }
    else {
      if (openLF_1207960480) {
      F.line = 213;
      open_1207960478 = nimCopy(null, HEX5BHEX5D__pureZstrutils_u1307(open_1207960478, HEX2EHEX2E__stdZenumutils_u105(0, 2)), NTI33554449);
      }
      
      if (closeLF_1207960481) {
      F.line = 214;
      close_1207960479 = nimCopy(null, HEX5BHEX5D__pureZstrutils_u1307(close_1207960479, HEX2EHEX2E__stdZenumutils_u105(1, 1)), NTI33554449);
      }
      
    }
    
    F.line = 215;
    var Temporary2 = nimCopy(null, open_1207960478, NTI33554449);
    result_1207960457.push(Temporary2);;
    if (((node_p0.childrenSeq).length == 0)) {
    F.line = 218;
    var lines_1207960574 = [leafdata_p3(node_p0)];
    if ((!(openLF_1207960480) && (0 < (lines_1207960574[0]).length))) {
    F.line = 220;
    (Temporary3 = HEX5BHEX5D__nodetree_u1026(result_1207960457, 1), Temporary3)[0][Temporary3[1]].push.apply(Temporary3[0][Temporary3[1]], lines_1207960574[0][chckIndx(0, 0, (lines_1207960574[0]).length - 1)]);;
    F.line = 221;
    delete__nodetree_u1050(lines_1207960574, 0, 0);
    }
    
    Label4: {
      F.line = 222;
      var i_1207960638 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520104786 = 0;
      F.line = 222;
      F.filename = "nodetree.nim";
      colontmp__520104786 = subInt((lines_1207960574[0]).length, 1);
      F.line = 68;
      F.filename = "iterators_1.nim";
      var res_520104787 = 0;
      Label5: {
        F.line = 69;
          Label6: while (true) {
          if (!(res_520104787 <= colontmp__520104786)) break Label6;
            F.line = 222;
            F.filename = "nodetree.nim";
            i_1207960638 = res_520104787;
            F.line = 223;
            lines_1207960574[0][chckIndx(i_1207960638, 0, (lines_1207960574[0]).length - 1)] = nimCopy(null, nsuIndent(lines_1207960574[0][chckIndx(i_1207960638, 0, (lines_1207960574[0]).length - 1)], chckRange(addInt(ind_p4, 2), 0, 2147483647), [32]), NTI33554449);
            F.line = 74;
            F.filename = "iterators_1.nim";
            res_520104787 = addInt(res_520104787, 1);
          }
      };
    };
    F.line = 224;
    F.filename = "nodetree.nim";
    result_1207960457 = nimCopy(null, concat__nodetree_u1087([nimCopy(null, result_1207960457, NTI1207960307), nimCopy(null, lines_1207960574[0], NTI1207960312)]), NTI1207960318);
    if (closeLF_1207960481) {
    F.line = 226;
    var Temporary7 = nimCopy(null, close_1207960479, NTI33554449);
    result_1207960457.push(Temporary7);;
    }
    else {
      F.line = 228;
    (Temporary8 = HEX5BHEX5D__nodetree_u1026(result_1207960457, 1), Temporary8)[0][Temporary8[1]].push.apply(Temporary8[0][Temporary8[1]], close_1207960479);;
    }
    
    }
    else {
      F.line = 231;
      F.line = 231;
      var collectResult_1207960730 = [];
      Label9: {
        F.line = 232;
        var child_1207960773 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520104790 = 0;
        F.line = 250;
        var L_520104791 = (node_p0.childrenSeq).length;
        Label10: {
          F.line = 251;
            Label11: while (true) {
            if (!(i_520104790 < L_520104791)) break Label11;
              F.line = 232;
              F.filename = "nodetree.nim";
              child_1207960773 = node_p0.childrenSeq[chckIndx(i_520104790, 0, (node_p0.childrenSeq).length - 1)];
              F.line = 341;
              F.filename = "sugar.nim";
              collectResult_1207960730.push(serialize__nodetree_u895(child_1207960773, opening_p1, closing_p2, leafdata_p3, addInt(ind_p4, 2)));;
              F.line = 13;
              F.filename = "iterators.nim";
              i_520104790 += 1;
              if (!(((node_p0.childrenSeq).length == L_520104791))) {
              F.line = 254;
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var childBlocks_1207960778 = [nimCopy(null, collectResult_1207960730, NTI1207960403)];
      if ((!(openLF_1207960480) && (0 < (childBlocks_1207960778[0][chckIndx(0, 0, (childBlocks_1207960778[0]).length - 1)][chckIndx(0, 0, (childBlocks_1207960778[0][chckIndx(0, 0, (childBlocks_1207960778[0]).length - 1)]).length - 1)]).length))) {
      F.line = 235;
      F.filename = "nodetree.nim";
      (Temporary12 = HEX5BHEX5D__nodetree_u1026(result_1207960457, 1), Temporary12)[0][Temporary12[1]].push.apply(Temporary12[0][Temporary12[1]], childBlocks_1207960778[0][chckIndx(0, 0, (childBlocks_1207960778[0]).length - 1)][chckIndx(0, 0, (childBlocks_1207960778[0][chckIndx(0, 0, (childBlocks_1207960778[0]).length - 1)]).length - 1)]);;
      F.line = 236;
      delete__nodetree_u1050(childBlocks_1207960778[0], chckIndx(0, 0, (childBlocks_1207960778[0]).length - 1), 0);
      }
      
      F.line = 237;
      result_1207960457 = nimCopy(null, concat__nodetree_u1087([nimCopy(null, result_1207960457, NTI1207960425), concat__nodetree_u1087(childBlocks_1207960778[0])]), NTI1207960318);
      if (closeLF_1207960481) {
      F.line = 239;
      var Temporary13 = nimCopy(null, close_1207960479, NTI33554449);
      result_1207960457.push(Temporary13);;
      }
      else {
        F.line = 241;
      (Temporary14 = HEX5BHEX5D__nodetree_u1026(result_1207960457, 1), Temporary14)[0][Temporary14[1]].push.apply(Temporary14[0][Temporary14[1]], close_1207960479);;
      }
      
    }
    
  framePtr = F.prev;

  return result_1207960457;

}

function len__nodetree_u1354(t_p0) {
  var result_1207960910 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1550;
    F.filename = "tables.nim";
    result_1207960910 = t_p0.counter;
  framePtr = F.prev;

  return result_1207960910;

}

function attr__nodetree_u190(node_p0) {
  var result_1207959744 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "nodetree.attr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((node_p0.attributesRef == null)) {
    F.line = 127;
    F.filename = "nodetree.nim";
    node_p0.attributesRef = ({data: [], counter: 0, first: 0, last: 0});
    }
    
    F.line = 128;
    result_1207959744 = node_p0.attributesRef;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1207959744;

}

function renderAttrs__nodetree_u1299(node_p0) {
  var result_1207960853 = [];

  var F = {procname: "asSxpr.renderAttrs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 247;
    F.filename = "nodetree.nim";
    F.line = 247;
    var attrStrs_1207960919 = newSeq__stdZsyncio_u558(chckRange(len__nodetree_u1354(attr__nodetree_u190(node_p0)), 0, 2147483647));
    Label1: {
      F.line = 249;
      var i_1207960937 = (-1);
      Label2: {
        F.line = 248;
        var attr_1207961251 = [];
        F.line = 248;
        var value_1207961252 = [];
        F.line = 1732;
        F.filename = "tables.nim";
        var colontmp__520104770 = ({data: [], counter: 0, first: 0, last: 0});
        F.line = 248;
        F.filename = "nodetree.nim";
        colontmp__520104770 = nimCopy(colontmp__520104770, attr__nodetree_u190(node_p0), NTI1207959567);
        F.line = 1759;
        F.filename = "tables.nim";
        var L_520104772 = len__nodetree_u1354(colontmp__520104770);
        if ((0 < colontmp__520104770.counter)) {
        F.line = 1327;
        var h_520104773 = colontmp__520104770.first;
        Label3: {
          F.line = 1328;
            Label4: while (true) {
            if (!(0 <= h_520104773)) break Label4;
              F.line = 1329;
              var nxt_520104775 = colontmp__520104770.data[chckIndx(h_520104773, 0, (colontmp__520104770.data).length - 1)].Field1;
              if (isFilled__pureZcollectionsZtables_u31(colontmp__520104770.data[chckIndx(h_520104773, 0, (colontmp__520104770.data).length - 1)].Field0)) {
              F.line = 249;
              F.filename = "nodetree.nim";
              attr_1207961251 = colontmp__520104770.data[chckIndx(h_520104773, 0, (colontmp__520104770.data).length - 1)].Field2;
              F.line = 249;
              value_1207961252 = colontmp__520104770.data[chckIndx(h_520104773, 0, (colontmp__520104770.data).length - 1)].Field3;
              F.line = 249;
              i_1207960937 = addInt(i_1207960937, 1);
              F.line = 249;
              Label5: {
                F.line = 249;
                var fmtRes_1207961262 = [mnewString(0)];
                F.line = 249;
                fmtRes_1207961262[0].push.apply(fmtRes_1207961262[0], [96,40]);;
                F.line = 249;
                formatValue__runerange_u22(fmtRes_1207961262, 0, attr_1207961251);
                F.line = 249;
                fmtRes_1207961262[0].push.apply(fmtRes_1207961262[0], [32,34]);;
                F.line = 249;
                formatValue__runerange_u22(fmtRes_1207961262, 0, value_1207961252);
                F.line = 249;
                fmtRes_1207961262[0].push.apply(fmtRes_1207961262[0], [34,41]);;
              };
              attrStrs_1207960919[chckIndx(i_1207960937, 0, (attrStrs_1207960919).length - 1)] = nimCopy(null, fmtRes_1207961262[0], NTI33554449);
              if (!((len__nodetree_u1354(colontmp__520104770) == L_520104772))) {
              F.line = 1762;
              F.filename = "tables.nim";
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim(1762, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1332;
              h_520104773 = nxt_520104775;
            }
        };
        }
        
      };
    };
    result_1207960853 = nimCopy(null, nsuJoinSep(attrStrs_1207960919, [32]), NTI33554449);
  framePtr = F.prev;

  return result_1207960853;

}

function opening__nodetree_u1721(node_p0) {
    var Temporary1;
    var Temporary2;

  var result_1207961275 = [];

  var F = {procname: "asSxpr.opening", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 253;
    F.filename = "nodetree.nim";
    if ((len__nodetree_u1354(attr__nodetree_u190(node_p0)) == 0)) {
    if ((((node_p0.childrenSeq).length == 0) && (runeLen__nodetree_u560(node_p0) < 60))) {
    Label3: {
      F.line = 255;
      var fmtRes_1207961327 = [mnewString(0)];
      F.line = 255;
      fmtRes_1207961327[0].push.apply(fmtRes_1207961327[0], [40]);;
      F.line = 255;
      formatValue__runerange_u22(fmtRes_1207961327, 0, node_p0.nameRef[0][node_p0.nameRef[1]]);
      F.line = 255;
      fmtRes_1207961327[0].push.apply(fmtRes_1207961327[0], [32]);;
    };
    Temporary2 = fmtRes_1207961327[0];
    }
    else {
      Label4: {
        F.line = 257;
        var fmtRes_1207961337 = [mnewString(0)];
        F.line = 257;
        fmtRes_1207961337[0].push.apply(fmtRes_1207961337[0], [40]);;
        F.line = 257;
        formatValue__runerange_u22(fmtRes_1207961337, 0, node_p0.nameRef[0][node_p0.nameRef[1]]);
        F.line = 716;
        F.filename = "strformat.nim";
        addChar(fmtRes_1207961337[0], 10);;
      };
    Temporary2 = fmtRes_1207961337[0];
    }
    
    Temporary1 = Temporary2;
    }
    else {
      Label5: {
        F.line = 259;
        F.filename = "nodetree.nim";
        var fmtRes_1207961347 = [mnewString(0)];
        F.line = 259;
        fmtRes_1207961347[0].push.apply(fmtRes_1207961347[0], [40]);;
        F.line = 259;
        formatValue__runerange_u22(fmtRes_1207961347, 0, node_p0.nameRef[0][node_p0.nameRef[1]]);
        F.line = 259;
        fmtRes_1207961347[0].push.apply(fmtRes_1207961347[0], [32]);;
        F.line = 259;
        formatValue__runerange_u22(fmtRes_1207961347, 0, renderAttrs__nodetree_u1299(node_p0));
        F.line = 716;
        F.filename = "strformat.nim";
        addChar(fmtRes_1207961347[0], 10);;
      };
    Temporary1 = fmtRes_1207961347[0];
    }
    
    result_1207961275 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1207961275;

}

function closing__nodetree_u1806(node_p0) {
  var result_1207961360 = [];

  var F = {procname: "asSxpr.closing", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 261;
    F.filename = "nodetree.nim";
    result_1207961360 = nimCopy(null, [41], NTI33554449);
  framePtr = F.prev;

  return result_1207961360;

}

function content__nodetree_u64(node_p0) {
  var result_1207959618 = [];

  var F = {procname: "nodetree.content", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((node_p0.childrenSeq).length == 0)) {
    F.line = 79;
    F.filename = "nodetree.nim";
    result_1207959618 = nimCopy(null, HEX24__strslice_u63(node_p0.textSlice), NTI33554449);
    break BeforeRet;
    }
    else {
      F.line = 81;
      result_1207959618 = nimCopy(null, [], NTI33554449);
      Label1: {
        F.line = 82;
        var child_1207959644 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520104829 = 0;
        F.line = 250;
        var L_520104830 = (node_p0.childrenSeq).length;
        Label2: {
          F.line = 251;
            Label3: while (true) {
            if (!(i_520104829 < L_520104830)) break Label3;
              F.line = 82;
              F.filename = "nodetree.nim";
              child_1207959644 = node_p0.childrenSeq[chckIndx(i_520104829, 0, (node_p0.childrenSeq).length - 1)];
              F.line = 83;
              result_1207959618.push.apply(result_1207959618, content__nodetree_u64(child_1207959644));;
              F.line = 13;
              F.filename = "iterators.nim";
              i_520104829 += 1;
              if (!(((node_p0.childrenSeq).length == L_520104830))) {
              F.line = 254;
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };
  framePtr = F.prev;

  return result_1207959618;

}

function runeOffset__pureZunicode_u718(s_p0, pos_p1, start_p2) {
  var result_956302034 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 331;
    F.filename = "unicode.nim";
    var i_956302035 = 0;
    F.line = 332;
    var o_956302036 = start_p2;
    Label1: {
      F.line = 333;
        Label2: while (true) {
        if (!(i_956302035 < pos_p1)) break Label2;
          F.line = 334;
          o_956302036 = addInt(o_956302036, chckRange(runeLenAt__pureZunicode_u94(s_p0, o_956302036), 0, 2147483647));
          if (((s_p0).length <= o_956302036)) {
          F.line = 336;
          result_956302034 = (-1);
          break BeforeRet;
          }
          
          F.line = 337;
          i_956302035 = addInt(i_956302035, 1);
        }
    };
    F.line = 338;
    result_956302034 = o_956302036;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_956302034;

}

function runeOffset__pureZunicode_u7393(s_p0, pos_p1, start_p2) {
  var result_956308709 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1201;
    F.filename = "unicode.nim";
    result_956308709 = runeOffset__pureZunicode_u718((s_p0.slice(0, (s_p0).length - 1 + 1)), pos_p1, start_p2);
  framePtr = F.prev;

  return result_956308709;

}

function substr__system_u3699(s_p0, first_p1) {
  var result_33558134 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2786;
    F.filename = "system.nim";
    result_33558134 = nimCopy(null, substr__system_u3687(s_p0, first_p1, (s_p0).length - 1), NTI33554449);
  framePtr = F.prev;

  return result_33558134;

}

function nsuReplaceStr(s_p0, sub_p1, by_p2) {
  var result_1006634850 = [];

  var F = {procname: "strutils.replace", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2203;
    F.filename = "strutils.nim";
    result_1006634850 = nimCopy(null, [], NTI33554449);
    F.line = 2204;
    var subLen_1006634851 = (sub_p1).length;
    if ((subLen_1006634851 == 0)) {
    F.line = 2206;
    result_1006634850 = nimCopy(null, s_p0, NTI33554449);
    }
    else {
    if ((subLen_1006634851 == 1)) {
    F.line = 2210;
    var c_1006634852 = sub_p1[chckIndx(0, 0, (sub_p1).length - 1)];
    F.line = 2211;
    var last_1006634853 = (s_p0).length - 1;
    F.line = 2212;
    var i_1006634854 = 0;
    Label1: {
      F.line = 2213;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 2214;
          var j_1006634855 = nsuFindChar(s_p0, c_1006634852, chckRange(i_1006634854, 0, 2147483647), last_1006634853);
          if ((j_1006634855 < 0)) {
          F.line = 2215;
          break Label1;
          }
          
          F.line = 2216;
          result_1006634850.push.apply(result_1006634850, substr__system_u3687(s_p0, i_1006634854, subInt(j_1006634855, 1)));;
          F.line = 2217;
          result_1006634850.push.apply(result_1006634850, by_p2);;
          F.line = 2218;
          i_1006634854 = addInt(j_1006634855, subLen_1006634851);
        }
    };
    F.line = 2220;
    result_1006634850.push.apply(result_1006634850, substr__system_u3699(s_p0, i_1006634854));;
    }
    else {
      F.line = 2222;
      var a_1006634856 = nsuInitNewSkipTable(sub_p1);
      F.line = 2223;
      var last_1006634857 = (s_p0).length - 1;
      F.line = 2224;
      var i_1006634858 = 0;
      Label3: {
        F.line = 2225;
          Label4: while (true) {
          if (!true) break Label4;
            F.line = 2226;
            var j_1006634859 = nsuFindStrA(a_1006634856, s_p0, sub_p1, chckRange(i_1006634858, 0, 2147483647), last_1006634857);
            if ((j_1006634859 < 0)) {
            F.line = 2227;
            break Label3;
            }
            
            F.line = 2228;
            result_1006634850.push.apply(result_1006634850, substr__system_u3687(s_p0, i_1006634858, subInt(j_1006634859, 1)));;
            F.line = 2229;
            result_1006634850.push.apply(result_1006634850, by_p2);;
            F.line = 2230;
            i_1006634858 = addInt(j_1006634859, subLen_1006634851);
          }
      };
      F.line = 2232;
      result_1006634850.push.apply(result_1006634850, substr__system_u3699(s_p0, i_1006634858));;
    }
    }
  framePtr = F.prev;

  return result_1006634850;

}

function esc__nodetree_u1812(s_p0) {
  var result_1207961366 = [];

  var F = {procname: "leafdata.esc", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 265;
    F.filename = "nodetree.nim";
    result_1207961366 = nimCopy(null, nsuReplaceStr(nsuReplaceStr(s_p0, [92], [92,92]), [34], [92,34]), NTI33554449);
  framePtr = F.prev;

  return result_1207961366;

}

function leafdata__nodetree_u1809(node_p0) {
          var Temporary3;

  var result_1207961363 = [];

  var F = {procname: "asSxpr.leafdata", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((node_p0.childrenSeq).length == 0))) {
    F.line = 267;
    F.filename = "nodetree.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim(267, 5) `node.isLeaf` "));
    }
    
    F.line = 268;
    var L_1207961375 = runeLen__nodetree_u560(node_p0);
    if ((60 <= L_1207961375)) {
    F.line = 270;
    var s_1207961376 = content__nodetree_u64(node_p0);
    F.line = 272;
    var lines_1207961381 = [];
    F.line = 273;
    var i_1207961382 = 0;
    F.line = 274;
    var k_1207961383 = 0;
    Label1: {
      F.line = 275;
        Label2: while (true) {
        if (!(0 < L_1207961375)) break Label2;
          F.line = 276;
          if ((L_1207961375 < 60)) {
          Temporary3 = L_1207961375;
          }
          else {
          Temporary3 = 60;
          }
          
          k_1207961383 = runeOffset__pureZunicode_u7393(s_1207961376, chckRange(addInt(((i_1207961382) | 0), Temporary3), 0, 2147483647), chckRange(i_1207961382, 0, 2147483647));
          if ((k_1207961383 <= i_1207961382)) {
          F.line = 277;
          break Label1;
          }
          
          F.line = 278;
          lines_1207961381.push([34].concat(esc__nodetree_u1812(HEX5BHEX5D__pureZstrutils_u1279(s_1207961376, HEX2EHEX2E__stdZstrbasics_u48(i_1207961382, subInt(k_1207961383, 1)))),[34]));;
          F.line = 279;
          i_1207961382 = k_1207961383;
          F.line = 280;
          L_1207961375 = subInt(L_1207961375, 60);
        }
    };
    F.line = 281;
    result_1207961363 = nimCopy(null, lines_1207961381, NTI1207960808);
    break BeforeRet;
    }
    else {
      F.line = 283;
      result_1207961363 = nimCopy(null, [[34].concat(esc__nodetree_u1812(content__nodetree_u64(node_p0)),[34])], NTI1207960849);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1207961363;

}

function asSxpr__nodetree_u586(node_p0) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1207960850 = [];

  var F = {procname: "nodetree.asSxpr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((node_p0 == null)) {
    F.line = 286;
    F.filename = "nodetree.nim";
    result_1207960850 = nimCopy(null, [110,105,108], NTI33554449);
    break BeforeRet;
    }
    else {
      F.line = 288;
      Temporary1 = opening__nodetree_u1721.bind(null); Temporary1.ClP_0 = opening__nodetree_u1721; Temporary1.ClE_0 = null;
      Temporary2 = closing__nodetree_u1806.bind(null); Temporary2.ClP_0 = closing__nodetree_u1806; Temporary2.ClE_0 = null;
      Temporary3 = leafdata__nodetree_u1809.bind(null); Temporary3.ClP_0 = leafdata__nodetree_u1809; Temporary3.ClE_0 = null;
      result_1207960850 = nimCopy(null, nsuJoinSep(serialize__nodetree_u895(node_p0, Temporary1, Temporary2, Temporary3, 0), [10]), NTI33554449);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1207960850;

}

function HEX24__nodetree_u1933(node_p0) {
  var result_1207961487 = [];

  var F = {procname: "nodetree.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 292;
    F.filename = "nodetree.nim";
    result_1207961487 = nimCopy(null, asSxpr__nodetree_u586(node_p0), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1207961487;

}

function addQuoted__parse_u10549(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2642;
    F.filename = "system.nim";
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__nodetree_u1933(x_p1));;
  framePtr = F.prev;

  
}

function addQuoted__parse_u10679(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2642;
    F.filename = "system.nim";
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__error_u79(x_p1));;
  framePtr = F.prev;

  
}

function collectionToString__parse_u10639(x_p0, prefix_p1, separator_p2, suffix_p3) {
  var result_520104341 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "dollars.nim";
    result_520104341[0] = nimCopy(null, prefix_p1, NTI33554449);
    F.line = 92;
    var firstElement_520104342 = true;
    Label1: {
      F.line = 93;
      var value_520104365 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104837 = 0;
      F.line = 250;
      var L_520104838 = (x_p0).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104837 < L_520104838)) break Label3;
            F.line = 93;
            F.filename = "dollars.nim";
            value_520104365 = x_p0[i_520104837];
            if (firstElement_520104342) {
            F.line = 95;
            firstElement_520104342 = false;
            }
            else {
              F.line = 97;
            result_520104341[0].push.apply(result_520104341[0], separator_p2);;
            }
            
            if ((value_520104365 == null)) {
            F.line = 102;
            result_520104341[0].push.apply(result_520104341[0], [110,105,108]);;
            }
            else {
              F.line = 104;
            addQuoted__parse_u10679(result_520104341, 0, value_520104365);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104837 += 1;
            if (!(((x_p0).length == L_520104838))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 107;
    F.filename = "dollars.nim";
    result_520104341[0].push.apply(result_520104341[0], suffix_p3);;
  framePtr = F.prev;

  return result_520104341[0];

}

function HEX24__parse_u10635(x_p0) {
  var result_520104334 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 118;
    F.filename = "dollars.nim";
    result_520104334 = nimCopy(null, collectionToString__parse_u10639(x_p0, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_520104334;

}

function addQuoted__parse_u10629(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2642;
    F.filename = "system.nim";
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__parse_u10635(x_p1));;
  framePtr = F.prev;

  
}

function HEX24__parse_u10517(x_p0) {
  var result_520104216 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_520104216[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym574_520104227 = 0;
    if ((0 < countHEX60gensym574_520104227)) {
    F.line = 23;
    result_520104216[0].push.apply(result_520104216[0], [44,32]);;
    }
    
    F.line = 25;
    result_520104216[0].push.apply(result_520104216[0], [114,111,111,116]);;
    F.line = 26;
    result_520104216[0].push.apply(result_520104216[0], [58,32]);;
    F.line = 27;
    countHEX60gensym574_520104227 += 1;
    if ((x_p0["Field0"] == null)) {
    F.line = 30;
    result_520104216[0].push.apply(result_520104216[0], [110,105,108]);;
    }
    else {
      F.line = 31;
    addQuoted__parse_u10549(result_520104216, 0, x_p0["Field0"]);
    }
    
    if ((0 < countHEX60gensym574_520104227)) {
    F.line = 23;
    result_520104216[0].push.apply(result_520104216[0], [44,32]);;
    }
    
    F.line = 25;
    result_520104216[0].push.apply(result_520104216[0], [101,114,114,111,114,115]);;
    F.line = 26;
    result_520104216[0].push.apply(result_520104216[0], [58,32]);;
    F.line = 27;
    countHEX60gensym574_520104227 += 1;
    F.line = 33;
    addQuoted__parse_u10629(result_520104216, 0, x_p0["Field1"]);
    F.line = 39;
    result_520104216[0].push.apply(result_520104216[0], [41]);;
  framePtr = F.prev;

  return result_520104216[0];

}
var Temporary2;
var F = {procname: "module parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
framePtr = F;
F.line = 23;
F.filename = "parse.nim";
var NeverMatchRegex_520093769 = ure__parse_u49([36,46]);
F.line = 38;
var RxNeverMatch_520093816 = nimCopy(null, {Field0: [36,46], Field1: nimCopy(null, NeverMatchRegex_520093769, NTI1140850938)}, NTI520093738);
F.line = 168;
var EmptyNode_520094000 = init__parse_u282(new__nodetree_u708(), [58,69,77,80,84,89], [], null);
F.line = 204;
var GrammarPlaceholder_520094198 = init__parse_u388(new__parse_u462(), [95,95,80,108,97,99,101,104,111,108,100,101,114,95,95], ConstSet2, EmptyStringSlice_1140850746, returnItemPlaceholder__parse_u311, returnSeqPlaceholder__parse_u314);
F.line = 1340;
var commentName_520099475 = [(Temporary2 = newStringRef__parse_u5773([99,111,109,109,101,110,116,95,95]), Temporary2)[0], Temporary2[1]];
F.line = 795;
var anyPassage_520103654 = {kind: 1, cmpStr: [], rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, findProc: null, consumeParser: null};
F.line = 1981;
var doc_520104133 = assignName__parse_u1057([116,101,120,116], init__parse_u4606(new__parse_u10397(), [88]));
F.line = 1982;
var cst_520104212 = HEX28HEX29__parse_u10438(doc_520104133, [88], 0);
F.line = 1983;
rawEcho(HEX24__parse_u10517(cst_520104212));
F.line = 1984;
rawEcho(asSxpr__nodetree_u586(HEX28HEX29__parse_u10438(init__parse_u4606(new__parse_u10397(), [65]), [65], 0).Field0));
framePtr = F.prev;
var F = {procname: "module parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal__system_u2720(message_p1) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_p1, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");
  framePtr = F.prev;

  
}

function chckNilDisp(p_p0) {
    if ((p_p0 == null)) {
    sysFatal__system_u2720([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function reset__parse_u778(obj_p0, obj_p0_Idx) {
  var F = {procname: "reset.reset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 925;
    F.filename = "system.nim";
    obj_p0[obj_p0_Idx] = 0;
  framePtr = F.prev;

  
}

function reset__parse_u842(obj_p0) {
  var F = {procname: "reset.reset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 925;
    F.filename = "system.nim";
    obj_p0 = nimCopy(obj_p0, {Field0: null, Field1: 0}, NTI520093764);
  framePtr = F.prev;

  
}

function clear__parse_u555(t_p0) {
  var F = {procname: "clear.clear", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 166;
      F.filename = "tableimpl.nim";
      var i_520094314 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520104841 = 0;
      F.line = 166;
      F.filename = "tableimpl.nim";
      colontmp__520104841 = (t_p0.data).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520104842 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520104842 < colontmp__520104841)) break Label3;
            F.line = 166;
            F.filename = "tableimpl.nim";
            i_520094314 = i_520104842;
            F.line = 168;
            t_p0.data[chckIndx(i_520094314, 0, (t_p0.data).length - 1)].Field0 = 0;
            F.line = 170;
            reset__parse_u778(t_p0.data[chckIndx(i_520094314, 0, (t_p0.data).length - 1)], "Field1");
            F.line = 171;
            reset__parse_u842(t_p0.data[chckIndx(i_520094314, 0, (t_p0.data).length - 1)].Field2);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520104842 = addInt(i_520104842, 1);
          }
      };
    };
    F.line = 173;
    F.filename = "tableimpl.nim";
    t_p0.counter = 0;
  framePtr = F.prev;

  
}

function cleanUp__parse_u506(self_p0) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 216;
    F.filename = "parse.nim";
    clear__parse_u555(self_p0.visited);
  framePtr = F.prev;

  
}

function cleanUp__parse_u9621(self_p0) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1965;
    F.filename = "parse.nim";
    cleanUp__parse_u506(self_p0);
  framePtr = F.prev;

  
}

function reset__parse_u9442(obj_p0, obj_p0_Idx) {
  var F = {procname: "reset.reset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 925;
    F.filename = "system.nim";
    obj_p0[obj_p0_Idx] = 0;
  framePtr = F.prev;

  
}

function clear__parse_u9220(t_p0) {
  var F = {procname: "clear.clear", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 166;
      F.filename = "tableimpl.nim";
      var i_520102978 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520104845 = 0;
      F.line = 166;
      F.filename = "tableimpl.nim";
      colontmp__520104845 = (t_p0.data).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520104846 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520104846 < colontmp__520104845)) break Label3;
            F.line = 166;
            F.filename = "tableimpl.nim";
            i_520102978 = i_520104846;
            F.line = 168;
            t_p0.data[chckIndx(i_520102978, 0, (t_p0.data).length - 1)].Field0 = 0;
            F.line = 170;
            reset__parse_u9442(t_p0.data[chckIndx(i_520102978, 0, (t_p0.data).length - 1)], "Field1");
            F.line = 171;
            reset__parse_u9442(t_p0.data[chckIndx(i_520102978, 0, (t_p0.data).length - 1)], "Field2");
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520104846 = addInt(i_520104846, 1);
          }
      };
    };
    F.line = 173;
    F.filename = "tableimpl.nim";
    t_p0.counter = 0;
  framePtr = F.prev;

  
}

function cleanUp__parse_u9171(self_p0) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1910;
    F.filename = "parse.nim";
    clear__parse_u9220(self_p0.recursionCounter);
    F.line = 1911;
    cleanUp__parse_u506(self_p0);
  framePtr = F.prev;

  
}

function cleanUp__parse_u871(self_p0) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 515;
    F.filename = "jssys.nim";
    chckNilDisp(self_p0);
    if (isObj(self_p0.m_type, NTI520100765)) {
    F.line = 215;
    F.filename = "parse.nim";
    cleanUp__parse_u9621(self_p0);
    }
    else {
    if (isObj(self_p0.m_type, NTI520099440)) {
    F.line = 215;
    cleanUp__parse_u9171(self_p0);
    }
    else {
    if (isObj(self_p0.m_type, NTI520093775)) {
    F.line = 215;
    cleanUp__parse_u506(self_p0);
    }
    }}
  framePtr = F.prev;

  
}

function isIn__runerange_u110(a_p0, b_p1, x_p2, y_p3) {
  var result_1174405235 = false;

  var F = {procname: "isAlphaNum.isIn", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
  framePtr = F;
    F.line = 57;
    F.filename = "runerange.nim";
    result_1174405235 = ((((x_p2 <= a_p0) && (a_p0 <= y_p3)) && (x_p2 <= b_p1)) && (b_p1 <= y_p3));
  framePtr = F.prev;

  return result_1174405235;

}

function isAlphaNum__runerange_u107(rr_p0) {
  var result_1174405229 = false;

  var F = {procname: "$.isAlphaNum", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "runerange.nim";
    F.line = 59;
    var a_1174405236 = rr_p0.Field0;
    F.line = 60;
    var b_1174405237 = rr_p0.Field1;
    result_1174405229 = ((isIn__runerange_u110(a_1174405236, b_1174405237, 48, 57) || isIn__runerange_u110(a_1174405236, b_1174405237, 65, 90)) || isIn__runerange_u110(a_1174405236, b_1174405237, 97, 122));
  framePtr = F.prev;

  return result_1174405229;

}

function HEX3DHEX3D__pureZunicode_u1024(a_p0, b_p1) {
  var result_956302339 = false;

  var F = {procname: "unicode.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 462;
    F.filename = "unicode.nim";
    result_956302339 = (((a_p0) | 0) == ((b_p1) | 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_956302339;

}

function hexlen__runerange_u78(r_p0) {
  var result_1174405200 = {Field0: 0, Field1: []};

  var F = {procname: "$.hexlen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 50;
    F.filename = "runerange.nim";
    var i_1174405201 = r_p0;
    if ((i_1174405201 < 256)) {
    F.line = 51;
    var colontmp__520104849 = 2;
    F.line = 51;
    var colontmp__520104850 = [92,120];
    F.line = 51;
    result_1174405200 = nimCopy(result_1174405200, {Field0: colontmp__520104849, Field1: nimCopy(null, colontmp__520104850, NTI33554449)}, NTI1174405184);
    break BeforeRet;
    }
    else {
    if ((i_1174405201 < 65536)) {
    F.line = 52;
    var colontmp__520104851 = 4;
    F.line = 52;
    var colontmp__520104852 = [92,117];
    F.line = 52;
    result_1174405200 = nimCopy(result_1174405200, {Field0: colontmp__520104851, Field1: nimCopy(null, colontmp__520104852, NTI33554449)}, NTI1174405184);
    break BeforeRet;
    }
    else {
      F.line = 53;
      var colontmp__520104853 = 8;
      F.line = 53;
      var colontmp__520104854 = [92,85];
      F.line = 53;
      result_1174405200 = nimCopy(result_1174405200, {Field0: colontmp__520104853, Field1: nimCopy(null, colontmp__520104854, NTI33554449)}, NTI1174405184);
      break BeforeRet;
    }
    }
  };
  framePtr = F.prev;

  return result_1174405200;

}

function toHexImpl__pureZstrutils_u776(x_p0, len_p1, handleNegative_p2) {
  var result_1006633740 = [];

  var F = {procname: "strutils.toHexImpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 979;
    F.filename = "strutils.nim";
    var n_1006633742 = x_p0;
    F.line = 980;
    result_1006633740 = nimCopy(null, mnewString(len_p1), NTI33554449);
    Label1: {
      F.line = 981;
      var j_1006633748 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__520104863 = 0;
      F.line = 981;
      F.filename = "strutils.nim";
      colontmp__520104863 = subInt(len_p1, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520104864 = colontmp__520104863;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_520104864)) break Label3;
            F.line = 981;
            F.filename = "strutils.nim";
            j_1006633748 = res_520104864;
            F.line = 982;
            result_1006633740[chckIndx(j_1006633748, 0, (result_1006633740).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_1006633742 & 15n), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            F.line = 983;
            n_1006633742 = (n_1006633742 >> BigInt(4));
            if (((n_1006633742 == 0n) && handleNegative_p2)) {
            F.line = 985;
            n_1006633742 = 18446744073709551615n;
            }
            
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_520104864 = subInt(res_520104864, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1006633740;

}

function toHex__runerange_u189(x_p0, len_p1) {
  var result_1174405313 = [];

  var F = {procname: "toHex.toHex", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 988;
    F.filename = "strutils.nim";
    result_1174405313 = nimCopy(null, toHexImpl__pureZstrutils_u776(BigInt.asUintN(64, BigInt(x_p0)), len_p1, (x_p0 < 0)), NTI33554449);
  framePtr = F.prev;

  return result_1174405313;

}

function HEX3CHEX25__system_u1080(x_p0, y_p1) {
  var result_33555515 = false;

  var F = {procname: "system.<%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 189;
    F.filename = "comparisons.nim";
    result_33555515 = (Number(BigInt.asUintN(32, BigInt(x_p0))) < Number(BigInt.asUintN(32, BigInt(y_p1))));
  framePtr = F.prev;

  return result_33555515;

}

function HEX3CHEX25__pureZunicode_u1020(a_p0, b_p1) {
  var result_956302335 = false;

  var F = {procname: "unicode.<%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 458;
    F.filename = "unicode.nim";
    result_956302335 = HEX3CHEX25__system_u1080(((a_p0) | 0), ((b_p1) | 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_956302335;

}

function HEX24__runerange_u74(rs_p0, verbose_p1) {
    var Temporary8;
    var Temporary9;

  var result_1174405197 = [];

  var F = {procname: "runerange.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 47;
    F.filename = "runerange.nim";
    F.line = 63;
    var s_1174405255 = [];
    if (!(verbose_p1)) {
    F.line = 65;
    s_1174405255.push([91]);;
    if (rs_p0.Field0) {
    F.line = 66;
    s_1174405255.push([94]);;
    }
    
    }
    
    Label1: {
      F.line = 67;
      var rr_1174405285 = {Field0: 0, Field1: 0};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104859 = 0;
      F.line = 250;
      var L_520104860 = (rs_p0.Field1).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104859 < L_520104860)) break Label3;
            F.line = 67;
            F.filename = "runerange.nim";
            rr_1174405285 = rs_p0.Field1[chckIndx(i_520104859, 0, (rs_p0.Field1).length - 1)];
            if (isAlphaNum__runerange_u107(rr_1174405285)) {
            F.line = 69;
            var low_1174405286 = chckRange(chckRange(rr_1174405285.Field0, (-128), 127), 0, 255);
            if (HEX3DHEX3D__pureZunicode_u1024(rr_1174405285.Field0, rr_1174405285.Field1)) {
            F.line = 71;
            Label4: {
              F.line = 71;
              var fmtRes_1174405291 = mnewString(0);
              F.line = 716;
              F.filename = "strformat.nim";
              addChar(fmtRes_1174405291, low_1174405286);;
            };
            var Temporary5 = nimCopy(null, fmtRes_1174405291, NTI33554449);
            s_1174405255.push(Temporary5);;
            }
            else {
              F.line = 73;
              F.filename = "runerange.nim";
              var high_1174405296 = chckRange(chckRange(rr_1174405285.Field1, (-128), 127), 0, 255);
              F.line = 74;
              Label6: {
                F.line = 74;
                var fmtRes_1174405301 = mnewString(0);
                F.line = 716;
                F.filename = "strformat.nim";
                addChar(fmtRes_1174405301, low_1174405286);;
                F.line = 74;
                F.filename = "runerange.nim";
                fmtRes_1174405301.push.apply(fmtRes_1174405301, [45]);;
                F.line = 716;
                F.filename = "strformat.nim";
                addChar(fmtRes_1174405301, high_1174405296);;
              };
              var Temporary7 = nimCopy(null, fmtRes_1174405301, NTI33554449);
              s_1174405255.push(Temporary7);;
            }
            
            }
            else {
              F.line = 76;
              F.filename = "runerange.nim";
              var tmpTuple_1174405306 = hexlen__runerange_u78(rr_1174405285.Field1);
              F.line = 76;
              var l_1174405307 = tmpTuple_1174405306["Field0"];
              F.line = 76;
              var marker_1174405308 = nimCopy(null, tmpTuple_1174405306["Field1"], NTI33554449);
              if (HEX3DHEX3D__pureZunicode_u1024(rr_1174405285.Field0, rr_1174405285.Field1)) {
              F.line = 78;
              s_1174405255.push((marker_1174405308).concat(toHex__runerange_u189(rr_1174405285.Field0, chckRange(l_1174405307, 1, 2147483647))));;
              }
              else {
                F.line = 80;
              s_1174405255.push((marker_1174405308).concat(toHex__runerange_u189(rr_1174405285.Field0, chckRange(l_1174405307, 1, 2147483647)),[45],marker_1174405308,toHex__runerange_u189(rr_1174405285.Field1, chckRange(l_1174405307, 1, 2147483647))));;
              }
              
            }
            
            if (HEX3CHEX25__pureZunicode_u1020(rr_1174405285.Field1, rr_1174405285.Field0)) {
            F.line = 81;
            s_1174405255.push([33]);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104859 += 1;
            if (!(((rs_p0.Field1).length == L_520104860))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (verbose_p1) {
    if (rs_p0.Field0) {
    Temporary9 = [[91,94], nsuJoinSep(s_1174405255, [93,45,91]), [93]];
    }
    else {
    Temporary9 = [[91], nsuJoinSep(s_1174405255, [93,124,91]), [93]];
    }
    
    Temporary8 = nsuJoinSep(Temporary9, []);
    }
    else {
      F.line = 86;
      F.filename = "runerange.nim";
      s_1174405255.push([93]);;
      F.line = 87;
      result_1174405197 = nimCopy(null, nsuJoinSep(s_1174405255, []), NTI33554449);
      break BeforeRet;
    }
    
    result_1174405197 = nimCopy(null, Temporary8, NTI33554449);
  };
  framePtr = F.prev;

  return result_1174405197;

}

function HEX3DHEX3D__parse_u5535(x_p0, y_p1) {
  var result_520099235 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((x_p0["Field0"] == y_p1["Field0"]))) {
    F.line = 1785;
    F.filename = "system.nim";
    result_520099235 = false;
    break BeforeRet;
    }
    
    if (!((x_p0["Field1"] == y_p1["Field1"]))) {
    F.line = 1785;
    result_520099235 = false;
    break BeforeRet;
    }
    
    F.line = 1786;
    result_520099235 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520099235;

}

function formatValue__runerange_u62(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 501;
    F.filename = "strformat.nim";
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], HEX24__systemZdollars_u14(BigInt(value_p1)));;
  framePtr = F.prev;

  
}

function HEX24__parse_u5526(self_p0) {
    var Temporary1;

  var result_520099224 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1245;
    F.filename = "parse.nim";
    var s_520099229 = [HEX24__runerange_u74(self_p0.runes, false), []];
    F.line = 1246;
    var rp_520099230 = nimCopy(null, self_p0.repetitions, NTI1174405154);
    F.line = 1247;
    if (HEX3DHEX3D__parse_u5535(rp_520099230, {Field0: 0, Field1: 1})) {
    Temporary1 = [63];
    }
    else {
    if (HEX3DHEX3D__parse_u5535(rp_520099230, {Field0: 0, Field1: 1073741824})) {
    Temporary1 = [42];
    }
    else {
    if (HEX3DHEX3D__parse_u5535(rp_520099230, {Field0: 1, Field1: 1073741824})) {
    Temporary1 = [43];
    }
    else {
    if (HEX3DHEX3D__parse_u5535(rp_520099230, {Field0: 1, Field1: 1})) {
    Temporary1 = [];
    }
    else {
      Label2: {
        F.line = 1251;
        var fmtRes_520099257 = [mnewString(0)];
        F.line = 1251;
        fmtRes_520099257[0].push.apply(fmtRes_520099257[0], [40]);;
        F.line = 1251;
        formatValue__runerange_u62(fmtRes_520099257, 0, rp_520099230.Field0);
        F.line = 1251;
        fmtRes_520099257[0].push.apply(fmtRes_520099257[0], [44]);;
        F.line = 1251;
        formatValue__runerange_u62(fmtRes_520099257, 0, rp_520099230.Field1);
        F.line = 1251;
        fmtRes_520099257[0].push.apply(fmtRes_520099257[0], [41]);;
      };
    Temporary1 = fmtRes_520099257[0];
    }
    }}}
    s_520099229[chckIndx(1, 0, (s_520099229).length - 1)] = nimCopy(null, Temporary1, NTI33554449);
    F.line = 1252;
    result_520099224 = nimCopy(null, nsuJoinSep(s_520099229, []), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520099224;

}

function HEX24__parse_u5004(self_p0) {
  var result_520098702 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1144;
    F.filename = "parse.nim";
    result_520098702 = nimCopy(null, nsuJoinSep([[105,99,34], nsuReplaceStr(self_p0.text, [34], [92,34]), [34]], []), NTI33554449);
  framePtr = F.prev;

  return result_520098702;

}

function HEX24__parse_u4658(self_p0) {
  var result_520098356 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1076;
    F.filename = "parse.nim";
    result_520098356 = nimCopy(null, nsuJoinSep([[34], nsuReplaceStr(self_p0.text, [34], [92,34]), [34]], []), NTI33554449);
  framePtr = F.prev;

  return result_520098356;

}

function HEX24__parse_u6284(self_p0) {
            var Temporary4;

  var result_520099982 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1587;
    F.filename = "parse.nim";
    F.line = 1587;
    F.line = 1587;
    var collectResult_520099983 = [];
    Label1: {
      F.line = 1588;
      var subP_520100006 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104867 = 0;
      F.line = 250;
      var L_520104868 = (self_p0.subParsers).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104867 < L_520104868)) break Label3;
            F.line = 1588;
            F.filename = "parse.nim";
            subP_520100006 = self_p0.subParsers[chckIndx(i_520104867, 0, (self_p0.subParsers).length - 1)];
            F.line = 341;
            F.filename = "sugar.nim";
            if (!(eqStrings(subP_520100006.pname, []))) {
            Temporary4 = subP_520100006.pname;
            }
            else {
            Temporary4 = HEX24__parse_u1306(subP_520100006);
            }
            
            var Temporary5 = nimCopy(null, Temporary4, NTI33554449);
            collectResult_520099983.push(Temporary5);;
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104867 += 1;
            if (!(((self_p0.subParsers).length == L_520104868))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var subStrs_520100011 = nimCopy(null, collectResult_520099983, NTI1174405244);
    result_520099982 = nimCopy(null, nsuJoinSep(subStrs_520100011, [124]), NTI33554449);
  framePtr = F.prev;

  return result_520099982;

}

function find__stdZenumutils_u55(a_p0, item_p1) {
  var result_1040187452 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1742;
    F.filename = "system.nim";
    result_1040187452 = 0;
    Label1: {
      F.line = 1743;
      var i_1040187456 = [];
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520104872 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520104872 < (a_p0).length)) break Label3;
            F.line = 1743;
            F.filename = "system.nim";
            i_1040187456 = a_p0[chckIndx(i_520104872, 0, (a_p0).length - 1)];
            if (eqStrings(i_1040187456, item_p1)) {
            F.line = 1744;
            break BeforeRet;
            }
            
            F.line = 1745;
            result_1040187452 = addInt(result_1040187452, 1);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104872 += 1;
          }
      };
    };
    F.line = 1746;
    F.filename = "system.nim";
    result_1040187452 = (-1);
  };
  framePtr = F.prev;

  return result_1040187452;

}

function contains__stdZenumutils_u50(a_p0, item_p1) {
  var result_1040187446 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1760;
    F.filename = "system.nim";
    result_1040187446 = (0 <= find__stdZenumutils_u55(a_p0, item_p1));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1040187446;

}

function HEX24__parse_u6146(self_p0) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;
    var Temporary7;

  var result_520099844 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1529;
    F.filename = "parse.nim";
    F.line = 1530;
    if ((self_p0.grammarVar == GrammarPlaceholder_520094198)) {
    Temporary1 = false;
    }
    else {
    Temporary1 = (grammar__parse_u1419(self_p0).flags[0] != undefined);
    }
    
    var postfix_520099853 = Temporary1;
    F.line = 1532;
    var subP_520099854 = self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)];
    F.line = 1534;
    var subStr_520099855 = [];
    if (((postfix_520099853 && eqStrings(name__parse_u986(subP_520099854), [])) && contains__stdZenumutils_u50(NaryParsers_520093972, type__parse_u979(subP_520099854)))) {
    F.line = 1538;
    if (!(eqStrings(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)].pname, []))) {
    Temporary2 = self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)].pname;
    }
    else {
    Temporary2 = HEX24__parse_u1306(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)]);
    }
    
    subStr_520099855 = nimCopy(null, nsuJoinSep([[40], nimCopy(null, Temporary2, NTI33554449), [41]], []), NTI33554449);
    }
    else {
      F.line = 1540;
      if (!(eqStrings(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)].pname, []))) {
      Temporary3 = self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)].pname;
      }
      else {
      Temporary3 = HEX24__parse_u1306(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)]);
      }
      
      subStr_520099855 = nimCopy(null, Temporary3, NTI33554449);
    }
    
    if (HEX3DHEX3D__parse_u5535(self_p0.repRange, {Field0: 0, Field1: 1})) {
    if (postfix_520099853) {
    Temporary5 = (subStr_520099855).concat([63]);
    }
    else {
    Temporary5 = nsuJoinSep([[91], nimCopy(null, subStr_520099855, NTI33554449), [93]], []);
    }
    
    Temporary4 = Temporary5;
    }
    else {
    if (((self_p0.repRange["Field0"] == 0) && (1073741824 <= self_p0.repRange["Field1"]))) {
    if (postfix_520099853) {
    Temporary6 = (subStr_520099855).concat([42]);
    }
    else {
    Temporary6 = nsuJoinSep([[123], nimCopy(null, subStr_520099855, NTI33554449), [125]], []);
    }
    
    Temporary4 = Temporary6;
    }
    else {
    if (((self_p0.repRange["Field0"] == 1) && (1073741824 <= self_p0.repRange["Field1"]))) {
    if (postfix_520099853) {
    Temporary7 = (subStr_520099855).concat([43]);
    }
    else {
    Temporary7 = nsuJoinSep([[123], nimCopy(null, subStr_520099855, NTI33554449), [125,43]], []);
    }
    
    Temporary4 = Temporary7;
    }
    else {
      F.line = 1551;
      var tmpTuple_520099913 = nimCopy(null, self_p0.repRange, NTI1174405154);
      F.line = 1551;
      var min_520099914 = tmpTuple_520099913["Field0"];
      F.line = 1551;
      var max_520099915 = tmpTuple_520099913["Field1"];
    Temporary4 = nsuJoinSep([nimCopy(null, subStr_520099855, NTI33554449), [40], HEX24__systemZdollars_u14(BigInt(min_520099914)), [44,32], HEX24__systemZdollars_u14(BigInt(max_520099915)), [41]], []);
    }
    }}
    result_520099844 = nimCopy(null, Temporary4, NTI33554449);
  framePtr = F.prev;

  return result_520099844;

}

function HEX24__parse_u5950(self_p0) {
  var result_520099648 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1397;
    F.filename = "parse.nim";
    result_520099648 = nimCopy(null, [126], NTI33554449);
  framePtr = F.prev;

  return result_520099648;

}

function HEX24__parse_u5764(self_p0) {
  var result_520099462 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1312;
    F.filename = "parse.nim";
    result_520099462 = nimCopy(null, nsuJoinSep([[47], nsuReplaceStr(self_p0.reInfo.Field0, [47], [92,47]), [47]], []), NTI33554449);
  framePtr = F.prev;

  return result_520099462;

}

function HEX24__parse_u9603(self_p0) {
    var Temporary1;

  var result_520103301 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1943;
    F.filename = "parse.nim";
    if (!(eqStrings(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)].pname, []))) {
    Temporary1 = self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)].pname;
    }
    else {
    Temporary1 = HEX24__parse_u1306(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)]);
    }
    
    result_520103301 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_520103301;

}

function HEX24__parse_u7195(self_p0) {
    var Temporary1;

  var result_520100893 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1846;
    F.filename = "parse.nim";
    if ((0 < (self_p0.pname).length)) {
    Temporary1 = (self_p0.pname).concat([32,61,32],HEX24__parse_u1306(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)]));
    }
    else {
    Temporary1 = HEX24__parse_u1306(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)]);
    }
    
    result_520100893 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_520100893;

}

function HEX24__parse_u7063(self_p0) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;

  var result_520100761 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1786;
    F.filename = "parse.nim";
    F.line = 1787;
    if (self_p0.positive) {
    Temporary1 = [38];
    }
    else {
    Temporary1 = [60,45,38];
    }
    
    var prefix_520100762 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 1788;
    var subP_520100763 = self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)];
    if ((contains__stdZenumutils_u50(NaryParsers_520093972, type__parse_u979(subP_520100763)) && eqStrings(name__parse_u986(subP_520100763), []))) {
    if (!(eqStrings(subP_520100763.pname, []))) {
    Temporary3 = subP_520100763.pname;
    }
    else {
    Temporary3 = HEX24__parse_u1306(subP_520100763);
    }
    
    Temporary2 = nsuJoinSep([nimCopy(null, prefix_520100762, NTI33554449), [40], nimCopy(null, Temporary3, NTI33554449), [41]], []);
    }
    else {
      if (!(eqStrings(subP_520100763.pname, []))) {
      Temporary4 = subP_520100763.pname;
      }
      else {
      Temporary4 = HEX24__parse_u1306(subP_520100763);
      }
      
    Temporary2 = (prefix_520100762).concat(Temporary4);
    }
    
    result_520100761 = nimCopy(null, Temporary2, NTI33554449);
  framePtr = F.prev;

  return result_520100761;

}

function HEX24__parse_u6719(self_p0) {
              var Temporary5;
              var Temporary6;

  var result_520100417 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1696;
    F.filename = "parse.nim";
    F.line = 1696;
    F.line = 1696;
    var collectResult_520100418 = [];
    Label1: {
      F.line = 1697;
      var i_520100499 = (-1);
      Label2: {
        F.line = 1697;
        var subP_520100503 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520104876 = 0;
        F.line = 250;
        var L_520104877 = (self_p0.subParsers).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520104876 < L_520104877)) break Label4;
              F.line = 1698;
              F.filename = "parse.nim";
              subP_520100503 = self_p0.subParsers[chckIndx(i_520104876, 0, (self_p0.subParsers).length - 1)];
              F.line = 1697;
              i_520100499 = addInt(i_520100499, 1);
              F.line = 1699;
              if (!(eqStrings(subP_520100503.pname, []))) {
              Temporary5 = subP_520100503.pname;
              }
              else {
              Temporary5 = HEX24__parse_u1306(subP_520100503);
              }
              
              var subStr_520100509 = nimCopy(null, Temporary5, NTI33554449);
              F.line = 1700;
              if ((i_520100499 == chckRange(self_p0.mandatory, (-2147483648), 2147483647))) {
              Temporary6 = [194,167];
              }
              else {
              Temporary6 = [];
              }
              
              var marker_520100510 = nimCopy(null, Temporary6, NTI33554449);
              if ((contains__stdZenumutils_u50([[58,65,108,116,101,114,110,97,116,105,118,101], [58,83,101,114,105,101,115]], type__parse_u979(subP_520100503)) && eqStrings(name__parse_u986(subP_520100503), []))) {
              F.line = 341;
              F.filename = "sugar.nim";
              collectResult_520100418.push(nsuJoinSep([nimCopy(null, marker_520100510, NTI33554449), [40], nimCopy(null, subStr_520100509, NTI33554449), [41]], []));;
              }
              else {
                if (!(eqStrings(marker_520100510, []))) {
                F.line = 341;
                collectResult_520100418.push((marker_520100510).concat(subStr_520100509));;
                }
                else {
                  F.line = 341;
                  var Temporary7 = nimCopy(null, subStr_520100509, NTI33554449);
                collectResult_520100418.push(Temporary7);;
                }
                
              }
              
              F.line = 13;
              F.filename = "iterators.nim";
              i_520104876 += 1;
              if (!(((self_p0.subParsers).length == L_520104877))) {
              F.line = 254;
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var subStrs_520100576 = nimCopy(null, collectResult_520100418, NTI1174405244);
    result_520100417 = nimCopy(null, nsuJoinSep(subStrs_520100576, [32]), NTI33554449);
  framePtr = F.prev;

  return result_520100417;

}

function HEX24__parse_u1260(self_p0) {
  var result_520094958 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 306;
    F.filename = "parse.nim";
    F.line = 306;
    var args_520094974 = [];
    Label1: {
      F.line = 307;
      var p_520094978 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104880 = 0;
      F.line = 250;
      var L_520104881 = (self_p0.subParsers).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104880 < L_520104881)) break Label3;
            F.line = 307;
            F.filename = "parse.nim";
            p_520094978 = self_p0.subParsers[chckIndx(i_520104880, 0, (self_p0.subParsers).length - 1)];
            if (!((p_520094978 == null))) {
            F.line = 308;
            args_520094974.push(HEX24__parse_u1306(p_520094978));;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104880 += 1;
            if (!(((self_p0.subParsers).length == L_520104881))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_520094958 = nimCopy(null, nsuJoinSep([nimCopy(null, self_p0.pname, NTI33554449), [58], type__parse_u979(self_p0), [40], nsuJoinSep(args_520094974, [44,32]), [41]], []), NTI33554449);
  framePtr = F.prev;

  return result_520094958;

}

function HEX24__parse_u1306(self_p0) {
  var result_520095003 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 515;
    F.filename = "jssys.nim";
    chckNilDisp(self_p0);
    if (isObj(self_p0.m_type, NTI520097233)) {
    F.line = 305;
    F.filename = "parse.nim";
    result_520095003 = HEX24__parse_u5526(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520096663)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u5004(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520096621)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u4658(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098722)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u6284(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098549)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u6146(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098420)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u5950(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098348)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u5764(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520099440)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u9603(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520099376)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u7195(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520099277)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u7063(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098921)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u6719(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520093775)) {
    F.line = 305;
    result_520095003 = HEX24__parse_u1260(self_p0);
    break BeforeRet;
    }
    }}}}}}}}}}}
  };
  framePtr = F.prev;

  return result_520095003;

}

function refdParsers__parse_u3905(self_p0) {
              var Temporary4;
              var Temporary8;
              var Temporary12;

  var result_520097603 = [];

  var F = {procname: "parse.refdParsers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((self_p0.referredParsers).length == 0)) {
    F.line = 816;
    F.filename = "parse.nim";
    self_p0.referredParsers = nimCopy(null, self_p0.subParsers, NTI520093792);
    Label1: {
      F.line = 817;
      var matcher_520097610 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104884 = 0;
      F.line = 250;
      var L_520104885 = (self_p0.skipList).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104884 < L_520104885)) break Label3;
            F.line = 817;
            F.filename = "parse.nim";
            matcher_520097610 = self_p0.skipList[chckIndx(i_520104884, 0, (self_p0.skipList).length - 1)];
            F.line = 818;
            switch (matcher_520097610.kind) {
            case 3:
              F.line = 820;
              var Temporary4 = matcher_520097610;
              if (ConstSet11[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI520093767)); }
              self_p0.referredParsers.push(Temporary4.consumeParser);;
              break;
            default: 
              break;
            }
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104884 += 1;
            if (!(((self_p0.skipList).length == L_520104885))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label5: {
      F.line = 822;
      F.filename = "parse.nim";
      var matcher_520097618 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104888 = 0;
      F.line = 250;
      var L_520104889 = (self_p0.resumeList).length;
      Label6: {
        F.line = 251;
          Label7: while (true) {
          if (!(i_520104888 < L_520104889)) break Label7;
            F.line = 822;
            F.filename = "parse.nim";
            matcher_520097618 = self_p0.resumeList[chckIndx(i_520104888, 0, (self_p0.resumeList).length - 1)];
            F.line = 823;
            switch (matcher_520097618.kind) {
            case 3:
              F.line = 825;
              var Temporary8 = matcher_520097618;
              if (ConstSet12[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI520093767)); }
              self_p0.referredParsers.push(Temporary8.consumeParser);;
              break;
            default: 
              break;
            }
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104888 += 1;
            if (!(((self_p0.resumeList).length == L_520104889))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      F.line = 827;
      F.filename = "parse.nim";
      var errMatcher_520097645 = {Field0: ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null}), Field1: []};
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104893 = 0;
      F.line = 250;
      var L_520104894 = (self_p0.errorList).length;
      Label10: {
        F.line = 251;
          Label11: while (true) {
          if (!(i_520104893 < L_520104894)) break Label11;
            F.line = 827;
            F.filename = "parse.nim";
            errMatcher_520097645 = self_p0.errorList[chckIndx(i_520104893, 0, (self_p0.errorList).length - 1)];
            F.line = 828;
            switch (errMatcher_520097645.Field0.kind) {
            case 3:
              F.line = 830;
              var Temporary12 = errMatcher_520097645.Field0;
              if (ConstSet13[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI520093767)); }
              self_p0.referredParsers.push(Temporary12.consumeParser);;
              break;
            default: 
              break;
            }
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104893 += 1;
            if (!(((self_p0.errorList).length == L_520104894))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      if (!(((self_p0.subParsers).length <= (self_p0.referredParsers).length))) {
      F.line = 833;
      F.filename = "parse.nim";
      failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(833, 5) `self.referredParsers.len >= self.subParsers.len` "));
      }
      
    }
    
    F.line = 834;
    result_520097603 = self_p0["referredParsers"];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097603;

}

function refdParsers__parse_u1310(self_p0) {
  var result_520095008 = [];

  var F = {procname: "parse.refdParsers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 322;
    F.filename = "parse.nim";
    result_520095008 = self_p0["subParsers"];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520095008;

}

function refdParsers__parse_u1329(self_p0) {
  var result_520095026 = [];

  var F = {procname: "parse.refdParsers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 515;
    F.filename = "jssys.nim";
    chckNilDisp(self_p0);
    if (isObj(self_p0.m_type, NTI520093776)) {
    F.line = 317;
    F.filename = "parse.nim";
    result_520095026 = refdParsers__parse_u3905(self_p0);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520093775)) {
    F.line = 317;
    result_520095026 = refdParsers__parse_u1310(self_p0);
    break BeforeRet;
    }
    }
  };
  framePtr = F.prev;

  return result_520095026;

}

function grammarHEX3D__parse_u1431(self_p0, grammar_p1) {
          var Temporary3;
          var Temporary4;

  var F = {procname: "parse.grammar=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 420;
    F.filename = "parse.nim";
    var uniqueID_520095130 = 0;
    Label1: {
      F.line = 387;
      var descendants_520104901 = null;
      F.line = 387;
      descendants_520104901 = {m_type: NTI520101740, HEX3Astate: 0, p1: null, subIter2: null, q3: null, HEX3AenvP4: null};
      F.line = 387;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 387;
          Temporary3 = descendants__parse_u1358.bind(descendants_520104901); Temporary3.ClP_0 = descendants__parse_u1358; Temporary3.ClE_0 = descendants_520104901;
          F.line = 421;
          var refdSubs_520104902 = null;
          F.line = 421;
          refdSubs_520104902 = {m_type: NTI520101743, HEX3Astate: 0, p1: null, HEX3Atmp2: [], i3: 0, L4: 0};
          Temporary4 = refdSubs__parse_u1340.bind(refdSubs_520104902); Temporary4.ClP_0 = refdSubs__parse_u1340; Temporary4.ClE_0 = refdSubs_520104902;
          var p_520095131 = Temporary3(self_p0, Temporary4);
          if (((descendants_520104901).HEX3Astate < 0)) {
          F.line = 387;
          break Label2;
          }
          
          if (!((p_520095131.grammarVar == GrammarPlaceholder_520094198))) {
          F.line = 422;
          failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(422, 5) `p.grammarVar == GrammarPlaceholder` "));
          }
          
          F.line = 423;
          p_520095131.grammarVar = grammar_p1;
          F.line = 424;
          uniqueID_520095130 = ((uniqueID_520095130 + 1) >>> 0);
          F.line = 425;
          p_520095131.uniqueID = uniqueID_520095130;
        }
    };
    F.line = 389;
    resetTraversalTracker__parse_u1400(self_p0);
  framePtr = F.prev;

  
}

function grammarHEX3D__parse_u5937(self_p0, grammar_p1) {
  var F = {procname: "parse.grammar=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!((((HEX3DHEX3D__parse_u116(grammar_p1.commentRe, RxNeverMatch_520093816) || HEX3DHEX3D__parse_u116(grammar_p1.commentRe, self_p0.comment)) || HEX3DHEX3D__parse_u116(self_p0.comment, RxNeverMatch_520093816)) || ((self_p0.comment.Field0).length == 0)))) {
    F.line = 1388;
    F.filename = "parse.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1388, 3) `grammar.commentRe == RxNeverMatch or grammar.commentRe == self.comment or\x0A    self.comment == RxNeverMatch or\x0A    self.comment.reStr.len == 0` Multiple definitions of comments or insignificant whitespace not allowed!"));
    }
    
    F.line = 1391;
    grammarHEX3D__parse_u1431(self_p0, grammar_p1);
    if (((0 < (self_p0.comment.Field0).length) && !(HEX3DHEX3D__parse_u116(self_p0.comment, RxNeverMatch_520093816)))) {
    if (!(HEX3DHEX3D__parse_u116(grammar_p1.commentRe, RxNeverMatch_520093816))) {
    F.line = 1393;
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1393, 5) `grammar.commentRe == RxNeverMatch` implicit whitespace must only be defined once per grammar!"));
    }
    
    F.line = 1395;
    grammar_p1.commentRe = nimCopy(grammar_p1.commentRe, self_p0.comment, NTI520093738);
    }
    
  framePtr = F.prev;

  
}

function grammarHEX3D__parse_u1449(self_p0, grammar_p1) {
  var F = {procname: "parse.grammar=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 515;
    F.filename = "jssys.nim";
    chckNilDisp(self_p0);
    if (isObj(self_p0.m_type, NTI520098420)) {
    F.line = 419;
    F.filename = "parse.nim";
    grammarHEX3D__parse_u5937(self_p0, grammar_p1);
    }
    else {
    if (isObj(self_p0.m_type, NTI520093775)) {
    F.line = 419;
    grammarHEX3D__parse_u1431(self_p0, grammar_p1);
    }
    }
  framePtr = F.prev;

  
}

function HEX3CHEX3DHEX25__system_u1060(x_p0, y_p1) {
  var result_33555495 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 180;
    F.filename = "comparisons.nim";
    result_33555495 = (Number(BigInt.asUintN(32, BigInt(x_p0))) <= Number(BigInt.asUintN(32, BigInt(y_p1))));
  framePtr = F.prev;

  return result_33555495;

}

function HEX3CHEX3DHEX25__pureZunicode_u1016(a_p0, b_p1) {
  var result_956302331 = false;

  var F = {procname: "unicode.<=%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 449;
    F.filename = "unicode.nim";
    result_956302331 = HEX3CHEX3DHEX25__system_u1060(((a_p0) | 0), ((b_p1) | 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_956302331;

}

function inRuneRange__runerange_u753(r_p0, ranges_p1) {
  var result_1174405876 = 0;

  var F = {procname: "runerange.inRuneRange", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/runerange.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 237;
    F.filename = "runerange.nim";
    var highest_1174405880 = subInt((((ranges_p1).length) | 0), 1);
    F.line = 239;
    var a_1174405881 = 0;
    F.line = 240;
    var b_1174405882 = highest_1174405880;
    F.line = 241;
    var last_i_1174405883 = (-1);
    F.line = 242;
    var i_1174405884 = divInt(b_1174405882, 2);
    Label1: {
      F.line = 244;
        Label2: while (true) {
        if (!!((i_1174405884 == last_i_1174405883))) break Label2;
          if (HEX3CHEX3DHEX25__pureZunicode_u1016(ranges_p1[chckIndx(i_1174405884, 0, (ranges_p1).length - 1)].Field0, r_p0)) {
          if (HEX3CHEX3DHEX25__pureZunicode_u1016(r_p0, ranges_p1[chckIndx(i_1174405884, 0, (ranges_p1).length - 1)].Field1)) {
          F.line = 247;
          result_1174405876 = i_1174405884;
          break BeforeRet;
          }
          else {
            F.line = 249;
            a_1174405881 = nimMin(addInt(i_1174405884, 1), highest_1174405880);
          }
          
          }
          else {
            F.line = 251;
            b_1174405882 = nimMax(subInt(i_1174405884, 1), 0);
          }
          
          F.line = 252;
          last_i_1174405883 = i_1174405884;
          F.line = 253;
          i_1174405884 = addInt(a_1174405881, divInt(subInt(b_1174405882, a_1174405881), 2));
        }
    };
    F.line = 254;
    result_1174405876 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1174405876;

}

function parse__parse_u5050(self_p0, location_p1) {
  var result_520098749 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1220;
    F.filename = "parse.nim";
    var document_520098750 = nimCopy(null, grammar__parse_u1419(self_p0).document, NTI1140850691);
    F.line = 1221;
    var ranges_520098751 = nimCopy(null, self_p0.runes.Field1, NTI1174405157);
    F.line = 1222;
    var negate_520098752 = self_p0.runes.Field0;
    F.line = 1223;
    var L_520098753 = len__strslice_u144(document_520098750);
    F.line = 1225;
    var r_520098754 = 0;
    F.line = 1226;
    var pos_520098755 = location_p1;
    Label1: {
      F.line = 1228;
      var i_520098756 = 0;
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_520104909 = 0;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_520104909 < self_p0.repetitions.Field0)) break Label3;
            F.line = 1228;
            F.filename = "parse.nim";
            i_520098756 = res_520104909;
            if ((L_520098753 <= pos_520098755)) {
            F.line = 1230;
            var colontmp__520104904 = null;
            F.line = 1230;
            var colontmp__520104905 = location_p1;
            F.line = 1230;
            result_520098749 = nimCopy(result_520098749, {Field0: colontmp__520104904, Field1: colontmp__520104905}, NTI520093764);
            break BeforeRet;
            }
            
            if ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            r_520098754 = chckRange(document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            pos_520098755 = addInt(pos_520098755, 1);
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 5) == 6)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 2)) | 0))) {
            F.line = 96;
            r_520098754 = chckRange(((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            pos_520098755 = addInt(pos_520098755, 2);
            }
            else {
              F.line = 100;
              r_520098754 = 65533;
              F.line = 101;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 4) == 14)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 3)) | 0))) {
            F.line = 106;
            r_520098754 = chckRange(((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            pos_520098755 = addInt(pos_520098755, 3);
            }
            else {
              F.line = 111;
              r_520098754 = 65533;
              F.line = 112;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 3) == 30)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 4)) | 0))) {
            F.line = 118;
            r_520098754 = chckRange(((((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 3), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            pos_520098755 = addInt(pos_520098755, 4);
            }
            else {
              F.line = 124;
              r_520098754 = 65533;
              F.line = 125;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 2) == 62)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 5)) | 0))) {
            F.line = 132;
            r_520098754 = chckRange(((((((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 3), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 4), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            pos_520098755 = addInt(pos_520098755, 5);
            }
            else {
              F.line = 139;
              r_520098754 = 65533;
              F.line = 140;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 1) == 126)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 6)) | 0))) {
            F.line = 148;
            r_520098754 = chckRange(((((((((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 3), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 4), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 5), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            pos_520098755 = addInt(pos_520098755, 6);
            }
            else {
              F.line = 156;
              r_520098754 = 65533;
              F.line = 157;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
              F.line = 159;
              r_520098754 = chckRange(document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            }}}}}
            if ((negate_520098752 != (inRuneRange__runerange_u753(r_520098754, ranges_520098751) < 0))) {
            F.line = 1233;
            F.filename = "parse.nim";
            var colontmp__520104906 = null;
            F.line = 1233;
            var colontmp__520104907 = location_p1;
            F.line = 1233;
            result_520098749 = nimCopy(result_520098749, {Field0: colontmp__520104906, Field1: colontmp__520104907}, NTI520093764);
            break BeforeRet;
            }
            
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_520104909 = ((res_520104909 + 1) >>> 0);
          }
      };
    };
    F.line = 1234;
    F.filename = "parse.nim";
    var lastPos_520098978 = pos_520098755;
    Label4: {
      F.line = 1235;
      var i_520098979 = 0;
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_520104912 = self_p0.repetitions.Field0;
      Label5: {
        F.line = 138;
          Label6: while (true) {
          if (!(res_520104912 < self_p0.repetitions.Field1)) break Label6;
            F.line = 1235;
            F.filename = "parse.nim";
            i_520098979 = res_520104912;
            if ((L_520098753 <= pos_520098755)) {
            F.line = 1237;
            break Label4;
            }
            
            if ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] <= 127)) {
            F.line = 91;
            F.filename = "unicode.nim";
            r_520098754 = chckRange(document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)], (-2147483648), 2147483647);
            F.line = 92;
            pos_520098755 = addInt(pos_520098755, 1);
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 5) == 6)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 2)) | 0))) {
            F.line = 96;
            r_520098754 = chckRange(((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 98;
            pos_520098755 = addInt(pos_520098755, 2);
            }
            else {
              F.line = 100;
              r_520098754 = 65533;
              F.line = 101;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 4) == 14)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 3)) | 0))) {
            F.line = 106;
            r_520098754 = chckRange(((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 109;
            pos_520098755 = addInt(pos_520098755, 3);
            }
            else {
              F.line = 111;
              r_520098754 = 65533;
              F.line = 112;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 3) == 30)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 4)) | 0))) {
            F.line = 118;
            r_520098754 = chckRange(((((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 3), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 122;
            pos_520098755 = addInt(pos_520098755, 4);
            }
            else {
              F.line = 124;
              r_520098754 = 65533;
              F.line = 125;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 2) == 62)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 5)) | 0))) {
            F.line = 132;
            r_520098754 = chckRange(((((((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 3), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 4), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 137;
            pos_520098755 = addInt(pos_520098755, 5);
            }
            else {
              F.line = 139;
              r_520098754 = 65533;
              F.line = 140;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
            if (((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] >>> 1) == 126)) {
            if ((pos_520098755 <= ((subInt((document_520098750.Field0[0][document_520098750.Field0[1]]).length, 6)) | 0))) {
            F.line = 148;
            r_520098754 = chckRange(((((((((((((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 1), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 2), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 3), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 4), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(addInt(pos_520098755, 5), 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
            F.line = 154;
            pos_520098755 = addInt(pos_520098755, 6);
            }
            else {
              F.line = 156;
              r_520098754 = 65533;
              F.line = 157;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            
            }
            else {
              F.line = 159;
              r_520098754 = chckRange(document_520098750.Field0[0][document_520098750.Field0[1]][chckIndx(pos_520098755, 0, (document_520098750.Field0[0][document_520098750.Field0[1]]).length - 1)], (-2147483648), 2147483647);
              F.line = 160;
              pos_520098755 = addInt(pos_520098755, 1);
            }
            }}}}}
            if ((negate_520098752 != (inRuneRange__runerange_u753(r_520098754, ranges_520098751) < 0))) {
            F.line = 1240;
            F.filename = "parse.nim";
            break Label4;
            }
            
            F.line = 1241;
            lastPos_520098978 = pos_520098755;
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_520104912 = ((res_520104912 + 1) >>> 0);
          }
      };
    };
    F.line = 1242;
    F.filename = "parse.nim";
    var colontmp__520104914 = init__nodetree_u755(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], cut__strslice_u160(document_520098750, HEX2EHEX2E__strslice_u66(location_p1, subInt(lastPos_520098978, 1))), null);
    F.line = 1242;
    var colontmp__520104915 = lastPos_520098978;
    F.line = 1242;
    result_520098749 = nimCopy(result_520098749, {Field0: colontmp__520104914, Field1: colontmp__520104915}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520098749;

}

function parse__parse_u4972(self_p0, location_p1) {
      var Temporary1;

  var result_520098671 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (self_p0.compare((Temporary1 = str__strslice_u132(grammar__parse_u1419(self_p0).document), Temporary1)[0][Temporary1[1]], location_p1, self_p0.text)) {
    if ((self_p0.flags[9] != undefined)) {
    F.line = 1138;
    F.filename = "parse.nim";
    var colontmp__520104917 = EmptyNode_520094000;
    F.line = 1138;
    var colontmp__520104918 = addInt(location_p1, (((self_p0.text).length) | 0));
    F.line = 1138;
    result_520098671 = nimCopy(result_520098671, {Field0: colontmp__520104917, Field1: colontmp__520104918}, NTI520093764);
    break BeforeRet;
    }
    
    F.line = 1139;
    var nextLoc_520098676 = addInt(location_p1, (((self_p0.text).length) | 0));
    F.line = 1140;
    var colontmp__520104919 = init__nodetree_u755(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], cut__strslice_u160(grammar__parse_u1419(self_p0).document, HEX2EHEX2E__strslice_u66(location_p1, subInt(nextLoc_520098676, 1))), null);
    F.line = 1140;
    var colontmp__520104920 = nextLoc_520098676;
    F.line = 1140;
    result_520098671 = nimCopy(result_520098671, {Field0: colontmp__520104919, Field1: colontmp__520104920}, NTI520093764);
    break BeforeRet;
    }
    
    F.line = 1141;
    var colontmp__520104921 = null;
    F.line = 1141;
    var colontmp__520104922 = location_p1;
    F.line = 1141;
    result_520098671 = nimCopy(result_520098671, {Field0: colontmp__520104921, Field1: colontmp__520104922}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520098671;

}

function nsuContinuesWith(s_p0, substr_p1, start_p2) {
  var result_1006634455 = false;

  var F = {procname: "strutils.continuesWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1690;
    F.filename = "strutils.nim";
    var i_1006634456 = 0;
    Label1: {
      F.line = 1691;
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_p1).length <= i_1006634456)) {
          F.line = 1692;
          result_1006634455 = true;
          break BeforeRet;
          }
          
          if ((((s_p0).length <= addInt(i_1006634456, start_p2)) || !((s_p0[chckIndx(addInt(i_1006634456, start_p2), 0, (s_p0).length - 1)] == substr_p1[chckIndx(i_1006634456, 0, (substr_p1).length - 1)])))) {
          F.line = 1693;
          result_1006634455 = false;
          break BeforeRet;
          }
          
          F.line = 1694;
          i_1006634456 = addInt(i_1006634456, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_1006634455;

}

function parse__parse_u4640(self_p0, location_p1) {
      var Temporary1;

  var result_520098339 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (nsuContinuesWith((Temporary1 = str__strslice_u132(grammar__parse_u1419(self_p0).document), Temporary1)[0][Temporary1[1]], self_p0.text, chckRange(location_p1, 0, 2147483647))) {
    if ((self_p0.flags[9] != undefined)) {
    F.line = 1069;
    F.filename = "parse.nim";
    var colontmp__520104923 = EmptyNode_520094000;
    F.line = 1069;
    var colontmp__520104924 = addInt(location_p1, (((self_p0.text).length) | 0));
    F.line = 1069;
    result_520098339 = nimCopy(result_520098339, {Field0: colontmp__520104923, Field1: colontmp__520104924}, NTI520093764);
    break BeforeRet;
    }
    
    F.line = 1072;
    var colontmp__520104925 = init__nodetree_u755(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], self_p0.slice, null);
    F.line = 1072;
    var colontmp__520104926 = addInt(location_p1, (((self_p0.text).length) | 0));
    F.line = 1072;
    result_520098339 = nimCopy(result_520098339, {Field0: colontmp__520104925, Field1: colontmp__520104926}, NTI520093764);
    break BeforeRet;
    }
    
    F.line = 1073;
    var colontmp__520104927 = null;
    F.line = 1073;
    var colontmp__520104928 = location_p1;
    F.line = 1073;
    result_520098339 = nimCopy(result_520098339, {Field0: colontmp__520104927, Field1: colontmp__520104928}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520098339;

}

function HEX28HEX29__parse_u3693(parser_p0, location_p1) {
  var result_520097392 = {Field0: null, Field1: 0};

  var F = {procname: "parse.()", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 646;
    F.filename = "parse.nim";
    result_520097392 = nimCopy(result_520097392, parser_p0.call(parser_p0, location_p1), NTI520093764);
  framePtr = F.prev;

  return result_520097392;

}

function parse__parse_u6268(self_p0, location_p1) {
  var result_520099967 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1578;
    F.filename = "parse.nim";
    var loc_520099968 = location_p1;
    F.line = 1579;
    var node_520099969 = null;
    Label1: {
      F.line = 1580;
      var parser_520099973 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520104933 = 0;
      F.line = 250;
      var L_520104934 = (self_p0.subParsers).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520104933 < L_520104934)) break Label3;
            F.line = 1580;
            F.filename = "parse.nim";
            parser_520099973 = self_p0.subParsers[chckIndx(i_520104933, 0, (self_p0.subParsers).length - 1)];
            F.line = 1581;
            var tmpTupleAsgn_520099974 = HEX28HEX29__parse_u3693(parser_520099973, loc_520099968);
            F.line = 1581;
            node_520099969 = tmpTupleAsgn_520099974["Field0"];
            F.line = 1581;
            loc_520099968 = tmpTupleAsgn_520099974["Field1"];
            if (!((node_520099969 == null))) {
            F.line = 1583;
            var colontmp__520104931 = grammar__parse_u1419(self_p0).returnItem(self_p0, node_520099969);
            F.line = 1583;
            var colontmp__520104932 = loc_520099968;
            F.line = 1583;
            result_520099967 = nimCopy(result_520099967, {Field0: colontmp__520104931, Field1: colontmp__520104932}, NTI520093764);
            break BeforeRet;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520104933 += 1;
            if (!(((self_p0.subParsers).length == L_520104934))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 1584;
    F.filename = "parse.nim";
    var colontmp__520104936 = null;
    F.line = 1584;
    var colontmp__520104937 = location_p1;
    F.line = 1584;
    result_520099967 = nimCopy(result_520099967, {Field0: colontmp__520104936, Field1: colontmp__520104937}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520099967;

}

function max__parse_u6097(x_p0, y_p1) {
    var Temporary1;

  var result_520099797 = 0;

    if ((y_p1 <= x_p0)) {
    Temporary1 = x_p0;
    }
    else {
    Temporary1 = y_p1;
    }
    
    result_520099797 = Temporary1;

  return result_520099797;

}

function infiniteLoopWarning__parse_u5953(parser_p0, node_p1, location_p2) {
  var F = {procname: "parse.infiniteLoopWarning", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1407;
    F.filename = "parse.nim";
    break BeforeRet;
  };
  framePtr = F.prev;

  
}

function parse__parse_u6084(self_p0, location_p1) {
  var result_520099783 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1502;
    F.filename = "parse.nim";
    var nodes_520099801 = [];
    F.line = 1503;
    var loc_520099802 = location_p1;
    F.line = 1504;
    var lastLoc_520099803 = location_p1;
    F.line = 1505;
    var node_520099804 = null;
    Label1: {
      F.line = 1506;
      var i_520099817 = 0;
      F.line = 76;
      F.filename = "iterators_1.nim";
      var res_520104942 = 1;
      Label2: {
        F.line = 77;
          Label3: while (true) {
          if (!(res_520104942 <= self_p0.repRange.Field0)) break Label3;
            F.line = 1506;
            F.filename = "parse.nim";
            i_520099817 = res_520104942;
            F.line = 1507;
            var tmpTupleAsgn_520099818 = HEX28HEX29__parse_u3693(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)], loc_520099802);
            F.line = 1507;
            node_520099804 = tmpTupleAsgn_520099818["Field0"];
            F.line = 1507;
            loc_520099802 = tmpTupleAsgn_520099818["Field1"];
            if ((node_520099804 == null)) {
            F.line = 1509;
            var colontmp__520104939 = null;
            F.line = 1509;
            var colontmp__520104940 = lastLoc_520099803;
            F.line = 1509;
            result_520099783 = nimCopy(result_520099783, {Field0: colontmp__520104939, Field1: colontmp__520104940}, NTI520093764);
            break BeforeRet;
            }
            else {
              F.line = 1511;
            nodes_520099801.push(node_520099804);;
            }
            
            if ((loc_520099802 <= lastLoc_520099803)) {
            F.line = 1513;
            infiniteLoopWarning__parse_u5953(self_p0, node_520099804, loc_520099802);
            F.line = 1514;
            break Label1;
            }
            
            F.line = 1515;
            lastLoc_520099803 = loc_520099802;
            F.line = 79;
            F.filename = "iterators_1.nim";
            res_520104942 = ((res_520104942 + 1) >>> 0);
          }
      };
    };
    Label4: {
      F.line = 1516;
      F.filename = "parse.nim";
      var i_520099831 = 0;
      F.line = 46;
      F.filename = "iterators_1.nim";
      var colontmp__520104945 = 0;
      F.line = 1516;
      F.filename = "parse.nim";
      colontmp__520104945 = ((self_p0.repRange.Field0 + 1) >>> 0);
      F.line = 76;
      F.filename = "iterators_1.nim";
      var res_520104946 = colontmp__520104945;
      Label5: {
        F.line = 77;
          Label6: while (true) {
          if (!(res_520104946 <= self_p0.repRange.Field1)) break Label6;
            F.line = 1516;
            F.filename = "parse.nim";
            i_520099831 = res_520104946;
            F.line = 1517;
            var tmpTupleAsgn_520099832 = HEX28HEX29__parse_u3693(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)], loc_520099802);
            F.line = 1517;
            node_520099804 = tmpTupleAsgn_520099832["Field0"];
            F.line = 1517;
            loc_520099802 = tmpTupleAsgn_520099832["Field1"];
            if ((node_520099804 == null)) {
            F.line = 1519;
            break Label4;
            }
            else {
              F.line = 1521;
            nodes_520099801.push(node_520099804);;
            }
            
            if ((loc_520099802 <= lastLoc_520099803)) {
            F.line = 1523;
            infiniteLoopWarning__parse_u5953(self_p0, node_520099804, loc_520099802);
            F.line = 1524;
            break Label4;
            }
            
            F.line = 1525;
            lastLoc_520099803 = loc_520099802;
            F.line = 79;
            F.filename = "iterators_1.nim";
            res_520104946 = ((res_520104946 + 1) >>> 0);
          }
      };
    };
    F.line = 1526;
    F.filename = "parse.nim";
    var colontmp__520104948 = grammar__parse_u1419(self_p0).returnSequence(self_p0, nodes_520099801);
    F.line = 1526;
    var colontmp__520104949 = loc_520099802;
    F.line = 1526;
    result_520099783 = nimCopy(result_520099783, {Field0: colontmp__520104948, Field1: colontmp__520104949}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520099783;

}

function matchLen__strslice_u375(slice_p0, pattern_p1, location_p2) {
    var Temporary1;

  var result_1140851067 = 0;

  var F = {procname: "strslice.matchLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((0 <= location_p2) && (location_p2 <= addInt(subInt(slice_p0.Field2, slice_p0.Field1), 1))))) {
    F.line = 265;
    F.filename = "strslice.nim";
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim(265, 5) `location >= 0 and location <= slice.stop - slice.start + 1` "));
    }
    
    F.line = 266;
    pattern_p1.Field0.lastIndex = addInt(location_p2, slice_p0.Field1);
    F.line = 267;
    var m_1140851073 = (toJSStr((Temporary1 = str__strslice_u132(slice_p0), Temporary1)[0][Temporary1[1]]).match(pattern_p1.Field0) || []);
    if ((0 < (m_1140851073).length)) {
    if (!(((m_1140851073).length == 1))) {
    F.line = 269;
    failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim(269, 7) `m.len == 1` "));
    }
    
    F.line = 270;
    result_1140851067 = (((cstrToNimstr(m_1140851073[chckIndx(0, 0, (m_1140851073).length - 1)])).length) | 0);
    break BeforeRet;
    }
    
    F.line = 271;
    result_1140851067 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1140851067;

}

function strip__strslice_u276(s_p0, first_p1, last_p2) {
  var result_1140850968 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.strip", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 202;
    F.filename = "strslice.nim";
    var colontmp__520104958 = s_p0.Field0[0], colontmp__520104958_Idx = s_p0.Field0[1];
    F.line = 202;
    var colontmp__520104959 = s_p0.Field1;
    F.line = 202;
    var colontmp__520104960 = s_p0.Field2;
    F.line = 202;
    result_1140850968 = nimCopy(result_1140850968, {Field0: [colontmp__520104958, colontmp__520104958_Idx], Field1: colontmp__520104959, Field2: colontmp__520104960}, NTI1140850691);
    if (first_p1) {
    Label1: {
      F.line = 205;
      var i_1140850969 = 0;
      F.line = 116;
      F.filename = "iterators_1.nim";
      var res_520104962 = result_1140850968.Field1;
      Label2: {
        F.line = 117;
          Label3: while (true) {
          if (!(res_520104962 <= result_1140850968.Field2)) break Label3;
            F.line = 205;
            F.filename = "strslice.nim";
            i_1140850969 = res_520104962;
            if (!((ConstSet14[result_1140850968.Field0[0][result_1140850968.Field0[1]][chckIndx(i_1140850969, 0, (result_1140850968.Field0[0][result_1140850968.Field0[1]]).length - 1)]] != undefined))) {
            F.line = 206;
            break Label1;
            }
            
            F.line = 207;
            result_1140850968.Field1 = addInt(result_1140850968.Field1, 1);
            F.line = 119;
            F.filename = "iterators_1.nim";
            res_520104962 = addInt(res_520104962, 1);
          }
      };
    };
    }
    
    if (last_p2) {
    Label4: {
      F.line = 209;
      F.filename = "strslice.nim";
      var i_1140850991 = 0;
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_520104966 = ((result_1140850968.Field2) | 0);
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(((result_1140850968.Field1) | 0) <= res_520104966)) break Label6;
            F.line = 209;
            F.filename = "strslice.nim";
            i_1140850991 = Number(BigInt.asIntN(32, BigInt(res_520104966)));
            if (!((ConstSet15[result_1140850968.Field0[0][result_1140850968.Field0[1]][chckIndx(i_1140850991, 0, (result_1140850968.Field0[0][result_1140850968.Field0[1]]).length - 1)]] != undefined))) {
            F.line = 210;
            break Label4;
            }
            
            F.line = 211;
            result_1140850968.Field2 = subInt(result_1140850968.Field2, 1);
            F.line = 39;
            F.filename = "iterators_1.nim";
            res_520104966 = subInt(res_520104966, 1);
          }
      };
    };
    }
    
  framePtr = F.prev;

  return result_1140850968;

}

function parse__parse_u5880(self_p0, location_p1) {
    var Temporary1;
    var Temporary2;

  var result_520099579 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1372;
    F.filename = "parse.nim";
    var l_520099580 = matchLen__strslice_u375(grammar__parse_u1419(self_p0).document, self_p0.combined.Field1, location_p1);
    F.line = 1373;
    var capture_520099581 = {Field0: [null, 0], Field1: 0, Field2: 0};
    if ((0 <= l_520099580)) {
    if (((0 < l_520099580) || !((self_p0.flags[7] != undefined)))) {
    if ((self_p0.flags[9] != undefined)) {
    if (self_p0.keep_comments) {
    F.line = 1378;
    capture_520099581 = nimCopy(capture_520099581, cut__strslice_u160(grammar__parse_u1419(self_p0).document, HEX2EHEX2E__strslice_u66(location_p1, subInt(addInt(location_p1, l_520099580), 1))), NTI1140850691);
    if ((0 < len__strslice_u144(strip__strslice_u276(capture_520099581, true, true)))) {
    F.line = 1380;
    if (((name__parse_u986(self_p0)).length == 0)) {
    Temporary1 = commentName_520099475[0][commentName_520099475[1]];
    }
    else {
    Temporary1 = self_p0.nodeName[0][self_p0.nodeName[1]];
    }
    
    var Temporary2 = Temporary1, name_520099601 = Temporary2[0], name_520099601_Idx = Temporary2[1];
    F.line = 1381;
    var colontmp__520104950 = init__nodetree_u755(new__nodetree_u708(), name_520099601, name_520099601_Idx, capture_520099581, null);
    F.line = 1381;
    var colontmp__520104951 = addInt(location_p1, l_520099580);
    F.line = 1381;
    result_520099579 = nimCopy(result_520099579, {Field0: colontmp__520104950, Field1: colontmp__520104951}, NTI520093764);
    break BeforeRet;
    }
    
    }
    
    F.line = 1382;
    var colontmp__520104952 = EmptyNode_520094000;
    F.line = 1382;
    var colontmp__520104953 = addInt(location_p1, l_520099580);
    F.line = 1382;
    result_520099579 = nimCopy(result_520099579, {Field0: colontmp__520104952, Field1: colontmp__520104953}, NTI520093764);
    break BeforeRet;
    }
    
    F.line = 1383;
    capture_520099581 = nimCopy(capture_520099581, cut__strslice_u160(grammar__parse_u1419(self_p0).document, HEX2EHEX2E__strslice_u66(location_p1, subInt(addInt(location_p1, l_520099580), 1))), NTI1140850691);
    F.line = 1384;
    var colontmp__520104954 = init__nodetree_u755(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], capture_520099581, null);
    F.line = 1384;
    var colontmp__520104955 = addInt(location_p1, l_520099580);
    F.line = 1384;
    result_520099579 = nimCopy(result_520099579, {Field0: colontmp__520104954, Field1: colontmp__520104955}, NTI520093764);
    break BeforeRet;
    }
    
    }
    
    F.line = 1385;
    var colontmp__520104956 = EmptyNode_520094000;
    F.line = 1385;
    var colontmp__520104957 = location_p1;
    F.line = 1385;
    result_520099579 = nimCopy(result_520099579, {Field0: colontmp__520104956, Field1: colontmp__520104957}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520099579;

}

function parse__parse_u5729(self_p0, location_p1) {
  var result_520099428 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1301;
    F.filename = "parse.nim";
    var l_520099429 = matchLen__strslice_u375(grammar__parse_u1419(self_p0).document, self_p0.reInfo.Field1, location_p1);
    if ((0 <= l_520099429)) {
    if ((self_p0.flags[9] != undefined)) {
    F.line = 1304;
    var colontmp__520104968 = EmptyNode_520094000;
    F.line = 1304;
    var colontmp__520104969 = addInt(location_p1, l_520099429);
    F.line = 1304;
    result_520099428 = nimCopy(result_520099428, {Field0: colontmp__520104968, Field1: colontmp__520104969}, NTI520093764);
    break BeforeRet;
    }
    else {
    if (((self_p0.flags[7] != undefined) && (l_520099429 == 0))) {
    F.line = 1306;
    var colontmp__520104970 = EmptyNode_520094000;
    F.line = 1306;
    var colontmp__520104971 = location_p1;
    F.line = 1306;
    result_520099428 = nimCopy(result_520099428, {Field0: colontmp__520104970, Field1: colontmp__520104971}, NTI520093764);
    break BeforeRet;
    }
    }
    F.line = 1307;
    var text_520099449 = nimCopy(null, cut__strslice_u160(grammar__parse_u1419(self_p0).document, HEX2EHEX2E__strslice_u66(location_p1, subInt(addInt(location_p1, l_520099429), 1))), NTI1140850691);
    F.line = 1308;
    var colontmp__520104972 = init__nodetree_u755(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], text_520099449, null);
    F.line = 1308;
    var colontmp__520104973 = addInt(location_p1, l_520099429);
    F.line = 1308;
    result_520099428 = nimCopy(result_520099428, {Field0: colontmp__520104972, Field1: colontmp__520104973}, NTI520093764);
    break BeforeRet;
    }
    
    F.line = 1309;
    var colontmp__520104974 = null;
    F.line = 1309;
    var colontmp__520104975 = location_p1;
    F.line = 1309;
    result_520099428 = nimCopy(result_520099428, {Field0: colontmp__520104974, Field1: colontmp__520104975}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520099428;

}

function parse__parse_u9599(self_p0, location_p1) {
  var result_520103298 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1939;
    F.filename = "parse.nim";
    result_520103298 = nimCopy(result_520103298, HEX28HEX29__parse_u3693(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)], location_p1), NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520103298;

}

function parse__parse_u7147(self_p0, location_p1) {
  var result_520100846 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1832;
    F.filename = "parse.nim";
    var tmpTuple_520100847 = HEX28HEX29__parse_u3693(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)], location_p1);
    F.line = 1832;
    var node_520100848 = tmpTuple_520100847["Field0"];
    F.line = 1832;
    var loc_520100849 = tmpTuple_520100847["Field1"];
    if (!((node_520100848 == null))) {
    if ((self_p0.flags[9] != undefined)) {
    F.line = 1835;
    var colontmp__520104976 = EmptyNode_520094000;
    F.line = 1835;
    var colontmp__520104977 = loc_520100849;
    F.line = 1835;
    result_520100846 = nimCopy(result_520100846, {Field0: colontmp__520104976, Field1: colontmp__520104977}, NTI520093764);
    break BeforeRet;
    }
    
    if (!((self_p0.flags[7] != undefined))) {
    if ((node_520100848 == EmptyNode_520094000)) {
    F.line = 1838;
    var colontmp__520104978 = init__parse_u3754(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], [], null);
    F.line = 1838;
    var colontmp__520104979 = loc_520100849;
    F.line = 1838;
    result_520100846 = nimCopy(result_520100846, {Field0: colontmp__520104978, Field1: colontmp__520104979}, NTI520093764);
    break BeforeRet;
    }
    
    if ((((node_520100848.nameRef[0][node_520100848.nameRef[1]]).length == 0) || (node_520100848.nameRef[0][node_520100848.nameRef[1]][chckIndx(0, 0, (node_520100848.nameRef[0][node_520100848.nameRef[1]]).length - 1)] == 58))) {
    F.line = 1840;
    node_520100848.nameRef[0] = self_p0.nodeName[0]; node_520100848.nameRef[1] = self_p0.nodeName[1];
    }
    else {
      F.line = 1842;
      var colontmp__520104980 = init__nodetree_u817(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], [node_520100848], null);
      F.line = 1842;
      var colontmp__520104981 = loc_520100849;
      F.line = 1842;
      result_520100846 = nimCopy(result_520100846, {Field0: colontmp__520104980, Field1: colontmp__520104981}, NTI520093764);
      break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 1843;
    var colontmp__520104982 = node_520100848;
    F.line = 1843;
    var colontmp__520104983 = loc_520100849;
    F.line = 1843;
    result_520100846 = nimCopy(result_520100846, {Field0: colontmp__520104982, Field1: colontmp__520104983}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520100846;

}

function parse__parse_u7039(self_p0, location_p1) {
  var result_520100738 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1772;
    F.filename = "parse.nim";
    var loc_520100739 = 0;
    F.line = 1773;
    var node_520100740 = null;
    F.line = 1775;
    var tmpTupleAsgn_520100741 = HEX28HEX29__parse_u3693(self_p0.subParsers[chckIndx(0, 0, (self_p0.subParsers).length - 1)], location_p1);
    F.line = 1775;
    node_520100740 = tmpTupleAsgn_520100741["Field0"];
    F.line = 1775;
    loc_520100739 = tmpTupleAsgn_520100741["Field1"];
    if ((self_p0.positive != (node_520100740 == null))) {
    if ((self_p0.flags[7] != undefined)) {
    F.line = 1778;
    node_520100740 = EmptyNode_520094000;
    }
    else {
      F.line = 1780;
      node_520100740 = init__parse_u3754(new__nodetree_u708(), self_p0.nodeName[0], self_p0.nodeName[1], [], null);
    }
    
    F.line = 1781;
    var colontmp__520104984 = node_520100740;
    F.line = 1781;
    var colontmp__520104985 = location_p1;
    F.line = 1781;
    result_520100738 = nimCopy(result_520100738, {Field0: colontmp__520104984, Field1: colontmp__520104985}, NTI520093764);
    break BeforeRet;
    }
    else {
      F.line = 1783;
      var colontmp__520104986 = null;
      F.line = 1783;
      var colontmp__520104987 = location_p1;
      F.line = 1783;
      result_520100738 = nimCopy(result_520100738, {Field0: colontmp__520104986, Field1: colontmp__520104987}, NTI520093764);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_520100738;

}

function reentry__parse_u3996(catcher_p0, location_p1) {
  var result_520097697 = {Field0: null, Field1: 0};

  var F = {procname: "parse.reentry", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 842;
    F.filename = "parse.nim";
    var node_520097698 = EmptyNode_520094000;
    F.line = 843;
    var reloc_520097699 = (-1);
    if ((0 < (catcher_p0.skipList).length)) {
    F.line = 845;
    var gr_520097703 = grammar__parse_u1419(catcher_p0);
    F.line = 846;
    var tmpTupleAsgn_520097704 = reentry_point__parse_u1460(gr_520097703.document, location_p1, catcher_p0.skipList, gr_520097703.commentRe, 10000);
    F.line = 846;
    node_520097698 = tmpTupleAsgn_520097704["Field0"];
    F.line = 846;
    reloc_520097699 = tmpTupleAsgn_520097704["Field1"];
    if (!((node_520097698 == null))) {
    F.line = 849;
    var nd_520097708 = node_520097698;
    F.line = 850;
    var colontmp__520104997 = nd_520097708;
    F.line = 850;
    var colontmp__520104998 = reloc_520097699;
    F.line = 850;
    result_520097697 = nimCopy(result_520097697, {Field0: colontmp__520104997, Field1: colontmp__520104998}, NTI520096154);
    break BeforeRet;
    }
    
    }
    
    F.line = 851;
    var colontmp__520104999 = init__parse_u282(new__nodetree_u708(), [95,95,90,79,77,66,73,69], [], null);
    F.line = 851;
    var colontmp__520105000 = (-1);
    F.line = 851;
    result_520097697 = nimCopy(result_520097697, {Field0: colontmp__520104999, Field1: colontmp__520105000}, NTI520096154);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097697;

}

function startsWith__parse_u4054(str_p0, sub_p1) {
  var result_520097754 = false;

  var F = {procname: "startsWith.startsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((len__strslice_u144(str_p0) < (((sub_p1).length) | 0))) {
    F.line = 140;
    F.filename = "strslice.nim";
    result_520097754 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 145;
      var idx_520097755 = 0;
      F.line = 145;
      var c_520097756 = 0;
      F.line = 201;
      F.filename = "iterators.nim";
      var i_520105011 = 0;
      F.line = 202;
      var L_520105012 = (sub_p1).length;
      Label2: {
        F.line = 203;
          Label3: while (true) {
          if (!(i_520105011 < L_520105012)) break Label3;
            F.line = 145;
            F.filename = "strslice.nim";
            idx_520097755 = i_520105011;
            F.line = 145;
            c_520097756 = sub_p1[chckIndx(i_520105011, 0, (sub_p1).length - 1)];
            if (!((str_p0.Field0[0][str_p0.Field0[1]][chckIndx(addInt(((idx_520097755) | 0), str_p0.Field1), 0, (str_p0.Field0[0][str_p0.Field0[1]]).length - 1)] == c_520097756))) {
            F.line = 146;
            result_520097754 = false;
            break BeforeRet;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520105011 += 1;
            if (!(((sub_p1).length == L_520105012))) {
            F.line = 206;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(206, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 147;
    F.filename = "strslice.nim";
    result_520097754 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097754;

}

function HEX3DHEX3D__parse_u4049(str_p0, cmp_p1) {
  var result_520097749 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((len__strslice_u144(str_p0) == (((cmp_p1).length) | 0)))) {
    F.line = 152;
    F.filename = "strslice.nim";
    result_520097749 = false;
    break BeforeRet;
    }
    
    F.line = 158;
    result_520097749 = startsWith__parse_u4054(str_p0, cmp_p1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097749;

}

function match__parse_u4033(rule_p0, text_p1, location_p2) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_520097733 = false;

  var F = {procname: "violation.match", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 862;
    F.filename = "parse.nim";
    switch (rule_p0.kind) {
    case 0:
      F.line = 864;
      var Temporary1 = rule_p0;
      if (ConstSet16[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rxInfo\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI520093767)); }
      result_520097733 = (0 <= matchLen__strslice_u375(text_p1, Temporary1.rxInfo.Field1, location_p2));
      break BeforeRet;
      break;
    case 1:
      F.line = 866;
      var Temporary2 = rule_p0;
      if (ConstSet17[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI520093767)); }
      var Temporary3 = rule_p0;
      if (ConstSet18[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI520093767)); }
      var Temporary4 = rule_p0;
      if (ConstSet19[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI520093767)); }
      result_520097733 = HEX3DHEX3D__parse_u4049(cut__strslice_u160(text_p1, HEX2EHEX2E__strslice_u66(location_p2, subInt(addInt(location_p2, (((Temporary3.cmpStr).length) | 0)), 1))), Temporary4.cmpStr);
      break BeforeRet;
      break;
    case 2:
      F.line = 868;
      var Temporary5 = rule_p0;
      if (ConstSet20[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'findProc\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI520093767)); }
      result_520097733 = (0 <= Temporary5.findProc(text_p1, location_p2, location_p2)["Field0"]);
      break BeforeRet;
      break;
    case 3:
      F.line = 870;
      var Temporary6 = rule_p0;
      if (ConstSet21[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI520093767)); }
      var parser_520097757 = Temporary6.consumeParser;
      F.line = 871;
++excHandler;
      try {
      F.line = 872;
      var tmpTuple_520097758 = HEX28HEX29__parse_u3693(parser_520097757, location_p2);
      F.line = 872;
      var node_520097759 = tmpTuple_520097758["Field0"];
      F.line = 873;
      result_520097733 = !((node_520097759 == null));
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      framePtr = F;
      if (lastJSError && (isObj(lastJSError.m_type, NTI520093785))) {
      F.line = 875;
      var msg_520097763 = ([69,114,114,111,114,32,119,104,105,108,101,32,112,105,99,107,105,110,103,32,101,114,114,111,114,32,109,101,115,115,97,103,101,32,119,105,116,104,58,32]).concat(HEX24__parse_u1306(parser_520097757));
      F.line = 876;
      var error_520097767 = init__error_u24(new__parse_u1537(), msg_520097763, location_p2, 1301, (-1), (-1), (-1), [], (-1), []);
      F.line = 877;
      grammar__parse_u1419(parser_520097757).errors.push(error_520097767);;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      framePtr = F;
      }
      break;
    }
  };
  framePtr = F.prev;

  return result_520097733;

}

function integerOutOfRangeError__pureZparseutils_u325() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 420;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt__pureZparseutils_u327(s_p0, b_p1, b_p1_Idx) {
      var Temporary1;
          var Temporary4;

  var result_939524426 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 428;
    F.filename = "parseutils.nim";
    var sign_939524427 = (-1n);
    F.line = 429;
    var i_939524428 = 0;
    if ((i_939524428 < (s_p0).length)) {
    if ((s_p0[chckIndx(i_939524428, 0, (s_p0).length - 1)] == 43)) {
    F.line = 431;
    i_939524428 += 1;
    }
    else {
    if ((s_p0[chckIndx(i_939524428, 0, (s_p0).length - 1)] == 45)) {
    F.line = 433;
    i_939524428 += 1;
    F.line = 434;
    sign_939524427 = 1n;
    }
    }
    }
    
      if (!(i_939524428 < (s_p0).length)) Temporary1 = false; else {        Temporary1 = (ConstSet22[s_p0[chckIndx(i_939524428, 0, (s_p0).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 436;
    b_p1[b_p1_Idx] = 0n;
    Label2: {
      F.line = 437;
        Label3: while (true) {
          if (!(i_939524428 < (s_p0).length)) Temporary4 = false; else {            Temporary4 = (ConstSet23[s_p0[chckIndx(i_939524428, 0, (s_p0).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 438;
          var c_939524462 = (s_p0[chckIndx(i_939524428, 0, (s_p0).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_939524462)) / 10n <= b_p1[b_p1_Idx])) {
          F.line = 440;
          b_p1[b_p1_Idx] = ((b_p1[b_p1_Idx] * 10n) - BigInt(c_939524462));
          }
          else {
            F.line = 442;
          integerOutOfRangeError__pureZparseutils_u325();
          }
          
          F.line = 443;
          i_939524428 += 1;
          Label5: {
            F.line = 444;
              Label6: while (true) {
              if (!((i_939524428 < (s_p0).length) && (s_p0[chckIndx(i_939524428, 0, (s_p0).length - 1)] == 95))) break Label6;
                F.line = 444;
                i_939524428 += 1;
              }
          };
        }
    };
    if (((sign_939524427 == (-1n)) && (b_p1[b_p1_Idx] == (-9223372036854775808n)))) {
    F.line = 446;
    integerOutOfRangeError__pureZparseutils_u325();
    }
    else {
      F.line = 448;
      b_p1[b_p1_Idx] = (b_p1[b_p1_Idx] * sign_939524427);
      F.line = 449;
      result_939524426 = i_939524428;
    }
    
    }
    
  framePtr = F.prev;

  return result_939524426;

}

function npuParseBiggestInt(s_p0, number_p1, number_p1_Idx) {
  var result_939524487 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 465;
    F.filename = "parseutils.nim";
    var res_939524488 = [0n];
    F.line = 468;
    result_939524487 = rawParseInt__pureZparseutils_u327(s_p0, res_939524488, 0);
    if (!((result_939524487 == 0))) {
    F.line = 470;
    number_p1[number_p1_Idx] = res_939524488[0];
    }
    
  framePtr = F.prev;

  return result_939524487;

}

function npuParseInt(s_p0, number_p1, number_p1_Idx) {
  var result_939524492 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 481;
    F.filename = "parseutils.nim";
    var res_939524493 = [0n];
    F.line = 482;
    result_939524492 = npuParseBiggestInt(s_p0, res_939524493, 0);
    if (((res_939524493[0] < (-2147483648n)) || (2147483647n < res_939524493[0]))) {
    F.line = 485;
    integerOutOfRangeError__pureZparseutils_u325();
    }
    
    if (!((result_939524492 == 0))) {
    F.line = 487;
    number_p1[number_p1_Idx] = chckRange(Number(res_939524493[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_939524492;

}

function parseInt__pureZparseutils_u907(s_p0, number_p1, number_p1_Idx, start_p2) {
  var result_939525007 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1002;
    F.filename = "parseutils.nim";
    result_939525007 = npuParseInt((s_p0.slice(start_p2, (s_p0).length - 1 + 1)), number_p1, number_p1_Idx);
  framePtr = F.prev;

  return result_939525007;

}

function nsuParseInt(s_p0) {
  var result_1006633818 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1156;
    F.filename = "strutils.nim";
    result_1006633818[0] = 0;
    F.line = 1157;
    var L_1006633819 = parseInt__pureZparseutils_u907(s_p0, result_1006633818, 0, 0);
    if ((!((L_1006633819 == (s_p0).length)) || (L_1006633819 == 0))) {
    F.line = 1159;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_1006633818[0];

}

function violation__parse_u4023(catcher_p0, location_p1, wasLookAhead_p2, expected_p3, reloc_p4, errorNode_p5) {
    var Temporary1;
    var Temporary3;

  var result_520097728 = {Field0: null, Field1: 0};

  var F = {procname: "parse.violation", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 880;
    F.filename = "parse.nim";
    var gr_520097781 = grammar__parse_u1419(catcher_p0);
    F.line = 881;
    var snippet_520097790 = cstrToNimstr(replace__strslice_u397(cut__strslice_u160(gr_520097781.document, HEX2EHEX2E__strslice_u66(location_p1, addInt(location_p1, 9))), ure__parse_u49([92,110]), [92,110]));
    F.line = 882;
    if ((len__strslice_u144(gr_520097781.document) <= location_p1)) {
    Temporary1 = [69,79,70];
    }
    else {
      Label2: {
        F.line = 882;
        var fmtRes_520097795 = [mnewString(0)];
        F.line = 882;
        fmtRes_520097795[0].push.apply(fmtRes_520097795[0], [194,187]);;
        F.line = 882;
        formatValue__runerange_u22(fmtRes_520097795, 0, snippet_520097790);
        F.line = 882;
        fmtRes_520097795[0].push.apply(fmtRes_520097795[0], [194,171]);;
      };
    Temporary1 = fmtRes_520097795[0];
    }
    
    var found_520097801 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 883;
    if ((catcher_p0.symbol == null)) {
    Temporary3 = HEX24__parse_u1306(catcher_p0);
    }
    else {
    Temporary3 = catcher_p0.symbol.pname;
    }
    
    var sym_520097805 = nimCopy(null, Temporary3, NTI33554449);
    F.line = 885;
    var errCode_520097806 = 1010;
    F.line = 886;
    Label4: {
      F.line = 886;
      var fmtRes_520097811 = [mnewString(0)];
      F.line = 886;
      formatValue__runerange_u22(fmtRes_520097811, 0, expected_p3);
      F.line = 886;
      fmtRes_520097811[0].push.apply(fmtRes_520097811[0], [32,101,120,112,101,99,116,101,100,32,98,121,32,112,97,114,115,101,114,32]);;
      F.line = 886;
      formatValue__runerange_u22(fmtRes_520097811, 0, sym_520097805);
      F.line = 886;
      fmtRes_520097811[0].push.apply(fmtRes_520097811[0], [44,32,98,117,116,32]);;
      F.line = 886;
      formatValue__runerange_u22(fmtRes_520097811, 0, found_520097801);
      F.line = 886;
      fmtRes_520097811[0].push.apply(fmtRes_520097811[0], [32,102,111,117,110,100,33]);;
    };
    var message_520097827 = nimCopy(null, fmtRes_520097811[0], NTI33554449);
    Label5: {
      F.line = 888;
      var rule_520097831 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 888;
      var msg_520097832 = [];
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520105004 = 0;
      F.line = 250;
      var L_520105005 = (catcher_p0.errorList).length;
      Label6: {
        F.line = 251;
          Label7: while (true) {
          if (!(i_520105004 < L_520105005)) break Label7;
            F.line = 888;
            F.filename = "parse.nim";
            rule_520097831 = catcher_p0.errorList[chckIndx(i_520105004, 0, (catcher_p0.errorList).length - 1)]["Field0"];
            F.line = 888;
            msg_520097832 = catcher_p0.errorList[chckIndx(i_520105004, 0, (catcher_p0.errorList).length - 1)]["Field1"];
            if (match__parse_u4033(rule_520097831, gr_520097781.document, location_p1)) {
            F.line = 890;
            var i_520097833 = addInt(nsuFindChar(msg_520097832, 58, 0, (-1)), 1);
            F.line = 891;
++excHandler;
            try {
            if ((0 < i_520097833)) {
            F.line = 892;
            errCode_520097806 = Number(BigInt.asUintN(16, BigInt(nsuParseInt(HEX5BHEX5D__pureZstrutils_u1279(msg_520097832, HEX2EHEX2E__stdZstrbasics_u48(0, subInt(i_520097833, 1)))))));
            }
            
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = F;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
            F.line = 894;
            i_520097833 = 0;
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            framePtr = F;
            }
            F.line = 895;
            message_520097827 = nimCopy(null, nsuReplaceStr(nsuReplaceStr(HEX5BHEX5D__pureZstrutils_u1307(msg_520097832, HEX2EHEX2E__stdZenumutils_u105(i_520097833, 1)), [123,48,125], expected_p3), [123,49,125], found_520097801), NTI33554449);
            F.line = 896;
            break Label5;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520105004 += 1;
            if (!(((catcher_p0.errorList).length == L_520105005))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((wasLookAhead_p2 && (len__strslice_u144(gr_520097781.document) <= location_p1))) {
    F.line = 898;
    F.filename = "parse.nim";
    errCode_520097806 = 1015;
    }
    
    F.line = 899;
    var error_520097879 = init__error_u24(new__parse_u1537(), message_520097827, location_p1, errCode_520097806, (-1), (-1), (-1), [], (-1), []);
    F.line = 900;
    gr_520097781.errors.push(error_520097879);;
    F.line = 901;
    var colontmp__520105007 = error_520097879;
    F.line = 901;
    var colontmp__520105008 = addInt(location_p1, nimMax(reloc_p4, 0));
    F.line = 901;
    result_520097728 = nimCopy(result_520097728, {Field0: colontmp__520105007, Field1: colontmp__520105008}, NTI520096170);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520097728;

}

function parse__parse_u6620(self_p0, location_p1) {
                var Temporary5;

  var result_520100319 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1662;
    F.filename = "parse.nim";
    var results_520100335 = [];
    F.line = 1663;
    var loc_520100336 = location_p1;
    F.line = 1664;
    var reloc_520100337 = 0;
    F.line = 1665;
    var error_520100338 = null;
    F.line = 1666;
    var node_520100339 = null;
    F.line = 1666;
    var nd_520100340 = null;
    F.line = 1667;
    var someNode_520100341 = null;
    Label1: {
      F.line = 1669;
      var pos_520100342 = (-1);
      Label2: {
        F.line = 1668;
        var parser_520100346 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520104992 = 0;
        F.line = 250;
        var L_520104993 = (self_p0.subParsers).length;
        Label3: {
          F.line = 251;
            Label4: while (true) {
            if (!(i_520104992 < L_520104993)) break Label4;
              F.line = 1669;
              F.filename = "parse.nim";
              parser_520100346 = self_p0.subParsers[chckIndx(i_520104992, 0, (self_p0.subParsers).length - 1)];
              F.line = 1669;
              pos_520100342 = addInt(pos_520100342, 1);
              F.line = 1669;
              var tmpTupleAsgn_520100352 = HEX28HEX29__parse_u3693(parser_520100346, loc_520100336);
              F.line = 1669;
              node_520100339 = tmpTupleAsgn_520100352["Field0"];
              F.line = 1669;
              loc_520100336 = tmpTupleAsgn_520100352["Field1"];
              if ((node_520100339 == null)) {
              if ((Number(BigInt.asUintN(32, BigInt(pos_520100342))) < self_p0.mandatory)) {
              F.line = 1672;
              var colontmp__520104990 = null;
              F.line = 1672;
              var colontmp__520104991 = location_p1;
              F.line = 1672;
              result_520100319 = nimCopy(result_520100319, {Field0: colontmp__520104990, Field1: colontmp__520104991}, NTI520093764);
              break BeforeRet;
              }
              else {
                F.line = 1674;
                var tmpTupleAsgn_520100356 = reentry__parse_u3996(self_p0, loc_520100336);
                F.line = 1674;
                someNode_520100341 = tmpTupleAsgn_520100356["Field0"];
                F.line = 1674;
                reloc_520100337 = tmpTupleAsgn_520100356["Field1"];
                F.line = 1675;
                if (!(eqStrings(parser_520100346.pname, []))) {
                Temporary5 = parser_520100346.pname;
                }
                else {
                Temporary5 = HEX24__parse_u1306(parser_520100346);
                }
                
                var tmpTupleAsgn_520100357 = violation__parse_u4023(self_p0, loc_520100336, false, Temporary5, reloc_520100337, someNode_520100341);
                F.line = 1675;
                error_520100338 = tmpTupleAsgn_520100357["Field0"];
                F.line = 1675;
                loc_520100336 = tmpTupleAsgn_520100357["Field1"];
                if ((0 <= reloc_520100337)) {
                F.line = 1677;
                var tmpTupleAsgn_520100358 = HEX28HEX29__parse_u3693(parser_520100346, loc_520100336);
                F.line = 1677;
                nd_520100340 = tmpTupleAsgn_520100358["Field0"];
                F.line = 1677;
                loc_520100336 = tmpTupleAsgn_520100358["Field1"];
                if (!((nd_520100340 == null))) {
                F.line = 1679;
                results_520100335.push(someNode_520100341);;
                F.line = 1680;
                someNode_520100341 = nd_520100340;
                }
                
                if ((!((((someNode_520100341.childrenSeq).length == 0) && (len__strslice_u144(someNode_520100341.textSlice) == 0))) || !((((someNode_520100341.nameRef[0][someNode_520100341.nameRef[1]]).length == 0) || (someNode_520100341.nameRef[0][someNode_520100341.nameRef[1]][chckIndx(0, 0, (someNode_520100341.nameRef[0][someNode_520100341.nameRef[1]]).length - 1)] == 58))))) {
                F.line = 1682;
                results_520100335.push(someNode_520100341);;
                }
                
                }
                else {
                  F.line = 1684;
                  results_520100335.push(someNode_520100341);;
                  F.line = 1685;
                  break Label2;
                }
                
              }
              
              }
              else {
              if ((!((((node_520100339.childrenSeq).length == 0) && (len__strslice_u144(node_520100339.textSlice) == 0))) || !((((node_520100339.nameRef[0][node_520100339.nameRef[1]]).length == 0) || (node_520100339.nameRef[0][node_520100339.nameRef[1]][chckIndx(0, 0, (node_520100339.nameRef[0][node_520100339.nameRef[1]]).length - 1)] == 58))))) {
              F.line = 1687;
              results_520100335.push(node_520100339);;
              }
              }
              F.line = 13;
              F.filename = "iterators.nim";
              i_520104992 += 1;
              if (!(((self_p0.subParsers).length == L_520104993))) {
              F.line = 254;
              failedAssertImpl__stdZassertions_u85(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    F.line = 1688;
    F.filename = "parse.nim";
    someNode_520100341 = grammar__parse_u1419(self_p0).returnSequence(self_p0, results_520100335);
    if (!((error_520100338 == null))) {
    F.line = 177;
    F.filename = "nodetree.nim";
    (assignSourcePos__nodetree_u628(someNode_520100341, location_p1));
    F.line = 1690;
    F.filename = "parse.nim";
    raiseException({origin: self_p0, node: someNode_520100341, node_orig_len: subInt(loc_520100336, location_p1), location: location_p1, error: error_520100338, first_throw: true, m_type: NTI520093785, parent: null, name: null, message: [], trace: [], up: null}, "ParsingException:ObjectType");
    }
    
    F.line = 1693;
    var colontmp__520104995 = someNode_520100341;
    F.line = 1693;
    var colontmp__520104996 = loc_520100336;
    F.line = 1693;
    result_520100319 = nimCopy(result_520100319, {Field0: colontmp__520104995, Field1: colontmp__520104996}, NTI520093764);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520100319;

}

function parse__parse_u1951(self_p0, location_p1) {
  var result_520095650 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 586;
    F.filename = "parse.nim";
    rawEcho([80,97,114,115,101,114,46,112,97,114,115,101]);
    F.line = 587;
    var colontmp__520105016 = null;
    F.line = 587;
    var colontmp__520105017 = 0;
    F.line = 587;
    result_520095650 = nimCopy(result_520095650, {Field0: colontmp__520105016, Field1: colontmp__520105017}, NTI520093764);
  framePtr = F.prev;

  return result_520095650;

}

function parse__parse_u1955(self_p0, location_p1) {
  var result_520095652 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 515;
    F.filename = "jssys.nim";
    chckNilDisp(self_p0);
    if (isObj(self_p0.m_type, NTI520097233)) {
    F.line = 585;
    F.filename = "parse.nim";
    result_520095652 = nimCopy(result_520095652, parse__parse_u5050(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520096663)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u4972(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520096621)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u4640(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098722)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u6268(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098549)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u6084(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098420)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u5880(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098348)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u5729(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520099440)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u9599(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520099376)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u7147(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520099277)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u7039(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520098921)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u6620(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    else {
    if (isObj(self_p0.m_type, NTI520093775)) {
    F.line = 585;
    result_520095652 = nimCopy(result_520095652, parse__parse_u1951(self_p0, location_p1), NTI520093764);
    break BeforeRet;
    }
    }}}}}}}}}}}
  };
  framePtr = F.prev;

  return result_520095652;

}
