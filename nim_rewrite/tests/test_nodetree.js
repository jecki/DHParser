/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI671088643 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI671088654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410201 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410200 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410199 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410198 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410196 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410191 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410190 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410189 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410188 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410187 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410186 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410185 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI671088653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI922746959 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI922746965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088655 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182399 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805306437 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1107296259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1241514005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1241514002 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1241513999 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1241514010 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1241513988 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1241514009 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1241514008 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1241513990 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI922746906 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI754975093 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI754975126 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI671088646 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI671089169 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI671088651 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671088644 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI671088652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1191182341 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182339 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
NTI1191182341.base = NTI33554449;
var NNI1191182339 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182341, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554438, name: "Field2", sons: null}]};
NTI1191182339.node = NNI1191182339;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI671088644 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI671088644, name: "PRINT_ALL", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI671088644, name: "PRINT_FAILURES", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI671088644, name: "PRINT_NONE", len: 0, sons: null}}};
NTI671088644.node = NNI671088644;
var NNI671088652 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "colorOutput", len: 0, typ: NTI33554466, name: "colorOutput", sons: null}, 
{kind: 1, offset: "outputLevel", len: 0, typ: NTI671088644, name: "outputLevel", sons: null}, 
{kind: 1, offset: "isInSuite", len: 0, typ: NTI33554466, name: "isInSuite", sons: null}, 
{kind: 1, offset: "isInTest", len: 0, typ: NTI33554466, name: "isInTest", sons: null}]};
NTI671088652.node = NNI671088652;
var NNI671088651 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI671088651.node = NNI671088651;
NTI671088651.base = NTI33555173;
NTI671088652.base = NTI671088651;
NTI671088646.base = NTI671088651;
NTI671089169.base = NTI671088646;
NTI754975126.base = NTI33554449;
NTI754975093.base = NTI33554449;
NTI922746906.base = NTI33554449;
NTI1241514008.base = NTI33554449;
NTI1241513988.base = NTI1241513990;
NTI1241514009.base = NTI1241513988;
var NNI1241514005 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1107296259, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554449, name: "Field3", sons: null}]};
NTI1241514005.node = NNI1241514005;
NTI1241514002.base = NTI1241514005;
var NNI1241513999 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1241514002, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1241513999.node = NNI1241513999;
NTI1241514010.base = NTI1241513999;
var NNI1241513990 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nameRef", len: 0, typ: NTI1241514008, name: "nameRef", sons: null}, 
{kind: 1, offset: "childrenSeq", len: 0, typ: NTI1241514009, name: "childrenSeq", sons: null}, 
{kind: 1, offset: "textSlice", len: 0, typ: NTI1191182339, name: "textSlice", sons: null}, 
{kind: 1, offset: "attributesRef", len: 0, typ: NTI1241514010, name: "attributesRef", sons: null}, 
{kind: 1, offset: "sourcePos", len: 0, typ: NTI33554438, name: "sourcePos", sons: null}]};
NTI1241513990.node = NNI1241513990;
NTI1241513990.base = NTI33555173;
var NNI805306437 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306437.node = NNI805306437;
var NNI1191182399 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554438, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554438, name: "b", sons: null}]};
NTI1191182399.node = NNI1191182399;
NTI671088655.base = NTI33554449;
var NNI922746965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI922746959, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI922746965.node = NNI922746965;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555178;
var NNI1023410186 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1023410187, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1023410188, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1023410189, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1023410190, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1023410191, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1023410196, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1023410198, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1023410199, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1023410200, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1023410201, name: "flushImpl", sons: null}]};
NTI1023410186.node = NNI1023410186;
NTI1023410186.base = NTI33555173;
NTI1023410185.base = NTI1023410186;
NTI671088654.base = NTI33554449;
var NNI671088653 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "stream", len: 0, typ: NTI1023410185, name: "stream", sons: null}, 
{kind: 1, offset: "testErrors", len: 0, typ: NTI671088654, name: "testErrors", sons: null}, 
{kind: 1, offset: "testStartTime", len: 0, typ: NTI33554445, name: "testStartTime", sons: null}, 
{kind: 1, offset: "testStackTrace", len: 0, typ: NTI33554449, name: "testStackTrace", sons: null}]};
NTI671088653.node = NNI671088653;
NTI671088653.base = NTI671088651;
var NNI671088643 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI671088643, name: "OK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI671088643, name: "FAILED", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI671088643, name: "SKIPPED", len: 0, sons: null}}};
NTI671088643.node = NNI671088643;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var ConstSet3 = setConstr([48, 57]);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet4 = setConstr(0, 125);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([65, 90]);
var ConstSet7 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet8 = setConstr(46, 44);

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}
var F = {procname: "module syslocks", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/syslocks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module syslocks", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/syslocks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module locks", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/locks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module locks", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/locks.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function initLock_704643079(lock_704643080) {
  
}
var F = {procname: "module exitprocs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/exitprocs.nim", line: 0};
framePtr = F;
F.line = 24;
F.filename = "exitprocs.nim";
var gFunsLock_687865870 = [({})];
F.line = 25;
var gFuns_687865871 = [[]];
F.line = 27;
initLock_704643079(gFunsLock_687865870[0]);
framePtr = F.prev;
var F = {procname: "module exitprocs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/exitprocs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_1040189045 === undefined) {
  globalThis.utcInstance_1040189045 = [null];
}
F.line = 1372;
if (globalThis.localInstance_1040189046 === undefined) {
  globalThis.localInstance_1040189046 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1107296433 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unittest", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
framePtr = F;
F.line = 171;
F.filename = "unittest.nim";
if (globalThis.abortOnError_671088682 === undefined) {
  globalThis.abortOnError_671088682 = [false];
}
F.line = 178;
if (globalThis.checkpoints_671088683 === undefined) {
  globalThis.checkpoints_671088683 = [[]];
}
F.line = 179;
if (globalThis.formatters_671088684 === undefined) {
  globalThis.formatters_671088684 = [[]];
}
F.line = 180;
if (globalThis.testsFilters_671088690 === undefined) {
  globalThis.testsFilters_671088690 = [({data: [], counter: 0})];
}
F.line = 181;
if (globalThis.disabledParamFiltering_671088691 === undefined) {
  globalThis.disabledParamFiltering_671088691 = [false];
}
F.line = 193;
abortOnError_671088682[0] = false;
framePtr = F.prev;
var F = {procname: "module unittest", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_1191182750 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_1191182750 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_1191182750;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_1191182750 = addInt(i_1191182750, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__1191182742 = 0;
      colontmp__1191182742 = (i_33556519 - 1);
      var res_1191182744 = colontmp__1191182742;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_1191182744)) break Label7;
            j_33556554 = res_1191182744;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_1191182744 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function makeStringSlice_1191182352(str_1191182354) {
  var result_1191182355 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "makeStringSlice.makeStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 49;
    F.filename = "strslice.nim";
    F.line = 53;
    var strRef_1191182356 = null;
    var strRef_1191182356_Idx = 0;
    F.line = 57;
    strRef_1191182356 = [[]]; strRef_1191182356_Idx = 0;
    F.line = 58;
    strRef_1191182356[strRef_1191182356_Idx] = nimCopy(null, str_1191182354, NTI33554449);
    result_1191182355 = nimCopy(result_1191182355, {Field0: [strRef_1191182356, strRef_1191182356_Idx], Field1: 0, Field2: subInt((((strRef_1191182356[strRef_1191182356_Idx]).length) | 0), 1)}, NTI1191182339);
  framePtr = F.prev;

  return result_1191182355;

}
var F = {procname: "module strslice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
framePtr = F;
F.line = 62;
F.filename = "strslice.nim";
var EmptyStringSlice_1191182395 = makeStringSlice_1191182352([]);
F.line = 216;
var PCREFlag_1191182657 = new RegExp("\\(\\*\\w+\\)", "g");
F.line = 217;
var comment_1191182658 = new RegExp("#[^\\n]*", "g");
F.line = 218;
var whitespace_1191182659 = new RegExp("(?: *\\n *)|(?:^ *)|(?: *$)", "g");
F.line = 219;
var slashU_1191182660 = new RegExp("\\\\U([0-9a-fA-F]+)", "g");
framePtr = F.prev;
var F = {procname: "module strslice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function colorOutput_671088871() {
  var result_671088872 = false;

  var F = {procname: "unittest.colorOutput", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 231;
    F.filename = "unittest.nim";
    var color_671088873 = [97,117,116,111];
    F.line = 232;
    switch (toJSStr(color_671088873)) {
    case "auto":
      F.line = 235;
      result_671088872 = false;
      break;
    case "on":
      F.line = 236;
      result_671088872 = true;
      break;
    case "off":
      F.line = 237;
      result_671088872 = false;
      break;
    default: 
      if (true) {
      F.line = 238;
      failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim(238, 9) `false` ") || []).concat(color_671088873 || []));
      }
      
      break;
    }
  framePtr = F.prev;

  return result_671088872;

}

function nimIdentNormalize_754974842(s_754974843) {
  var result_754974844 = [];

  var F = {procname: "strutils.nimIdentNormalize", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 298;
    F.filename = "strutils.nim";
    result_754974844 = nimCopy(null, mnewString(chckRange((s_754974843).length, 0, 2147483647)), NTI33554449);
    if (((s_754974843).length == 0)) {
    F.line = 300;
    break BeforeRet;
    }
    
    F.line = 301;
    result_754974844[chckIndx(0, 0, (result_754974844).length - 1)] = s_754974843[chckIndx(0, 0, (s_754974843).length - 1)];
    F.line = 302;
    var j_754974845 = 1;
    Label1: {
      F.line = 303;
      var i_754974850 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__671088924 = 0;
      F.line = 303;
      F.filename = "strutils.nim";
      colontmp__671088924 = subInt((s_754974843).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_671088925 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_671088925 <= colontmp__671088924)) break Label3;
            F.line = 303;
            F.filename = "strutils.nim";
            i_754974850 = res_671088925;
            if ((ConstSet2[s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)]] != undefined)) {
            F.line = 305;
            result_754974844[chckIndx(j_754974845, 0, (result_754974844).length - 1)] = chckRange(addInt(s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)], 32), 0, 255);
            F.line = 306;
            j_754974845 = addInt(j_754974845, 1);
            }
            else {
            if (!((s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)] == 95))) {
            F.line = 308;
            result_754974844[chckIndx(j_754974845, 0, (result_754974844).length - 1)] = s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)];
            F.line = 309;
            j_754974845 = addInt(j_754974845, 1);
            }
            }
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_671088925 = addInt(res_671088925, 1);
          }
      };
    };
    if (!((j_754974845 == (s_754974843).length))) {
    F.line = 310;
    F.filename = "strutils.nim";
    if (result_754974844.length < chckRange(j_754974845, 0, 2147483647)) { for (var i = result_754974844.length; i < chckRange(j_754974845, 0, 2147483647); ++i) result_754974844.push(0); }
         else {result_754974844.length = chckRange(j_754974845, 0, 2147483647); };
    }
    
  };
  framePtr = F.prev;

  return result_754974844;

}

function parseEnum_671088882(s_671088884) {
    var Temporary1;

  var result_671088885 = 0;

  var F = {procname: "parseEnum.parseEnum", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1284;
    F.filename = "strutils.nim";
    F.line = 1301;
    switch (toJSStr(nimIdentNormalize_754974842(s_671088884))) {
    case "Printall":
      Temporary1 = 0;
      break;
    case "Printfailures":
      Temporary1 = 1;
      break;
    case "Printnone":
      Temporary1 = 2;
      break;
    default: 
      F.line = 76;
      F.filename = "enumutils.nim";
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_671088884 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_671088885 = Temporary1;
  framePtr = F.prev;

  return result_671088885;

}

function newConsoleOutputFormatter_671088816(outputLevel_671088817, colorOutput_671088818) {
  var result_671088819 = null;

  var F = {procname: "unittest.newConsoleOutputFormatter", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 225;
    F.filename = "unittest.nim";
    result_671088819 = {outputLevel: outputLevel_671088817, colorOutput: colorOutput_671088818, m_type: NTI671088652, isInSuite: false, isInTest: false};
  framePtr = F.prev;

  return result_671088819;

}

function defaultConsoleFormatter_671088879() {
  var result_671088880 = null;

  var F = {procname: "unittest.defaultConsoleFormatter", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 253;
    F.filename = "unittest.nim";
    var colorOutput_671088881 = colorOutput_671088871();
    F.line = 254;
    var outputLevel_671088956 = parseEnum_671088882([80,82,73,78,84,95,65,76,76]);
    F.line = 260;
    result_671088880 = newConsoleOutputFormatter_671088816(outputLevel_671088956, colorOutput_671088881);
  framePtr = F.prev;

  return result_671088880;

}

function ensureInitialized_671089364() {
  var F = {procname: "unittest.ensureInitialized", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    if (((formatters_671088684[0]).length == 0)) {
    F.line = 450;
    F.filename = "unittest.nim";
    formatters_671088684[0] = nimCopy(null, [defaultConsoleFormatter_671088879()], NTI671089169);
    }
    
    if (!(disabledParamFiltering_671088691[0])) {
    }
    
  framePtr = F.prev;

  
}

function len_671089250(s_671089252) {
  var result_671089253 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
  framePtr = F;
    F.line = 182;
    F.filename = "sets.nim";
    result_671089253 = s_671089252.counter;
  framePtr = F.prev;

  return result_671089253;

}

function isFilled_1090519079(hcode_1090519080) {
  var result_1090519081 = false;

  var F = {procname: "sets.isFilled", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1090519081 = !((hcode_1090519080 == 0));
  framePtr = F.prev;

  return result_1090519081;

}

function substrEq_754974975(s_754974976, pos_754974977, substr_754974978) {
    var Temporary1;

  var result_754974979 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strutils.nim";
    F.line = 370;
    var length_754974980 = (substr_754974978).length;
    if ((0 < length_754974980)) {
    F.line = 372;
    var i_754974981 = 0;
    Label2: {
      F.line = 373;
        Label3: while (true) {
        if (!(((i_754974981 < length_754974980) && (addInt(pos_754974977, i_754974981) < (s_754974976).length)) && (s_754974976[chckIndx(addInt(pos_754974977, i_754974981), 0, (s_754974976).length - 1)] == substr_754974978[chckIndx(i_754974981, 0, (substr_754974978).length - 1)]))) break Label3;
          F.line = 374;
          i_754974981 = addInt(i_754974981, 1);
        }
    };
    Temporary1 = (i_754974981 == length_754974980);
    }
    else {
    Temporary1 = false;
    }
    
    result_754974979 = Temporary1;
  framePtr = F.prev;

  return result_754974979;

}

function substr_33558078(s_33558079, first_33558080, last_33558081) {
  var result_33558082 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2658;
    F.filename = "system.nim";
    var first_33558083 = nimMax(first_33558080, 0);
    F.line = 2659;
    var L_33558084 = nimMax(addInt(subInt(nimMin(last_33558081, (s_33558079).length - 1), first_33558083), 1), 0);
    F.line = 2660;
    result_33558082 = nimCopy(null, mnewString(chckRange(L_33558084, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2661;
      var i_33558089 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871122 = 0;
      F.line = 2661;
      F.filename = "system.nim";
      colontmp__536871122 = subInt(L_33558084, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871123 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536871123 <= colontmp__536871122)) break Label3;
            F.line = 2661;
            F.filename = "system.nim";
            i_33558089 = res_536871123;
            F.line = 2661;
            result_33558082[chckIndx(i_33558089, 0, (result_33558082).length - 1)] = s_33558079[chckIndx(addInt(i_33558089, first_33558083), 0, (s_33558079).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871123 = addInt(res_536871123, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558082;

}

function nsuSplitString(s_754975295, sep_754975296, maxsplit_754975297) {
      var Temporary2;

  var result_754975298 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_754975298 = nimCopy(null, [], NTI754975126);
    Label1: {
      F.line = 418;
      var xHEX60gensym69_754975304 = [];
      F.line = 529;
      if (((sep_754975296).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_754975296).length;
      }
      
      var sepLen_536871114 = Temporary2;
      F.line = 389;
      var lastHEX60gensym41_536871115 = 0;
      F.line = 390;
      var splitsHEX60gensym41_536871116 = maxsplit_754975297;
      Label3: {
        F.line = 531;
          Label4: while (true) {
          if (!(lastHEX60gensym41_536871115 <= (s_754975295).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym41_536871118 = lastHEX60gensym41_536871115;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym41_536871115 < (s_754975295).length) && !(substrEq_754974975(s_754975295, lastHEX60gensym41_536871115, sep_754975296)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym41_536871115 = addInt(lastHEX60gensym41_536871115, 1);
                }
            };
            if ((splitsHEX60gensym41_536871116 == 0)) {
            F.line = 396;
            lastHEX60gensym41_536871115 = (s_754975295).length;
            }
            
            F.line = 787;
            xHEX60gensym69_754975304 = substr_33558078(s_754975295, firstHEX60gensym41_536871118, subInt(lastHEX60gensym41_536871115, 1));
            F.line = 787;
            var Temporary7 = nimCopy(null, xHEX60gensym69_754975304, NTI33554449);
            result_754975298.push(Temporary7);;
            if ((splitsHEX60gensym41_536871116 == 0)) {
            F.line = 398;
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym41_536871116 = subInt(splitsHEX60gensym41_536871116, 1);
            F.line = 400;
            lastHEX60gensym41_536871115 = addInt(lastHEX60gensym41_536871115, sepLen_536871114);
          }
      };
    };
  framePtr = F.prev;

  return result_754975298;

}

function find_671089202(a_671089205, item_671089206) {
  var result_671089207 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_671089207 = 0;
    Label1: {
      F.line = 1666;
      var i_671089211 = 0;
      F.line = 23;
      F.filename = "iterators.nim";
      var i_536871127 = 0;
      Label2: {
        F.line = 24;
          Label3: while (true) {
          if (!(i_536871127 < (a_671089205).length)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_671089211 = a_671089205[chckIndx(i_536871127, 0, (a_671089205).length - 1)];
            if ((i_671089211 == item_671089206)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_671089207 = addInt(result_671089207, 1);
            F.line = 26;
            F.filename = "iterators.nim";
            i_536871127 = addInt(i_536871127, 1);
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_671089207 = (-1);
  };
  framePtr = F.prev;

  return result_671089207;

}

function contains_671089197(a_671089199, item_671089200) {
  var result_671089201 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1683;
    F.filename = "system.nim";
    result_671089201 = (0 <= find_671089202(a_671089199, item_671089200));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089201;

}

function nsuSplitChar(s_754975265, sep_754975266, maxsplit_754975267) {
  var result_754975268 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_754975268 = nimCopy(null, [], NTI754975093);
    Label1: {
      F.line = 418;
      var xHEX60gensym67_754975274 = [];
      F.line = 389;
      var lastHEX60gensym34_536871132 = 0;
      F.line = 390;
      var splitsHEX60gensym34_536871133 = maxsplit_754975267;
      Label2: {
        F.line = 450;
          Label3: while (true) {
          if (!(lastHEX60gensym34_536871132 <= (s_754975265).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym34_536871135 = lastHEX60gensym34_536871132;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym34_536871132 < (s_754975265).length) && !((s_754975265[chckIndx(lastHEX60gensym34_536871132, 0, (s_754975265).length - 1)] == sep_754975266)))) break Label5;
                  F.line = 395;
                  lastHEX60gensym34_536871132 = addInt(lastHEX60gensym34_536871132, 1);
                }
            };
            if ((splitsHEX60gensym34_536871133 == 0)) {
            F.line = 396;
            lastHEX60gensym34_536871132 = (s_754975265).length;
            }
            
            F.line = 743;
            xHEX60gensym67_754975274 = substr_33558078(s_754975265, firstHEX60gensym34_536871135, subInt(lastHEX60gensym34_536871132, 1));
            F.line = 743;
            var Temporary6 = nimCopy(null, xHEX60gensym67_754975274, NTI33554449);
            result_754975268.push(Temporary6);;
            if ((splitsHEX60gensym34_536871133 == 0)) {
            F.line = 398;
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym34_536871133 = subInt(splitsHEX60gensym34_536871133, 1);
            F.line = 400;
            lastHEX60gensym34_536871132 = addInt(lastHEX60gensym34_536871132, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754975268;

}

function nsuStartsWith(s_754976174, prefix_754976175) {
  var result_754976176 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "strimpl.nim";
    var prefixLenHEX60gensym146_754976181 = (prefix_754976175).length;
    F.line = 57;
    var sLenHEX60gensym146_754976182 = (s_754976174).length;
    F.line = 58;
    var iHEX60gensym146_754976183 = 0;
    Label1: {
      F.line = 1624;
      F.filename = "strutils.nim";
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_754976181 <= iHEX60gensym146_754976183)) {
          F.line = 60;
          F.filename = "strimpl.nim";
          result_754976176 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_754976182 <= iHEX60gensym146_754976183) || !((s_754976174[chckIndx(iHEX60gensym146_754976183, 0, (s_754976174).length - 1)] == prefix_754976175[chckIndx(iHEX60gensym146_754976183, 0, (prefix_754976175).length - 1)])))) {
          F.line = 61;
          result_754976176 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym146_754976183 = addInt(iHEX60gensym146_754976183, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_754976176;

}

function nsuEndsWith(s_754976194, suffix_754976195) {
  var result_754976196 = false;

  var F = {procname: "strutils.endsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 65;
    F.filename = "strimpl.nim";
    var suffixLenHEX60gensym153_754976202 = (suffix_754976195).length;
    F.line = 66;
    var sLenHEX60gensym153_754976203 = (s_754976194).length;
    F.line = 67;
    var iHEX60gensym153_754976204 = 0;
    F.line = 68;
    var jHEX60gensym153_754976205 = subInt(sLenHEX60gensym153_754976203, suffixLenHEX60gensym153_754976202);
    Label1: {
      F.line = 69;
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205)) && (addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205) < sLenHEX60gensym153_754976203))) break Label2;
          if (!((s_754976194[chckIndx(addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205), 0, (s_754976194).length - 1)] == suffix_754976195[chckIndx(iHEX60gensym153_754976204, 0, (suffix_754976195).length - 1)]))) {
          F.line = 70;
          result_754976196 = false;
          break BeforeRet;
          }
          
          F.line = 71;
          iHEX60gensym153_754976204 = addInt(iHEX60gensym153_754976204, 1);
        }
    };
    if ((suffixLenHEX60gensym153_754976202 <= iHEX60gensym153_754976204)) {
    F.line = 72;
    result_754976196 = true;
    break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_754976196;

}

function glob_671089193(matcher_671089194, filter_671089195) {
  var result_671089196 = false;

  var F = {procname: "unittest.glob", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((filter_671089195).length == 0)) {
    F.line = 404;
    F.filename = "unittest.nim";
    result_671089196 = true;
    break BeforeRet;
    }
    
    if (!(contains_671089197(filter_671089195, 42))) {
    F.line = 407;
    result_671089196 = eqStrings(matcher_671089194, filter_671089195);
    break BeforeRet;
    }
    
    F.line = 409;
    var beforeAndAfter_671089217 = nsuSplitChar(filter_671089195, 42, 1);
    if (((beforeAndAfter_671089217).length == 1)) {
    F.line = 412;
    result_671089196 = nsuStartsWith(matcher_671089194, beforeAndAfter_671089217[chckIndx(0, 0, (beforeAndAfter_671089217).length - 1)]);
    break BeforeRet;
    }
    
    if (((matcher_671089194).length < subInt((filter_671089195).length, 1))) {
    F.line = 415;
    result_671089196 = false;
    break BeforeRet;
    }
    
    F.line = 417;
    result_671089196 = (nsuStartsWith(matcher_671089194, beforeAndAfter_671089217[chckIndx(0, 0, (beforeAndAfter_671089217).length - 1)]) && nsuEndsWith(matcher_671089194, beforeAndAfter_671089217[chckIndx(1, 0, (beforeAndAfter_671089217).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089196;

}

function matchFilter_671089221(suiteName_671089222, testName_671089223, filter_671089224) {
  var result_671089225 = false;

  var F = {procname: "unittest.matchFilter", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (eqStrings(filter_671089224, [])) {
    F.line = 422;
    F.filename = "unittest.nim";
    result_671089225 = true;
    break BeforeRet;
    }
    
    if (eqStrings(testName_671089223, filter_671089224)) {
    F.line = 425;
    result_671089225 = true;
    break BeforeRet;
    }
    
    F.line = 426;
    var suiteAndTestFilters_671089226 = nsuSplitString(filter_671089224, [58,58], 1);
    if (((suiteAndTestFilters_671089226).length == 1)) {
    F.line = 430;
    var testFilter_671089230 = nimCopy(null, suiteAndTestFilters_671089226[chckIndx(0, 0, (suiteAndTestFilters_671089226).length - 1)], NTI33554449);
    F.line = 431;
    result_671089225 = glob_671089193(testName_671089223, testFilter_671089230);
    break BeforeRet;
    }
    
    F.line = 433;
    result_671089225 = (glob_671089193(suiteName_671089222, suiteAndTestFilters_671089226[chckIndx(0, 0, (suiteAndTestFilters_671089226).length - 1)]) && glob_671089193(testName_671089223, suiteAndTestFilters_671089226[chckIndx(1, 0, (suiteAndTestFilters_671089226).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089225;

}

function shouldRun_671089231(currentSuiteName_671089232, testName_671089233) {
  var result_671089234 = false;

  var F = {procname: "unittest.shouldRun", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((len_671089250(testsFilters_671088690[0]) == 0)) {
    F.line = 440;
    F.filename = "unittest.nim";
    result_671089234 = true;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 442;
      var f_671089346 = [];
      F.line = 265;
      F.filename = "sets.nim";
      var length_536871105 = len_671089250(testsFilters_671088690[0]);
      Label2: {
        F.line = 266;
        var h_536871107 = 0;
        F.line = 75;
        F.filename = "iterators_1.nim";
        var colontmp__536871108 = 0;
        F.line = 266;
        F.filename = "sets.nim";
        colontmp__536871108 = (testsFilters_671088690[0].data).length - 1;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_536871109 = 0;
        Label3: {
          F.line = 91;
            Label4: while (true) {
            if (!(res_536871109 <= colontmp__536871108)) break Label4;
              F.line = 266;
              F.filename = "sets.nim";
              h_536871107 = res_536871109;
              if (isFilled_1090519079(testsFilters_671088690[0].data[chckIndx(h_536871107, 0, (testsFilters_671088690[0].data).length - 1)].Field0)) {
              F.line = 442;
              F.filename = "unittest.nim";
              f_671089346 = testsFilters_671088690[0].data[chckIndx(h_536871107, 0, (testsFilters_671088690[0].data).length - 1)].Field1;
              if (matchFilter_671089221(currentSuiteName_671089232, testName_671089233, f_671089346)) {
              F.line = 444;
              result_671089234 = true;
              break BeforeRet;
              }
              
              if (!((len_671089250(testsFilters_671088690[0]) == length_536871105))) {
              F.line = 269;
              F.filename = "sets.nim";
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim(269, 13) `len(s) == length` the length of the HashSet changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_536871109 = addInt(res_536871109, 1);
            }
        };
      };
    };
    F.line = 446;
    F.filename = "unittest.nim";
    result_671089234 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089234;

}

function toStringSlice_536870925(str_536870927) {
  var result_536870928 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "toStringSlice.toStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 66;
    F.filename = "strslice.nim";
    result_536870928 = nimCopy(result_536870928, makeStringSlice_1191182352(str_536870927), NTI1191182339);
  framePtr = F.prev;

  return result_536870928;

}

function toStringSlice_1241514749(str_1241514751) {
  var result_1241514752 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "toStringSlice.toStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 66;
    F.filename = "strslice.nim";
    result_1241514752 = nimCopy(result_1241514752, str_1241514751, NTI1191182339);
  framePtr = F.prev;

  return result_1241514752;

}

function init_536870946(node_536870949, name_536870950, data_536870951, attributes_536870952) {
  var result_536870953 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 30;
    F.filename = "nodetree.nim";
    node_536870949.nameRef[0] = [[]]; node_536870949.nameRef[1] = 0;
    F.line = 31;
    node_536870949.nameRef[0][node_536870949.nameRef[1]] = nimCopy(null, name_536870950, NTI33554449);
    F.line = 43;
    node_536870949.textSlice = nimCopy(node_536870949.textSlice, toStringSlice_1241514749(data_536870951), NTI1191182339);
    F.line = 44;
    node_536870949.attributesRef = attributes_536870952;
    F.line = 45;
    node_536870949.sourcePos = (-1);
    F.line = 46;
    result_536870953 = node_536870949;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536870953;

}

function new_1241514691() {
  var result_1241514694 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1241514696 = null;
    F.line = 839;
    r_1241514696 = ({m_type: NTI1241513990, nameRef: [null, 0], childrenSeq: [], textSlice: {Field0: [null, 0], Field1: 0, Field2: 0}, attributesRef: null, sourcePos: 0});
    F.line = 840;
    result_1241514694 = r_1241514696;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1241514694;

}

function cut_1191182492(str_1191182493, start_1191182494, stop_1191182495) {
    var Temporary1;

  var result_1191182496 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "strslice.nim";
    if ((((stop_1191182495 < start_1191182494) || (stop_1191182495 < 0)) || (str_1191182493.Field2 < start_1191182494))) {
    Temporary1 = {Field0: [EmptyStringSlice_1191182395.Field0[0], EmptyStringSlice_1191182395.Field0[1]], Field1: 0, Field2: (-1)};
    }
    else {
    Temporary1 = {Field0: [str_1191182493.Field0[0], str_1191182493.Field0[1]], Field1: nimMax(start_1191182494, 0), Field2: nimMin(stop_1191182495, str_1191182493.Field2)};
    }
    
    result_1191182496 = nimCopy(result_1191182496, Temporary1, NTI1191182339);
  framePtr = F.prev;

  return result_1191182496;

}

function index_1191182488(str_1191182489, i_1191182490) {
  var result_1191182491 = 0;

  var F = {procname: "strslice.index", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "strslice.nim";
    result_1191182491 = addInt(str_1191182489.Field1, i_1191182490);
  framePtr = F.prev;

  return result_1191182491;

}

function cut_1191182519(str_1191182520, slc_1191182523) {
  var result_1191182524 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 109;
    F.filename = "strslice.nim";
    result_1191182524 = nimCopy(result_1191182524, cut_1191182492(str_1191182520, index_1191182488(str_1191182520, ((slc_1191182523.a) | 0)), index_1191182488(str_1191182520, ((slc_1191182523.b) | 0))), NTI1191182339);
  framePtr = F.prev;

  return result_1191182524;

}

function HEX2EHEX2E_973078576(a_973078579, b_973078580) {
  var result_973078581 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_973078581 = nimCopy(result_973078581, {a: a_973078579, b: b_973078580}, NTI805306437);
  framePtr = F.prev;

  return result_973078581;

}

function HEX5BHEX5D_1191182454(s_1191182457, x_1191182458) {
  var result_1191182459 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_1191182461 = ((x_1191182458.a) | 0);
    F.line = 84;
    var L_1191182463 = addInt(subInt(((x_1191182458.b) | 0), a_1191182461), 1);
    F.line = 85;
    result_1191182459 = nimCopy(null, mnewString(chckRange(L_1191182463, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_1191182468 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536871145 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536871145 < L_1191182463)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_1191182468 = i_536871145;
            F.line = 86;
            result_1191182459[chckIndx(i_1191182468, 0, (result_1191182459).length - 1)] = s_1191182457[chckIndx(addInt(i_1191182468, a_1191182461), 0, (s_1191182457).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536871145 = addInt(i_536871145, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1191182459;

}

function HEX2EHEX2E_1191182403(a_1191182406, b_1191182407) {
  var result_1191182410 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1191182410 = nimCopy(result_1191182410, {a: a_1191182406, b: b_1191182407}, NTI1191182399);
  framePtr = F.prev;

  return result_1191182410;

}

function HEX24_1191182400(str_1191182401) {
  var result_1191182402 = [];

  var F = {procname: "strslice.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((str_1191182401.Field2 < 0)) {
    F.line = 72;
    F.filename = "strslice.nim";
    result_1191182402 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
    F.line = 73;
    result_1191182402 = nimCopy(null, HEX5BHEX5D_1191182454(str_1191182401.Field0[0][str_1191182401.Field0[1]], HEX2EHEX2E_1191182403(str_1191182401.Field1, str_1191182401.Field2)), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1191182402;

}

function content_1241514046(node_1241514047) {
  var result_1241514048 = [];

  var F = {procname: "nodetree.content", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((node_1241514047.childrenSeq).length == 0)) {
    F.line = 77;
    F.filename = "nodetree.nim";
    result_1241514048 = nimCopy(null, HEX24_1191182400(node_1241514047.textSlice), NTI33554449);
    break BeforeRet;
    }
    else {
      F.line = 79;
      result_1241514048 = nimCopy(null, [], NTI33554449);
      Label1: {
        F.line = 80;
        var child_1241514074 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_536871141 = 0;
        F.line = 242;
        var L_536871142 = (node_1241514047.childrenSeq).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_536871141 < L_536871142)) break Label3;
              F.line = 80;
              F.filename = "nodetree.nim";
              child_1241514074 = node_1241514047.childrenSeq[chckIndx(i_536871141, 0, (node_1241514047.childrenSeq).length - 1)];
              F.line = 80;
              result_1241514048.push.apply(result_1241514048, content_1241514046(child_1241514074));;
              F.line = 245;
              F.filename = "iterators.nim";
              i_536871141 = addInt(i_536871141, 1);
              if (!(((node_1241514047.childrenSeq).length == L_536871142))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };
  framePtr = F.prev;

  return result_1241514048;

}

function checkpoint_671089446(msg_671089447) {
  var F = {procname: "unittest.checkpoint", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 595;
    F.filename = "unittest.nim";
    var Temporary1 = nimCopy(null, msg_671089447, NTI33554449);
    checkpoints_671088683[0].push(Temporary1);;
  framePtr = F.prev;

  
}

function forwardIndex_1191182484(str_1191182485, i_1191182486) {
  var result_1191182487 = 0;

  var F = {procname: "strslice.forwardIndex", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 89;
    F.filename = "strslice.nim";
    result_1191182487 = addInt(subInt(str_1191182485.Field2, ((i_1191182486) | 0)), 1);
  framePtr = F.prev;

  return result_1191182487;

}

function cut_1191182533(str_1191182534, slc_1191182537) {
  var result_1191182538 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "strslice.nim";
    result_1191182538 = nimCopy(result_1191182538, cut_1191182492(str_1191182534, index_1191182488(str_1191182534, ((slc_1191182537.a) | 0)), forwardIndex_1191182484(str_1191182534, slc_1191182537.b)), NTI1191182339);
  framePtr = F.prev;

  return result_1191182538;

}

function HEX2EHEX2E_922746984(a_922746987, b_922746988) {
  var result_922746991 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_922746991 = nimCopy(result_922746991, {a: a_922746987, b: b_922746988}, NTI922746965);
  framePtr = F.prev;

  return result_922746991;

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556446 = null;

    if (isNimException_33556443()) {
    result_33556446 = lastJSError;
    }
    

  return result_33556446;

}

function exceptionTypeName_671089436(e_671089437) {
    var Temporary1;

  var result_671089438 = [];

  var F = {procname: "unittest.exceptionTypeName", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 519;
    F.filename = "unittest.nim";
    if ((e_671089437 == null)) {
    Temporary1 = [60,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,62];
    }
    else {
    Temporary1 = cstrToNimstr(e_671089437.name);
    }
    
    result_671089438 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_671089438;

}

function getCurrentExceptionMsg_33556463() {
  var result_33556464 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556443()) {
    result_33556464 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556469 = null;
            if (lastJSError.message !== undefined) {
        msg_33556469 = lastJSError.message;
      }
      
      if (!((msg_33556469 == null))) {
      result_33556464 = nimCopy(null, cstrToNimstr(msg_33556469), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556464 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556464;

}

function getStackTrace_33556645(e_33556646) {
  var result_33556647 = [];

    result_33556647 = nimCopy(null, e_33556646.trace, NTI33554449);

  return result_33556647;

}

function setProgramResult_687865987(a_687865988) {
  var F = {procname: "exitprocs.setProgramResult", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/exitprocs.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "exitprocs.nim";
    process.exitCode = a_687865988;

  framePtr = F.prev;

  
}

function testEnded_671089427(testResult_671089428) {
  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 465;
      F.filename = "unittest.nim";
      var formatter_671089432 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536871148 = 0;
      F.line = 242;
      var L_536871149 = (formatters_671088684[0]).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536871148 < L_536871149)) break Label3;
            F.line = 465;
            F.filename = "unittest.nim";
            formatter_671089432 = formatters_671088684[0][chckIndx(i_536871148, 0, (formatters_671088684[0]).length - 1)];
            F.line = 465;
            testEnded_671088716(formatter_671089432, testResult_671089428);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536871148 = addInt(i_536871148, 1);
            if (!(((formatters_671088684[0]).length == L_536871149))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}
var F = {procname: "module test_nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/tests/test_nodetree.nim", line: 0};
framePtr = F;
F.line = 544;
F.filename = "unittest.nim";
ensureInitialized_671089364();
if (shouldRun_671089231([], [78,111,100,101,46,99,111,110,116,101,110,116])) {
F.line = 547;
checkpoints_671088683[0] = nimCopy(null, [], NTI922746906);
F.line = 548;
var testStatusIMPL_536870920 = [0];
Label2: {
  F.line = 550;
  var formatter_536870924 = [null];
  F.line = 241;
  F.filename = "iterators.nim";
  var i_536871079 = 0;
  F.line = 242;
  var L_536871080 = (formatters_671088684[0]).length;
  Label3: {
    F.line = 243;
      Label4: while (true) {
      if (!(i_536871079 < L_536871080)) break Label4;
        F.line = 550;
        F.filename = "unittest.nim";
        formatter_536870924[0] = formatters_671088684[0][chckIndx(i_536871079, 0, (formatters_671088684[0]).length - 1)];
        F.line = 550;
        testStarted_671088707(formatter_536870924[0], [78,111,100,101,46,99,111,110,116,101,110,116]);
        F.line = 245;
        F.filename = "iterators.nim";
        i_536871079 = addInt(i_536871079, 1);
        if (!(((formatters_671088684[0]).length == L_536871080))) {
        F.line = 246;
        failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
        }
        
      }
  };
};
F.line = 554;
F.filename = "unittest.nim";
++excHandler;
try {
F.line = 9;
F.filename = "test_nodetree.nim";
var slice_536870933 = toStringSlice_536870925([65,66,67]);
F.line = 10;
var slice2_536870937 = [toStringSlice_1241514749(slice_536870933)];
F.line = 11;
var node_536870963 = [init_536870946(new_1241514691(), [84,69,83,84], cut_1191182519(slice2_536870937[0], HEX2EHEX2E_973078576(1, 0)), null)];
Label6: {
  F.line = 664;
  F.filename = "unittest.nim";
  var HEX3Ac1_536870974 = [content_1241514046(node_536870963[0])];
  if (eqStrings(HEX3Ac1_536870974[0], [])) {
  }
  else {
    F.line = 721;
    checkpoint_671089446(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/tests/test_nodetree.nim(12, 21): Check failed: node.content == \"\""));
    F.line = 669;
    checkpoint_671089446(([110,111,100,101,46,99,111,110,116,101,110,116,32,119,97,115,32] || []).concat(HEX3Ac1_536870974[0] || []));
    F.line = 613;
    testStatusIMPL_536870920[0] = 1;
    F.line = 617;
    ensureInitialized_671089364();
    Label7: {
      F.line = 620;
      var formatterHEX60gensym5_536870979 = [null];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536871084 = 0;
      F.line = 242;
      var L_536871085 = (formatters_671088684[0]).length;
      Label8: {
        F.line = 243;
          Label9: while (true) {
          if (!(i_536871084 < L_536871085)) break Label9;
            F.line = 620;
            F.filename = "unittest.nim";
            formatterHEX60gensym5_536870979[0] = formatters_671088684[0][chckIndx(i_536871084, 0, (formatters_671088684[0]).length - 1)];
            F.line = 620;
            failureOccurred_671088712(formatterHEX60gensym5_536870979[0], checkpoints_671088683[0], []);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536871084 = addInt(i_536871084, 1);
            if (!(((formatters_671088684[0]).length == L_536871085))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (abortOnError_671088682[0]) {
    F.line = 626;
    F.filename = "unittest.nim";
    process.exit(1);
    }
    
    F.line = 628;
    checkpoints_671088683[0] = nimCopy(null, [], NTI671088655);
  }
  
};
F.line = 13;
F.filename = "test_nodetree.nim";
node_536870963[0] = init_536870946(new_1241514691(), [84,69,88,84], cut_1191182533(slice2_536870937[0], HEX2EHEX2E_922746984(1, 1)), null);
Label10: {
  F.line = 664;
  F.filename = "unittest.nim";
  var HEX3Ac1_536870999 = [content_1241514046(node_536870963[0])];
  if (eqStrings(HEX3Ac1_536870999[0], [66,67])) {
  }
  else {
    F.line = 721;
    checkpoint_671089446(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/tests/test_nodetree.nim(14, 21): Check failed: node.content == \"BC\""));
    F.line = 669;
    checkpoint_671089446(([110,111,100,101,46,99,111,110,116,101,110,116,32,119,97,115,32] || []).concat(HEX3Ac1_536870999[0] || []));
    F.line = 613;
    testStatusIMPL_536870920[0] = 1;
    F.line = 617;
    ensureInitialized_671089364();
    Label11: {
      F.line = 620;
      var formatterHEX60gensym12_536871004 = [null];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536871089 = 0;
      F.line = 242;
      var L_536871090 = (formatters_671088684[0]).length;
      Label12: {
        F.line = 243;
          Label13: while (true) {
          if (!(i_536871089 < L_536871090)) break Label13;
            F.line = 620;
            F.filename = "unittest.nim";
            formatterHEX60gensym12_536871004[0] = formatters_671088684[0][chckIndx(i_536871089, 0, (formatters_671088684[0]).length - 1)];
            F.line = 620;
            failureOccurred_671088712(formatterHEX60gensym12_536871004[0], checkpoints_671088683[0], []);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536871089 = addInt(i_536871089, 1);
            if (!(((formatters_671088684[0]).length == L_536871090))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (abortOnError_671088682[0]) {
    F.line = 626;
    F.filename = "unittest.nim";
    process.exit(1);
    }
    
    F.line = 628;
    checkpoints_671088683[0] = nimCopy(null, [], NTI671088655);
  }
  
};
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
framePtr = F;
F.line = 563;
var e_536871009 = getCurrentException();
F.line = 564;
var eTypeDesc_536871010 = ([91] || []).concat(exceptionTypeName_671089436(e_536871009) || [],[93] || []);
F.line = 565;
checkpoint_671089446(([85,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32] || []).concat(getCurrentExceptionMsg_33556463() || [],[32] || [],eTypeDesc_536871010 || []));
if ((e_536871009 == null)) {
F.line = 613;
testStatusIMPL_536870920[0] = 1;
F.line = 617;
ensureInitialized_671089364();
Label14: {
  F.line = 620;
  var formatterHEX60gensym13_536871019 = [null];
  F.line = 241;
  F.filename = "iterators.nim";
  var i_536871093 = 0;
  F.line = 242;
  var L_536871094 = (formatters_671088684[0]).length;
  Label15: {
    F.line = 243;
      Label16: while (true) {
      if (!(i_536871093 < L_536871094)) break Label16;
        F.line = 620;
        F.filename = "unittest.nim";
        formatterHEX60gensym13_536871019[0] = formatters_671088684[0][chckIndx(i_536871093, 0, (formatters_671088684[0]).length - 1)];
        F.line = 620;
        failureOccurred_671088712(formatterHEX60gensym13_536871019[0], checkpoints_671088683[0], []);
        F.line = 245;
        F.filename = "iterators.nim";
        i_536871093 = addInt(i_536871093, 1);
        if (!(((formatters_671088684[0]).length == L_536871094))) {
        F.line = 246;
        failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
        }
        
      }
  };
};
if (abortOnError_671088682[0]) {
F.line = 626;
F.filename = "unittest.nim";
process.exit(1);
}

F.line = 628;
checkpoints_671088683[0] = nimCopy(null, [], NTI671088655);
}
else {
  F.line = 569;
  var stackTrace_536871024 = [getStackTrace_33556645(e_536871009)];
  F.line = 613;
  testStatusIMPL_536870920[0] = 1;
  F.line = 617;
  ensureInitialized_671089364();
  Label17: {
    F.line = 620;
    var formatterHEX60gensym14_536871029 = [null];
    F.line = 241;
    F.filename = "iterators.nim";
    var i_536871097 = 0;
    F.line = 242;
    var L_536871098 = (formatters_671088684[0]).length;
    Label18: {
      F.line = 243;
        Label19: while (true) {
        if (!(i_536871097 < L_536871098)) break Label19;
          F.line = 620;
          F.filename = "unittest.nim";
          formatterHEX60gensym14_536871029[0] = formatters_671088684[0][chckIndx(i_536871097, 0, (formatters_671088684[0]).length - 1)];
          F.line = 620;
          failureOccurred_671088712(formatterHEX60gensym14_536871029[0], checkpoints_671088683[0], stackTrace_536871024[0]);
          F.line = 245;
          F.filename = "iterators.nim";
          i_536871097 = addInt(i_536871097, 1);
          if (!(((formatters_671088684[0]).length == L_536871098))) {
          F.line = 246;
          failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    };
  };
  if (abortOnError_671088682[0]) {
  F.line = 626;
  F.filename = "unittest.nim";
  process.exit(1);
  }
  
  F.line = 628;
  checkpoints_671088683[0] = nimCopy(null, [], NTI671088655);
}

lastJSError = prevJSError;
} finally {
framePtr = F;
if ((testStatusIMPL_536870920[0] == 1)) {
F.line = 574;
setProgramResult_687865987(1);
}

F.line = 575;
var testResult_536871038 = {suiteName: [], testName: [78,111,100,101,46,99,111,110,116,101,110,116], status: testStatusIMPL_536870920[0]};
F.line = 580;
testEnded_671089427(testResult_536871038);
F.line = 581;
checkpoints_671088683[0] = nimCopy(null, [], NTI922746906);
}
}

framePtr = F.prev;
var F = {procname: "module test_nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/tests/test_nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal_33557113(message_33557116) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_33557116, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");
  framePtr = F.prev;

  
}

function chckNilDisp(p_33557112, p_33557112_Idx) {
    if ((p_33557112 == null && p_33557112_Idx == 0)) {
    sysFatal_33557113([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function writeData_1023410406(s_1023410407, buffer_1023410408, buffer_1023410408_Idx, bufLen_1023410409) {
  var F = {procname: "streams.writeData", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/streams.nim", line: 0};
  framePtr = F;
    F.line = 343;
    F.filename = "streams.nim";
    s_1023410407.writeDataImpl(s_1023410407, buffer_1023410408, buffer_1023410408_Idx, bufLen_1023410409);
  framePtr = F.prev;

  
}

function write_1023410415(s_1023410416, x_1023410417) {
  var F = {procname: "streams.write", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/streams.nim", line: 0};
  framePtr = F;
    if ((0 < (x_1023410417).length)) {
    F.line = 378;
    F.filename = "streams.nim";
    var x_1023410418 = [nimCopy(null, x_1023410417, NTI33554449)];
    F.line = 379;
    writeData_1023410406(s_1023410416, x_1023410418, 0, (x_1023410418[0]).length);
    }
    
  framePtr = F.prev;

  
}

function writeLine_1023410442(s_1023410443, args_1023410444) {
  var F = {procname: "streams.writeLine", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/streams.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 406;
      F.filename = "streams.nim";
      var str_1023410448 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_536871153 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_536871153 < (args_1023410444).length)) break Label3;
            F.line = 406;
            F.filename = "streams.nim";
            str_1023410448 = args_1023410444[chckIndx(i_536871153, 0, (args_1023410444).length - 1)];
            F.line = 406;
            write_1023410415(s_1023410443, str_1023410448);
            F.line = 16;
            F.filename = "iterators.nim";
            i_536871153 = addInt(i_536871153, 1);
          }
      };
    };
    F.line = 407;
    F.filename = "streams.nim";
    write_1023410415(s_1023410443, [10]);
  framePtr = F.prev;

  
}

function invalidFormatString_754977083(formatstr_754977084) {
  var F = {procname: "strutils.invalidFormatString", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2757;
    F.filename = "strutils.nim";
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_754977084 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function toLowerAscii_1006632961(c_1006632962) {
  var result_1006632963 = 0;

  var F = {procname: "strimpl.toLowerAscii", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
  framePtr = F;
    if ((ConstSet6[c_1006632962] != undefined)) {
    F.line = 3;
    F.filename = "strimpl.nim";
    result_1006632963 = chckRange(addInt(c_1006632962, 32), 0, 255);
    }
    else {
      F.line = 5;
      result_1006632963 = c_1006632962;
    }
    
  framePtr = F.prev;

  return result_1006632963;

}

function nsuCmpIgnoreStyle(a_754974932, b_754974933) {
          var Temporary7;
          var Temporary8;

  var result_754974934 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_754974943 = (a_754974932).length;
    var bLenHEX60gensym24_754974944 = (b_754974933).length;
    var iHEX60gensym24_754974945 = 0;
    var jHEX60gensym24_754974946 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_754974945 < aLenHEX60gensym24_754974943) && (a_754974932[iHEX60gensym24_754974945] == 95))) break Label4;
                iHEX60gensym24_754974945 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_754974946 < bLenHEX60gensym24_754974944) && (b_754974933[jHEX60gensym24_754974946] == 95))) break Label6;
                jHEX60gensym24_754974946 += 1;
              }
          };
          if ((iHEX60gensym24_754974945 < aLenHEX60gensym24_754974943)) {
          Temporary7 = toLowerAscii_1006632961(a_754974932[iHEX60gensym24_754974945]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_754974957 = Temporary7;
          if ((jHEX60gensym24_754974946 < bLenHEX60gensym24_754974944)) {
          Temporary8 = toLowerAscii_1006632961(b_754974933[jHEX60gensym24_754974946]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_754974958 = Temporary8;
          result_754974934 = (aaHEX60gensym24_754974957 - bbHEX60gensym24_754974958);
          if (!((result_754974934 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_754974943 <= iHEX60gensym24_754974945)) {
          if ((bLenHEX60gensym24_754974944 <= jHEX60gensym24_754974946)) {
          result_754974934 = 0;
          break BeforeRet;
          }
          
          result_754974934 = (-1);
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_754974944 <= jHEX60gensym24_754974946)) {
          result_754974934 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_754974945 += 1;
          jHEX60gensym24_754974946 += 1;
        }
    };
  };

  return result_754974934;

}

function findNormalized_754977070(x_754977071, inArray_754977072) {
  var result_754977073 = 0;

  var F = {procname: "strutils.findNormalized", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 2749;
    F.filename = "strutils.nim";
    var i_754977074 = 0;
    Label1: {
      F.line = 2750;
        Label2: while (true) {
        if (!(i_754977074 < (inArray_754977072).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_754977071, inArray_754977072[chckIndx(i_754977074, 0, (inArray_754977072).length - 1)]) == 0)) {
          F.line = 2751;
          result_754977073 = i_754977074;
          break BeforeRet;
          }
          
          F.line = 2752;
          i_754977074 = addInt(i_754977074, 2);
        }
    };
    F.line = 2754;
    result_754977073 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_754977073;

}

function nsuAddf(s_754977087, s_754977087_Idx, formatstr_754977088, a_754977089) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

  var F = {procname: "strutils.addf", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2763;
    F.filename = "strutils.nim";
    var i_754977091 = 0;
    F.line = 2764;
    var num_754977092 = 0;
    Label1: {
      F.line = 2765;
        Label2: while (true) {
        if (!(i_754977091 < (formatstr_754977088).length)) break Label2;
          if (((formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)] == 36) && (addInt(i_754977091, 1) < (formatstr_754977088).length))) {
          F.line = 2767;
          switch (formatstr_754977088[chckIndx(addInt(i_754977091, 1), 0, (formatstr_754977088).length - 1)]) {
          case 35:
            if (((a_754977089).length - 1 < num_754977092)) {
            F.line = 2769;
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            F.line = 2770;
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(num_754977092, 0, (a_754977089).length - 1)]);;
            F.line = 2771;
            i_754977091 = addInt(i_754977091, 2);
            F.line = 2772;
            num_754977092 = addInt(num_754977092, 1);
            break;
          case 36:
            F.line = 2774;
            addChar(s_754977087[s_754977087_Idx], 36);;
            F.line = 2775;
            i_754977091 = addInt(i_754977091, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            F.line = 2777;
            var j_754977111 = 0;
            F.line = 2778;
            i_754977091 = addInt(i_754977091, 1);
            F.line = 2779;
            var negative_754977117 = (formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)] == 45);
            if (negative_754977117) {
            F.line = 2780;
            i_754977091 = addInt(i_754977091, 1);
            }
            
            Label3: {
              F.line = 2781;
                Label4: while (true) {
                  if (!(i_754977091 < (formatstr_754977088).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet3[formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  F.line = 2782;
                  j_754977111 = subInt(addInt(mulInt(j_754977111, 10), formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)]), 48);
                  F.line = 2783;
                  i_754977091 = addInt(i_754977091, 1);
                }
            };
            F.line = 2784;
            if (!(negative_754977117)) {
            Temporary6 = subInt(j_754977111, 1);
            }
            else {
            Temporary6 = subInt((a_754977089).length, j_754977111);
            }
            
            var idx_754977142 = Temporary6;
            if (((idx_754977142 < 0) || ((a_754977089).length - 1 < idx_754977142))) {
            F.line = 2785;
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            F.line = 2786;
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(idx_754977142, 0, (a_754977089).length - 1)]);;
            break;
          case 123:
            F.line = 2788;
            var j_754977146 = addInt(i_754977091, 2);
            F.line = 2789;
            var k_754977147 = 0;
            F.line = 2790;
            var negative_754977148 = (formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)] == 45);
            if (negative_754977148) {
            F.line = 2791;
            j_754977146 = addInt(j_754977146, 1);
            }
            
            F.line = 2792;
            var isNumber_754977154 = 0;
            Label7: {
              F.line = 2793;
                Label8: while (true) {
                if (!((j_754977146 < (formatstr_754977088).length) && !((ConstSet4[formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet5[formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)]] != undefined)) {
                  F.line = 2795;
                  k_754977147 = subInt(addInt(mulInt(k_754977147, 10), formatstr_754977088[chckIndx(j_754977146, 0, (formatstr_754977088).length - 1)]), 48);
                  if ((isNumber_754977154 == 0)) {
                  F.line = 2796;
                  isNumber_754977154 = 1;
                  }
                  
                  }
                  else {
                    F.line = 2798;
                    isNumber_754977154 = (-1);
                  }
                  
                  F.line = 2799;
                  j_754977146 = addInt(j_754977146, 1);
                }
            };
            if ((isNumber_754977154 == 1)) {
            F.line = 2801;
            if (!(negative_754977148)) {
            Temporary9 = subInt(k_754977147, 1);
            }
            else {
            Temporary9 = subInt((a_754977089).length, k_754977147);
            }
            
            var idx_754977177 = Temporary9;
            if (((idx_754977177 < 0) || ((a_754977089).length - 1 < idx_754977177))) {
            F.line = 2802;
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            F.line = 2803;
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(idx_754977177, 0, (a_754977089).length - 1)]);;
            }
            else {
              F.line = 2805;
              var x_754977181 = findNormalized_754977070(substr_33558078(formatstr_754977088, addInt(i_754977091, 2), subInt(j_754977146, 1)), a_754977089);
              if (((0 <= x_754977181) && (x_754977181 < (a_754977089).length - 1))) {
              F.line = 2806;
              s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(addInt(x_754977181, 1), 0, (a_754977089).length - 1)]);;
              }
              else {
                F.line = 2807;
              invalidFormatString_754977083(formatstr_754977088);
              }
              
            }
            
            F.line = 2808;
            i_754977091 = addInt(j_754977146, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            F.line = 2810;
            var j_754977185 = addInt(i_754977091, 1);
            Label10: {
              F.line = 2811;
                Label11: while (true) {
                  if (!(j_754977185 < (formatstr_754977088).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet7[formatstr_754977088[chckIndx(j_754977185, 0, (formatstr_754977088).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  F.line = 2811;
                  j_754977185 = addInt(j_754977185, 1);
                }
            };
            F.line = 2812;
            var x_754977195 = findNormalized_754977070(substr_33558078(formatstr_754977088, addInt(i_754977091, 1), subInt(j_754977185, 1)), a_754977089);
            if (((0 <= x_754977195) && (x_754977195 < (a_754977089).length - 1))) {
            F.line = 2813;
            s_754977087[s_754977087_Idx].push.apply(s_754977087[s_754977087_Idx], a_754977089[chckIndx(addInt(x_754977195, 1), 0, (a_754977089).length - 1)]);;
            }
            else {
              F.line = 2814;
            invalidFormatString_754977083(formatstr_754977088);
            }
            
            F.line = 2815;
            i_754977091 = j_754977185;
            break;
          default: 
            F.line = 2817;
            invalidFormatString_754977083(formatstr_754977088);
            break;
          }
          }
          else {
            F.line = 2819;
            addChar(s_754977087[s_754977087_Idx], formatstr_754977088[chckIndx(i_754977091, 0, (formatstr_754977088).length - 1)]);;
            F.line = 2820;
            i_754977091 = addInt(i_754977091, 1);
          }
          
        }
    };
  framePtr = F.prev;

  
}

function nsuFormatSingleElem(formatstr_754977216, a_754977217) {
  var result_754977218 = [[]];

  var F = {procname: "strutils.%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2874;
    F.filename = "strutils.nim";
    result_754977218[0] = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 2875;
    nsuAddf(result_754977218, 0, formatstr_754977216, [nimCopy(null, a_754977217, NTI33554449)]);
  framePtr = F.prev;

  return result_754977218[0];

}

function xmlEscape_671089047(s_671089048) {
  var result_671089049 = [];

  var F = {procname: "unittest.xmlEscape", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 307;
    F.filename = "unittest.nim";
    result_671089049 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      F.line = 308;
      var c_671089050 = 0;
      F.line = 259;
      F.filename = "iterators.nim";
      var i_536871164 = 0;
      F.line = 260;
      var L_536871165 = (s_671089048).length;
      Label2: {
        F.line = 261;
          Label3: while (true) {
          if (!(i_536871164 < L_536871165)) break Label3;
            F.line = 308;
            F.filename = "unittest.nim";
            c_671089050 = s_671089048[chckIndx(i_536871164, 0, (s_671089048).length - 1)];
            F.line = 308;
            switch (c_671089050) {
            case 60:
              F.line = 310;
              result_671089049.push.apply(result_671089049, [38,108,116,59]);;
              break;
            case 62:
              F.line = 311;
              result_671089049.push.apply(result_671089049, [38,103,116,59]);;
              break;
            case 38:
              F.line = 312;
              result_671089049.push.apply(result_671089049, [38,97,109,112,59]);;
              break;
            case 34:
              F.line = 313;
              result_671089049.push.apply(result_671089049, [38,113,117,111,116,59]);;
              break;
            case 39:
              F.line = 314;
              result_671089049.push.apply(result_671089049, [38,97,112,111,115,59]);;
              break;
            default: 
              if ((c_671089050 < 32)) {
              F.line = 317;
              result_671089049.push.apply(result_671089049, ([38,35] || []).concat(HEX24_369098760(c_671089050) || [],[59]));;
              }
              else {
                F.line = 319;
              addChar(result_671089049, c_671089050);;
              }
              
              break;
            }
            F.line = 263;
            F.filename = "iterators.nim";
            i_536871164 = addInt(i_536871164, 1);
            if (!(((s_671089048).length == L_536871165))) {
            F.line = 264;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_671089049;

}

function suiteStarted_671089101(formatter_671089102, suiteName_671089103) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 342;
    F.filename = "unittest.nim";
    writeLine_1023410442(formatter_671089102.stream, [nsuFormatSingleElem([9,60,116,101,115,116,115,117,105,116,101,32,110,97,109,101,61,34,36,49,34,62], xmlEscape_671089047(suiteName_671089103))]);
  framePtr = F.prev;

  
}

function suiteStarted_671088957(formatter_671088958, suiteName_671088959) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 268;
    F.filename = "unittest.nim";
    rawEcho([10,91,83,117,105,116,101,93,32], suiteName_671088959);
    F.line = 269;
    formatter_671088958.isInSuite = true;
  framePtr = F.prev;

  
}

function suiteStarted_671088700(formatter_671088701, suiteName_671088702) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function suiteStarted_671088703(formatter_671088701, suiteName_671088702) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088701);
    if (isObj(formatter_671088701.m_type, NTI671088653)) {
    F.line = 199;
    F.filename = "unittest.nim";
    suiteStarted_671089101(formatter_671088701, suiteName_671088702);
    }
    else {
    if (isObj(formatter_671088701.m_type, NTI671088652)) {
    F.line = 199;
    suiteStarted_671088957(formatter_671088701, suiteName_671088702);
    }
    else {
    if (isObj(formatter_671088701.m_type, NTI671088651)) {
    F.line = 199;
    suiteStarted_671088700(formatter_671088701, suiteName_671088702);
    }
    }}
  framePtr = F.prev;

  
}

function toFloat_33556008(i_33556009) {
  var result_33556010 = 0.0;

  var F = {procname: "system.toFloat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1292;
    F.filename = "system.nim";
    result_33556010 = i_33556009;
  framePtr = F.prev;

  return result_33556010;

}

function HEX2F_33556020(x_33556021, y_33556022) {
  var result_33556023 = 0.0;

  var F = {procname: "system./", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1340;
    F.filename = "system.nim";
    result_33556023 = (toFloat_33556008(x_33556021) / toFloat_33556008(y_33556022));
  framePtr = F.prev;

  return result_33556023;

}

function epochTime_1040191729() {
  var result_1040191730 = 0.0;

  var F = {procname: "times.epochTime", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2808;
    F.filename = "times.nim";
    result_1040191730 = HEX2F_33556020(new Date().getTime(), 1000);
  framePtr = F.prev;

  return result_1040191730;

}

function testStarted_671089104(formatter_671089105, testName_671089106) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 345;
    F.filename = "unittest.nim";
    if (formatter_671089105.testErrors.length < 0) { for (var i = formatter_671089105.testErrors.length ; i < 0 ; ++i) formatter_671089105.testErrors.push([]); }
               else { formatter_671089105.testErrors.length = 0; };
    F.line = 346;
    if (formatter_671089105.testStackTrace.length < 0) { for (var i = formatter_671089105.testStackTrace.length; i < 0; ++i) formatter_671089105.testStackTrace.push(0); }
         else {formatter_671089105.testStackTrace.length = 0; };
    F.line = 347;
    formatter_671089105.testStartTime = epochTime_1040191729();
  framePtr = F.prev;

  
}

function testStarted_671088977(formatter_671088978, testName_671088979) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 272;
    F.filename = "unittest.nim";
    formatter_671088978.isInTest = true;
  framePtr = F.prev;

  
}

function testStarted_671088704(formatter_671088705, testName_671088706) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function testStarted_671088707(formatter_671088705, testName_671088706) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088705);
    if (isObj(formatter_671088705.m_type, NTI671088653)) {
    F.line = 201;
    F.filename = "unittest.nim";
    testStarted_671089104(formatter_671088705, testName_671088706);
    }
    else {
    if (isObj(formatter_671088705.m_type, NTI671088652)) {
    F.line = 201;
    testStarted_671088977(formatter_671088705, testName_671088706);
    }
    else {
    if (isObj(formatter_671088705.m_type, NTI671088651)) {
    F.line = 201;
    testStarted_671088704(formatter_671088705, testName_671088706);
    }
    }}
  framePtr = F.prev;

  
}

function add_671089115(x_671089117, x_671089117_Idx, y_671089118) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1204;
    F.filename = "system.nim";
    var xl_671089122 = (x_671089117[x_671089117_Idx]).length;
    F.line = 1205;
    if (x_671089117[x_671089117_Idx].length < (Temporary1 = chckRange(addInt(xl_671089122, (y_671089118).length), 0, 2147483647), Temporary1)) { for (var i = x_671089117[x_671089117_Idx].length ; i < Temporary1 ; ++i) x_671089117[x_671089117_Idx].push([]); }
               else { x_671089117[x_671089117_Idx].length = Temporary1; };
    Label2: {
      F.line = 1206;
      var i_671089137 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536871168 = 0;
      F.line = 1206;
      F.filename = "system.nim";
      colontmp__536871168 = (y_671089118).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871169 = 0;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536871169 <= colontmp__536871168)) break Label4;
            F.line = 1206;
            F.filename = "system.nim";
            i_671089137 = res_536871169;
            F.line = 1206;
            x_671089117[x_671089117_Idx][chckIndx(addInt(xl_671089122, i_671089137), 0, (x_671089117[x_671089117_Idx]).length - 1)] = nimCopy(null, y_671089118[chckIndx(i_671089137, 0, (y_671089118).length - 1)], NTI33554449);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536871169 = addInt(res_536871169, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function failureOccurred_671089111(formatter_671089112, checkpoints_671089113, stackTrace_671089114) {
  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 353;
    F.filename = "unittest.nim";
    add_671089115(formatter_671089112, "testErrors", checkpoints_671089113);
    if ((0 < (stackTrace_671089114).length)) {
    F.line = 355;
    formatter_671089112.testStackTrace = nimCopy(null, stackTrace_671089114, NTI33554449);
    }
    
  framePtr = F.prev;

  
}

function failureOccurred_671088980(formatter_671088981, checkpoints_671088982, stackTrace_671088983) {
    var Temporary1;

  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    if ((0 < (stackTrace_671088983).length)) {
    F.line = 277;
    F.filename = "unittest.nim";
    rawEcho(stackTrace_671088983);
    }
    
    F.line = 278;
    if (formatter_671088981.isInSuite) {
    Temporary1 = [32,32,32,32];
    }
    else {
    Temporary1 = [];
    }
    
    var prefix_671088984 = nimCopy(null, Temporary1, NTI33554449);
    Label2: {
      F.line = 279;
      var msg_671089006 = [];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536871173 = 0;
      F.line = 242;
      var L_536871174 = (checkpoints_671088982).length;
      Label3: {
        F.line = 243;
          Label4: while (true) {
          if (!(i_536871173 < L_536871174)) break Label4;
            F.line = 279;
            F.filename = "unittest.nim";
            msg_671089006 = checkpoints_671088982[chckIndx(i_536871173, 0, (checkpoints_671088982).length - 1)];
            F.line = 279;
            rawEcho(prefix_671088984, msg_671089006);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536871173 = addInt(i_536871173, 1);
            if (!(((checkpoints_671088982).length == L_536871174))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function failureOccurred_671088708(formatter_671088709, checkpoints_671088710, stackTrace_671088711) {
  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function failureOccurred_671088712(formatter_671088709, checkpoints_671088710, stackTrace_671088711) {
  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088709);
    if (isObj(formatter_671088709.m_type, NTI671088653)) {
    F.line = 203;
    F.filename = "unittest.nim";
    failureOccurred_671089111(formatter_671088709, checkpoints_671088710, stackTrace_671088711);
    }
    else {
    if (isObj(formatter_671088709.m_type, NTI671088652)) {
    F.line = 203;
    failureOccurred_671088980(formatter_671088709, checkpoints_671088710, stackTrace_671088711);
    }
    else {
    if (isObj(formatter_671088709.m_type, NTI671088651)) {
    F.line = 203;
    failureOccurred_671088708(formatter_671088709, checkpoints_671088710, stackTrace_671088711);
    }
    }}
  framePtr = F.prev;

  
}

function nsuformatBiggestFloat(f_754976835, format_754976836, precision_754976837, decimalSep_754976838) {
  var result_754976839 = [];

  var F = {procname: "strutils.formatBiggestFloat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2452;
    F.filename = "strutils.nim";
    var precision_754976840 = precision_754976837;
    if ((precision_754976840 == (-1))) {
    F.line = 2455;
    precision_754976840 = 6;
    }
    
    F.line = 2456;
    var res_754976841 = null;
    F.line = 2457;
    switch (format_754976836) {
    case 0:
      F.line = 2459;
      res_754976841 = f_754976835.toString();
      break;
    case 1:
      F.line = 2461;
      res_754976841 = f_754976835.toFixed(precision_754976840);
      break;
    case 2:
      F.line = 2463;
      res_754976841 = f_754976835.toExponential(precision_754976840);
      break;
    }
    F.line = 2464;
    result_754976839 = nimCopy(null, cstrToNimstr(res_754976841), NTI33554449);
    if (((1.0 / f_754976835) == -Infinity)) {
    F.line = 2467;
    result_754976839 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_754976841) || []), NTI33554449);
    }
    
    Label1: {
      F.line = 2468;
      var i_754976846 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__536871180 = 0;
      F.line = 2468;
      F.filename = "strutils.nim";
      colontmp__536871180 = (result_754976839).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536871181 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536871181 < colontmp__536871180)) break Label3;
            F.line = 2468;
            F.filename = "strutils.nim";
            i_754976846 = i_536871181;
            if ((ConstSet8[result_754976839[chckIndx(i_754976846, 0, (result_754976839).length - 1)]] != undefined)) {
            F.line = 2471;
            result_754976839[chckIndx(i_754976846, 0, (result_754976839).length - 1)] = decimalSep_754976838;
            }
            
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536871181 = addInt(i_536871181, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754976839;

}

function nsuformatFloat(f_754976868, format_754976869, precision_754976870, decimalSep_754976871) {
  var result_754976872 = [];

  var F = {procname: "strutils.formatFloat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2525;
    F.filename = "strutils.nim";
    result_754976872 = nimCopy(null, nsuformatBiggestFloat(f_754976868, format_754976869, precision_754976870, decimalSep_754976871), NTI33554449);
  framePtr = F.prev;

  return result_754976872;

}

function nsuFormatOpenArray(formatstr_754977205, a_754977206) {
  var result_754977207 = [[]];

  var F = {procname: "strutils.%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2867;
    F.filename = "strutils.nim";
    result_754977207[0] = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 2868;
    nsuAddf(result_754977207, 0, formatstr_754977205, a_754977206);
  framePtr = F.prev;

  return result_754977207[0];

}

function HEX5BHEX5D_671089146(s_671089148, i_671089149) {
  var result_671089150 = null;
  var result_671089150_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_671089150 = s_671089148; result_671089150_Idx = chckIndx(subInt((s_671089148).length, i_671089149), 0, (s_671089148).length - 1);
  framePtr = F.prev;

  return [result_671089150, result_671089150_Idx];

}

function testEnded_671089138(formatter_671089139, testResult_671089140) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 358;
    F.filename = "unittest.nim";
    var time_671089141 = (epochTime_1040191729() - formatter_671089139.testStartTime);
    F.line = 359;
    var timeStr_671089142 = nsuformatFloat(time_671089141, 1, 8, 46);
    F.line = 360;
    writeLine_1023410442(formatter_671089139.stream, [nsuFormatOpenArray([9,9,60,116,101,115,116,99,97,115,101,32,110,97,109,101,61,34,36,35,34,32,116,105,109,101,61,34,36,35,34,62], [xmlEscape_671089047(testResult_671089140.testName), nimCopy(null, timeStr_671089142, NTI33554449)])]);
    F.line = 362;
    switch (testResult_671089140.status) {
    case 0:
      break;
    case 2:
      F.line = 366;
      writeLine_1023410442(formatter_671089139.stream, [[60,115,107,105,112,112,101,100,32,47,62]]);
      break;
    case 1:
      F.line = 368;
      if (((0 < (formatter_671089139.testStackTrace).length) && (0 < (formatter_671089139.testErrors).length))) {
      Temporary1 = xmlEscape_671089047((Temporary2 = HEX5BHEX5D_671089146(formatter_671089139.testErrors, 1), Temporary2)[0][Temporary2[1]]);
      }
      else {
      if ((0 < (formatter_671089139.testErrors).length)) {
      Temporary1 = xmlEscape_671089047(formatter_671089139.testErrors[chckIndx(0, 0, (formatter_671089139.testErrors).length - 1)]);
      }
      else {
      Temporary1 = [84,104,101,32,116,101,115,116,32,102,97,105,108,101,100,32,119,105,116,104,111,117,116,32,111,117,116,112,117,116,116,105,110,103,32,97,110,32,101,114,114,111,114];
      }
      }
      var failureMsg_671089173 = nimCopy(null, Temporary1, NTI33554449);
      F.line = 375;
      var errs_671089174 = [];
      if ((1 < (formatter_671089139.testErrors).length)) {
      F.line = 377;
      if ((0 < (formatter_671089139.testStackTrace).length)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = 1;
      }
      
      var startIdx_671089178 = Temporary3;
      F.line = 378;
      if ((0 < (formatter_671089139.testStackTrace).length)) {
      Temporary4 = subInt((formatter_671089139.testErrors).length, 2);
      }
      else {
      Temporary4 = subInt((formatter_671089139.testErrors).length, 1);
      }
      
      var endIdx_671089185 = Temporary4;
      Label5: {
        F.line = 382;
        var errIdx_671089190 = 0;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_536871177 = startIdx_671089178;
        Label6: {
          F.line = 91;
            Label7: while (true) {
            if (!(res_536871177 <= endIdx_671089185)) break Label7;
              F.line = 382;
              F.filename = "unittest.nim";
              errIdx_671089190 = res_536871177;
              if ((0 < (errs_671089174).length)) {
              F.line = 384;
              errs_671089174.push.apply(errs_671089174, [10]);;
              }
              
              F.line = 382;
              errs_671089174.push.apply(errs_671089174, xmlEscape_671089047(formatter_671089139.testErrors[chckIndx(errIdx_671089190, 0, (formatter_671089139.testErrors).length - 1)]));;
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_536871177 = addInt(res_536871177, 1);
            }
        };
      };
      }
      
      if ((0 < (formatter_671089139.testStackTrace).length)) {
      F.line = 388;
      F.filename = "unittest.nim";
      writeLine_1023410442(formatter_671089139.stream, [nsuFormatOpenArray([9,9,9,60,101,114,114,111,114,32,109,101,115,115,97,103,101,61,34,36,35,34,62,36,35,60,47,101,114,114,111,114,62], [nimCopy(null, failureMsg_671089173, NTI33554449), xmlEscape_671089047(formatter_671089139.testStackTrace)])]);
      if ((0 < (errs_671089174).length)) {
      F.line = 391;
      writeLine_1023410442(formatter_671089139.stream, [nsuFormatSingleElem([9,9,9,60,115,121,115,116,101,109,45,101,114,114,62,36,35,60,47,115,121,115,116,101,109,45,101,114,114,62], errs_671089174)]);
      }
      
      }
      else {
        F.line = 393;
      writeLine_1023410442(formatter_671089139.stream, [nsuFormatOpenArray([9,9,9,60,102,97,105,108,117,114,101,32,109,101,115,115,97,103,101,61,34,36,35,34,62,36,35,60,47,102,97,105,108,117,114,101,62], [nimCopy(null, failureMsg_671089173, NTI33554449), nimCopy(null, errs_671089174, NTI33554449)])]);
      }
      
      break;
    }
    F.line = 396;
    writeLine_1023410442(formatter_671089139.stream, [[9,9,60,47,116,101,115,116,99,97,115,101,62]]);
  framePtr = F.prev;

  
}

function testEnded_671089007(formatter_671089008, testResult_671089009) {
    var Temporary1;

  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 283;
    F.filename = "unittest.nim";
    formatter_671089008.isInTest = false;
    if ((!((formatter_671089008.outputLevel == 2)) && ((formatter_671089008.outputLevel == 0) || (testResult_671089009.status == 1)))) {
    F.line = 287;
    if ((0 < (testResult_671089009.suiteName).length)) {
    Temporary1 = [32,32];
    }
    else {
    Temporary1 = [];
    }
    
    var prefix_671089024 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 301;
    rawEcho(prefix_671089024, [91], reprEnum(testResult_671089009.status, NTI671088643), [93,32], testResult_671089009.testName);
    }
    
  framePtr = F.prev;

  
}

function testEnded_671088713(formatter_671088714, testResult_671088715) {
  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function testEnded_671088716(formatter_671088714, testResult_671088715) {
  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088714);
    if (isObj(formatter_671088714.m_type, NTI671088653)) {
    F.line = 208;
    F.filename = "unittest.nim";
    testEnded_671089138(formatter_671088714, testResult_671088715);
    }
    else {
    if (isObj(formatter_671088714.m_type, NTI671088652)) {
    F.line = 208;
    testEnded_671089007(formatter_671088714, testResult_671088715);
    }
    else {
    if (isObj(formatter_671088714.m_type, NTI671088651)) {
    F.line = 208;
    testEnded_671088713(formatter_671088714, testResult_671088715);
    }
    }}
  framePtr = F.prev;

  
}

function suiteEnded_671089191(formatter_671089192) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 399;
    F.filename = "unittest.nim";
    writeLine_1023410442(formatter_671089192.stream, [[9,60,47,116,101,115,116,115,117,105,116,101,62]]);
  framePtr = F.prev;

  
}

function suiteEnded_671089045(formatter_671089046) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "unittest.nim";
    formatter_671089046.isInSuite = false;
  framePtr = F.prev;

  
}

function suiteEnded_671088717(formatter_671088718) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function suiteEnded_671088719(formatter_671088718) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088718);
    if (isObj(formatter_671088718.m_type, NTI671088653)) {
    F.line = 210;
    F.filename = "unittest.nim";
    suiteEnded_671089191(formatter_671088718);
    }
    else {
    if (isObj(formatter_671088718.m_type, NTI671088652)) {
    F.line = 210;
    suiteEnded_671089045(formatter_671088718);
    }
    else {
    if (isObj(formatter_671088718.m_type, NTI671088651)) {
    F.line = 210;
    suiteEnded_671088717(formatter_671088718);
    }
    }}
  framePtr = F.prev;

  
}
