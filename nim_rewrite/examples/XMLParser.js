/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1325402625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325402609 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400827 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325406151 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1124074669 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074628 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074283 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074060 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074259 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074182 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074176 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124074171 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI503316800 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400122 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400141 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400855 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325401261 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325403076 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400877 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325402914 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400947 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325403265 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325403264 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325404793 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325404807 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325404804 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325404801 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325404690 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325403999 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325403997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325404012 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325404318 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325404150 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325403225 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325404342 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325404156 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325402526 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325402515 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325402504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325403903 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325403832 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1124073480 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325401020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325401035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325401030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845893 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1073741842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845695 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400169 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400127 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400168 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400167 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400181 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325400124 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400166 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400119 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400142 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306437 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI939524175 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI939524181 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400098 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400177 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400176 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124073477 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400121 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400164 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400161 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400158 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400150 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325400117 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400149 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400139 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554443 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI1325400129 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400130 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1325400148 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400118 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400135 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325400134 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325400140 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400174 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325400136 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400239 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1073741831 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1073741827 = {size: 0,kind: 42,base: null,node: null,finalizer: null};
var NTI1073741830 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1073741828 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1073741850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400137 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400138 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1224736771 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1124073493 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1124073490 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124073487 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1124073498 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1124073476 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1124073497 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124073496 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1124073478 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555183 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1308622852 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1308622851 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
NTI1291845637.base = NTI33554449;
var NNI1291845635 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291845637, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554438, name: "Field2", sons: null}]};
NTI1291845635.node = NNI1291845635;
var NNI1308622852 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI1308622852.node = NNI1308622852;
var NNI33555183 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555183.node = NNI33555183;
NTI33555183.base = NTI33555173;
NTI1308622852.base = NTI33555183;
NTI1308622851.base = NTI1308622852;
var NNI1291845873 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1308622851, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1308622851, name: "Field1", sons: null}]};
NTI1291845873.node = NNI1291845873;
NTI1124073496.base = NTI33554449;
NTI1124073476.base = NTI1124073478;
NTI1124073497.base = NTI1124073476;
var NNI1124073493 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554449, name: "Field3", sons: null}]};
NTI1124073493.node = NNI1124073493;
NTI1124073490.base = NTI1124073493;
var NNI1124073487 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1124073490, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1124073487.node = NNI1124073487;
NTI1124073498.base = NTI1124073487;
var NNI1124073478 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nameRef", len: 0, typ: NTI1124073496, name: "nameRef", sons: null}, 
{kind: 1, offset: "childrenSeq", len: 0, typ: NTI1124073497, name: "childrenSeq", sons: null}, 
{kind: 1, offset: "textSlice", len: 0, typ: NTI1291845635, name: "textSlice", sons: null}, 
{kind: 1, offset: "attributesRef", len: 0, typ: NTI1124073498, name: "attributesRef", sons: null}, 
{kind: 1, offset: "sourcePos", len: 0, typ: NTI33554438, name: "sourcePos", sons: null}]};
NTI1124073478.node = NNI1124073478;
NTI1124073478.base = NTI33555173;
var NNI1325400137 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400137, name: "postfixNotation", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400137, name: "memoize", len: 0, sons: null}}};
NTI1325400137.node = NNI1325400137;
NTI1325400138.base = NTI1325400137;
NTI1073741831.base = NTI1073741828;
var NNI1073741830 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554438, name: "pos", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI1073741827, name: "code", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554438, name: "line", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554438, name: "column", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554438, name: "length", sons: null}, 
{kind: 1, offset: "related", len: 0, typ: NTI1073741831, name: "related", sons: null}, 
{kind: 1, offset: "origPos", len: 0, typ: NTI33554438, name: "origPos", sons: null}, 
{kind: 1, offset: "origDoc", len: 0, typ: NTI33554449, name: "origDoc", sons: null}]};
NTI1073741830.node = NNI1073741830;
NTI1073741828.base = NTI1073741830;
NTI1073741850.base = NTI1073741828;
var NNI1325400136 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1325400174, name: "Field1", sons: null}]};
NTI1325400136.node = NNI1325400136;
NTI1325400239.base = NTI1325400136;
NTI1325400148.base = NTI33554449;
var NNI1325400129 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400129, name: "isLeaf", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400129, name: "isNary", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400129, name: "isFlowParser", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1325400129, name: "isLookahead", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1325400129, name: "isContextSensitive", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1325400129, name: "isErrorCatching", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1325400129, name: "isForward", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1325400129, name: "isDisposable", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1325400129, name: "noMemoization", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1325400129, name: "dropContent", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1325400129, name: "traversalTracker", len: 0, sons: null}}};
NTI1325400129.node = NNI1325400129;
NTI1325400130.base = NTI1325400129;
NTI1325400139.base = NTI1325400140;
NTI1325400117.base = NTI1325400132;
NTI1325400149.base = NTI1325400117;
NTI1124073477.base = NTI1124073478;
var NNI1325400121 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073477, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1325400121.node = NNI1325400121;
var NNI1325400164 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1325400121, name: "Field2", sons: null}]};
NTI1325400164.node = NNI1325400164;
NTI1325400161.base = NTI1325400164;
var NNI1325400158 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1325400161, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1325400158.node = NNI1325400158;
var NNI1325400132 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ptype", len: 0, typ: NTI33554449, name: "ptype", sons: null}, 
{kind: 1, offset: "pname", len: 0, typ: NTI33554449, name: "pname", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI1325400148, name: "nodeName", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI1325400130, name: "flags", sons: null}, 
{kind: 1, offset: "uniqueID", len: 0, typ: NTI33554443, name: "uniqueID", sons: null}, 
{kind: 1, offset: "grammarVar", len: 0, typ: NTI1325400139, name: "grammarVar", sons: null}, 
{kind: 1, offset: "symbol", len: 0, typ: NTI1325400118, name: "symbol", sons: null}, 
{kind: 1, offset: "subParsers", len: 0, typ: NTI1325400149, name: "subParsers", sons: null}, 
{kind: 1, offset: "call", len: 0, typ: NTI1325400150, name: "call", sons: null}, 
{kind: 1, offset: "visited", len: 0, typ: NTI1325400158, name: "visited", sons: null}]};
NTI1325400132.node = NNI1325400132;
NTI1325400132.base = NTI33555173;
NTI1325400118.base = NTI1325400132;
NTI1325400176.base = NTI1073741828;
NTI1325400177.base = NTI1325400136;
var NNI1325400140 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI1325400138, name: "flags", sons: null}, 
{kind: 1, offset: "returnItem", len: 0, typ: NTI1325400134, name: "returnItem", sons: null}, 
{kind: 1, offset: "returnSequence", len: 0, typ: NTI1325400135, name: "returnSequence", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI1291845635, name: "document", sons: null}, 
{kind: 1, offset: "root", len: 0, typ: NTI1325400118, name: "root", sons: null}, 
{kind: 1, offset: "commentRe", len: 0, typ: NTI1291845873, name: "commentRe", sons: null}, 
{kind: 1, offset: "errors", len: 0, typ: NTI1325400176, name: "errors", sons: null}, 
{kind: 1, offset: "rollbackStack", len: 0, typ: NTI1325400177, name: "rollbackStack", sons: null}, 
{kind: 1, offset: "rollbackLocation", len: 0, typ: NTI33554438, name: "rollbackLocation", sons: null}, 
{kind: 1, offset: "farthestFail", len: 0, typ: NTI33554438, name: "farthestFail", sons: null}, 
{kind: 1, offset: "farthestParser", len: 0, typ: NTI1325400118, name: "farthestParser", sons: null}]};
NTI1325400140.node = NNI1325400140;
NTI1325400140.base = NTI33555173;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI1325400098 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845873, name: "Field1", sons: null}]};
NTI1325400098.node = NNI1325400098;
var NNI939524181 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI939524175, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI939524181.node = NNI939524181;
var NNI805306437 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306437.node = NNI805306437;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
NTI134217747.base = NTI134217746;
var NNI1325400124 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400124, name: "mkRegex", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400124, name: "mkString", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400124, name: "mkProc", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1325400124, name: "mkParser", len: 0, sons: null}}};
NTI1325400124.node = NNI1325400124;
var NNI1325400126 = {kind: 3, offset: "kind", len: 4, typ: NTI1325400124, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rxInfo", len: 0, typ: NTI1325400098, name: "rxInfo", sons: null}], 
[setConstr(1), {kind: 1, offset: "cmpStr", len: 0, typ: NTI33554449, name: "cmpStr", sons: null}], 
[setConstr(2), {kind: 1, offset: "findProc", len: 0, typ: NTI1325400181, name: "findProc", sons: null}], 
[setConstr(3), {kind: 1, offset: "consumeParser", len: 0, typ: NTI1325400117, name: "consumeParser", sons: null}]]};
NTI1325400126.node = NNI1325400126;
NTI1325400166.base = NTI1325400126;
NTI1325400167.base = NTI1325400126;
var NNI1325400127 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400126, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI1325400127.node = NNI1325400127;
NTI1325400168.base = NTI1325400127;
NTI1325400169.base = NTI1325400117;
var NNI1325400133 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mandatory", len: 0, typ: NTI33554443, name: "mandatory", sons: null}, 
{kind: 1, offset: "skipList", len: 0, typ: NTI1325400166, name: "skipList", sons: null}, 
{kind: 1, offset: "resumeList", len: 0, typ: NTI1325400167, name: "resumeList", sons: null}, 
{kind: 1, offset: "errorList", len: 0, typ: NTI1325400168, name: "errorList", sons: null}, 
{kind: 1, offset: "referredParsers", len: 0, typ: NTI1325400169, name: "referredParsers", sons: null}]};
NTI1325400133.node = NNI1325400133;
NTI1325400133.base = NTI1325400132;
NTI1325400119.base = NTI1325400133;
var NNI1325400142 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "origin", len: 0, typ: NTI1325400119, name: "origin", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI1124073476, name: "node", sons: null}, 
{kind: 1, offset: "node_orig_len", len: 0, typ: NTI33554438, name: "node_orig_len", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI33554438, name: "location", sons: null}, 
{kind: 1, offset: "error", len: 0, typ: NTI1073741828, name: "error", sons: null}, 
{kind: 1, offset: "first_throw", len: 0, typ: NTI33554466, name: "first_throw", sons: null}]};
NTI1325400142.node = NNI1325400142;
NTI1325400142.base = NTI33555179;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI1291845695 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554438, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554438, name: "b", sons: null}]};
NTI1291845695.node = NNI1291845695;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;
NTI1073741842.base = NTI1073741828;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555178;
var NNI1291845893 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1291845893.node = NNI1291845893;
var NNI1325401030 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1325401030.node = NNI1325401030;
var NNI1325401035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554438, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1325401035.node = NNI1325401035;
var NNI1325401020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073477, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1325401020.node = NNI1325401020;
var NNI1124073480 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1124073480.node = NNI1124073480;
NTI1124073480.base = NTI33555178;
var NNI1325403832 = {kind: 1, offset: "reInfo", len: 0, typ: NTI1325400098, name: "reInfo", sons: null};
NTI1325403832.node = NNI1325403832;
NTI1325403832.base = NTI1325400132;
var NNI1325403903 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "combined", len: 0, typ: NTI1325400098, name: "combined", sons: null}, 
{kind: 1, offset: "whitespace", len: 0, typ: NTI1325400098, name: "whitespace", sons: null}, 
{kind: 1, offset: "comment", len: 0, typ: NTI1325400098, name: "comment", sons: null}]};
NTI1325403903.node = NNI1325403903;
NTI1325403903.base = NTI1325400132;
NTI1325402504.base = NTI1325400126;
NTI1325402515.base = NTI1325400126;
NTI1325402526.base = NTI1325400127;
NTI1325404156.base = NTI1325400117;
var NNI1325404342 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325404342.node = NNI1325404342;
NTI1325404342.base = NTI1325400133;
var NNI1325403225 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "slice", len: 0, typ: NTI1291845635, name: "slice", sons: null}, 
{kind: 1, offset: "empty", len: 0, typ: NTI33554466, name: "empty", sons: null}]};
NTI1325403225.node = NNI1325403225;
NTI1325403225.base = NTI1325400132;
var NNI1325404150 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325404150.node = NNI1325404150;
NTI1325404150.base = NTI1325400132;
NTI1325404318.base = NTI1325400117;
NTI1325404012.base = NTI1325400117;
var NNI1325403997 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554443, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554443, name: "Field1", sons: null}]};
NTI1325403997.node = NNI1325403997;
var NNI1325403999 = {kind: 1, offset: "repRange", len: 0, typ: NTI1325403997, name: "repRange", sons: null};
NTI1325403999.node = NNI1325403999;
NTI1325403999.base = NTI1325400132;
var NNI1325404690 = {kind: 1, offset: "positive", len: 0, typ: NTI33554466, name: "positive", sons: null};
NTI1325404690.node = NNI1325404690;
NTI1325404690.base = NTI1325400132;
var NNI1325404807 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1224736771, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554438, name: "Field2", sons: null}]};
NTI1325404807.node = NNI1325404807;
NTI1325404804.base = NTI1325404807;
var NNI1325404801 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1325404804, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1325404801.node = NNI1325404801;
var NNI1325404793 = {kind: 1, offset: "recursionCounter", len: 0, typ: NTI1325404801, name: "recursionCounter", sons: null};
NTI1325404793.node = NNI1325404793;
NTI1325404793.base = NTI1325400132;
var NNI1325403264 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "compare", len: 0, typ: NTI1325403265, name: "compare", sons: null}]};
NTI1325403264.node = NNI1325403264;
NTI1325403264.base = NTI1325400132;
NTI1325400947.base = NTI1325400117;
NTI1325402914.base = NTI1325400127;
NTI1325400877.base = NTI1325400117;
NTI1325403076.base = NTI1325400126;
NTI1325401261.base = NTI1124073476;
NTI1325400855.base = NTI1325400117;
NTI1325400141.base = NTI1073741828;
var NNI1325400122 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073477, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1325400141, name: "Field1", sons: null}]};
NTI1325400122.node = NNI1325400122;
NTI503316800.base = NTI33554449;
NTI1124074171.base = NTI33554449;
NTI1124074176.base = NTI33554449;
NTI1124074182.base = NTI33554449;
NTI1124074060.base = NTI33554449;
NTI1124074259.base = NTI1124074060;
NTI1124074283.base = NTI33554449;
NTI1124074628.base = NTI33554449;
NTI1124074669.base = NTI33554449;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555178;
var NNI1325406151 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325406151.node = NNI1325406151;
NTI1325406151.base = NTI1325400132;
NTI1325400827.base = NTI33554449;
var NNI1325402609 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1124073476, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1325402609.node = NNI1325402609;
var NNI1325402625 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1073741828, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554438, name: "Field1", sons: null}]};
NTI1325402625.node = NNI1325402625;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(1);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet3 = setConstr(7);

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}
var ConstSet4 = setConstr(60, 62, 94);
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(45, 43, 32);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet10 = setConstr([65, 90], [97, 122]);

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var ConstSet11 = setConstr(3);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

  var F = {procname: "system.reprDiscriminant", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/repr_impl.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "repr_impl.nim";
    F.line = 12;
    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_33557616;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556443()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet12 = setConstr(0);
var ConstSet13 = setConstr(1);
var ConstSet14 = setConstr(1);
var ConstSet15 = setConstr(2);

function SetPlus(a_33557025, b_33557026) {
        var result = {};
    for (var elem in a_33557025) { result[elem] = true; }
    for (var elem in b_33557026) { result[elem] = true; }
    return result;
  

  
}
var ConstSet16 = setConstr(9, 7);
var ConstSet17 = setConstr(2, 3);
var ConstSet18 = setConstr([65, 90]);
    var toLowerRanges_973079540 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, (-2508), 7357, 7359, (-2508), 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, (-10315), 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_973079541 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, (-7115), 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, (-7017), 8490, (-7883), 8491, (-7762), 8498, 528, 8579, 501, 11360, 501, 11362, (-10243), 11363, (-3314), 11364, (-10227), 11367, 501, 11369, 501, 11371, 501, 11373, (-10280), 11374, (-10249), 11375, (-10283), 11376, (-10282), 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, (-34832), 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, (-41780), 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, (-41808), 42923, (-41819), 42924, (-41815), 42925, (-41805), 42926, (-41808), 42928, (-41758), 42929, (-41782), 42930, (-41761), 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, (-41807), 42950, (-34884)]);
      var ErrorCatcherListNames_1325404669 = [[101,114,114,111,114,115], [115,107,105,112,45,109,97,116,99,104,101,114,115], [114,101,115,117,109,101,45,109,97,116,99,104,101,114,115]];
var ConstSet19 = setConstr(3);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet20 = setConstr(3);
var ConstSet21 = setConstr(1);
var ConstSet22 = setConstr(13, 10);
      var NaryParsers_1325400329 = [[58,65,108,116,101,114,110,97,116,105,118,101], [58,83,101,114,105,101,115], [58,73,110,116,101,114,108,101,97,118,101]];
var ConstSet23 = setConstr(3);
var ConstSet24 = setConstr(3);
var ConstSet25 = setConstr(3);
var ConstSet26 = setConstr(0);
var ConstSet27 = setConstr(1);
var ConstSet28 = setConstr(1);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(3);
var ConstSet31 = setConstr([48, 57]);
var ConstSet32 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}
var F = {procname: "module osseps", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module paths", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/paths.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module paths", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/paths.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1224736945 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_1291846030 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_1291846030 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_1291846030;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_1291846030 = addInt(i_1291846030, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__1291846022 = 0;
      colontmp__1291846022 = (i_33556519 - 1);
      var res_1291846024 = colontmp__1291846022;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_1291846024)) break Label7;
            j_33556554 = res_1291846024;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_1291846024 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function makeStringSlice_1291845648(str_1291845650) {
  var result_1291845651 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "makeStringSlice.makeStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 49;
    F.filename = "strslice.nim";
    F.line = 53;
    var strRef_1291845652 = null;
    var strRef_1291845652_Idx = 0;
    F.line = 57;
    strRef_1291845652 = [[]]; strRef_1291845652_Idx = 0;
    F.line = 58;
    strRef_1291845652[strRef_1291845652_Idx] = nimCopy(null, str_1291845650, NTI33554449);
    result_1291845651 = nimCopy(result_1291845651, {Field0: [strRef_1291845652, strRef_1291845652_Idx], Field1: 0, Field2: subInt((((strRef_1291845652[strRef_1291845652_Idx]).length) | 0), 1)}, NTI1291845635);
  framePtr = F.prev;

  return result_1291845651;

}
var F = {procname: "module strslice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
framePtr = F;
F.line = 62;
F.filename = "strslice.nim";
var EmptyStringSlice_1291845691 = makeStringSlice_1291845648([]);
F.line = 216;
var PCREFlag_1291845937 = new RegExp("\\(\\*\\w+\\)", "g");
F.line = 217;
var comment_1291845938 = new RegExp("#[^\\n]*", "g");
F.line = 218;
var whitespace_1291845939 = new RegExp("(?: *\\n *)|(?:^ *)|(?: *$)", "g");
F.line = 219;
var slashU_1291845940 = new RegExp("\\\\U([0-9a-fA-F]+)", "g");
framePtr = F.prev;
var F = {procname: "module strslice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodetree", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function ure_1325400104(pattern_1325400106) {
  var result_1325400107 = {Field0: null, Field1: null};

  var F = {procname: "ure.ure", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 222;
    F.filename = "strslice.nim";
    var cleanPattern_1325400108 = toJSStr(pattern_1325400106).replace(PCREFlag_1291845937, "").replace(slashU_1291845940, "\\u{$1}");
    F.line = 223;
    var colontmp__1325409622 = new RegExp(cleanPattern_1325400108, "uy");
    F.line = 224;
    var colontmp__1325409623 = new RegExp(cleanPattern_1325400108, "ug");
    F.line = 223;
    result_1325400107 = nimCopy(result_1325400107, {Field0: colontmp__1325409622, Field1: colontmp__1325409623}, NTI1291845873);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400107;

}

function toStringSlice_1325400350(str_1325400352) {
  var result_1325400353 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "toStringSlice.toStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 66;
    F.filename = "strslice.nim";
    result_1325400353 = nimCopy(result_1325400353, makeStringSlice_1291845648(str_1325400352), NTI1291845635);
  framePtr = F.prev;

  return result_1325400353;

}

function init_1325400336(node_1325400339, name_1325400340, data_1325400341, attributes_1325400342) {
  var result_1325400343 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 30;
    F.filename = "nodetree.nim";
    node_1325400339.nameRef[0] = [[]]; node_1325400339.nameRef[1] = 0;
    F.line = 31;
    node_1325400339.nameRef[0][node_1325400339.nameRef[1]] = nimCopy(null, name_1325400340, NTI33554449);
    F.line = 43;
    node_1325400339.textSlice = nimCopy(node_1325400339.textSlice, toStringSlice_1325400350(data_1325400341), NTI1291845635);
    F.line = 44;
    node_1325400339.attributesRef = attributes_1325400342;
    F.line = 45;
    node_1325400339.sourcePos = (-1);
    F.line = 46;
    result_1325400343 = node_1325400339;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400343;

}

function new_1124074179() {
  var result_1124074182 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1124074184 = null;
    F.line = 839;
    r_1124074184 = ({m_type: NTI1124073478, nameRef: [null, 0], childrenSeq: [], textSlice: {Field0: [null, 0], Field1: 0, Field2: 0}, attributesRef: null, sourcePos: 0});
    F.line = 840;
    result_1124074182 = r_1124074184;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1124074182;

}

function cleanUp_1325400371(grammar_1325400372) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 171;
    F.filename = "parse.nim";
    delete grammar_1325400372.flags[1];
    F.line = 172;
    grammar_1325400372.errors = nimCopy(null, [], NTI1073741850);
    F.line = 173;
    grammar_1325400372.rollbackStack = nimCopy(null, [], NTI1325400239);
    F.line = 174;
    grammar_1325400372.rollbackLocation = (-2);
    F.line = 175;
    grammar_1325400372.farthestFail = (-1);
    F.line = 176;
    grammar_1325400372.farthestParser = null;
    F.line = 177;
    grammar_1325400372.root = null;
  framePtr = F.prev;

  
}

function init_1325400433(grammar_1325400434, name_1325400435, flags_1325400436, document_1325400437, returnItem_1325400438, returnSequence_1325400439) {
  var result_1325400440 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "parse.nim";
    grammar_1325400434.name = nimCopy(null, name_1325400435, NTI33554449);
    F.line = 185;
    grammar_1325400434.flags = nimCopy(grammar_1325400434.flags, flags_1325400436, NTI1325400138);
    F.line = 186;
    grammar_1325400434.returnItem = returnItem_1325400438;
    F.line = 187;
    grammar_1325400434.returnSequence = returnSequence_1325400439;
    F.line = 188;
    grammar_1325400434.document = nimCopy(grammar_1325400434.document, document_1325400437, NTI1291845635);
    F.line = 189;
    grammar_1325400434.commentRe = nimCopy(grammar_1325400434.commentRe, NeverMatchRegex_1325400128, NTI1291845873);
    F.line = 190;
    cleanUp_1325400371(grammar_1325400434);
    F.line = 191;
    result_1325400440 = grammar_1325400434;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400440;

}

function new_1325400507() {
  var result_1325400510 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325400512 = null;
    F.line = 839;
    r_1325400512 = ({m_type: NTI1325400140, name: [], flags: {}, returnItem: null, returnSequence: null, document: {Field0: [null, 0], Field1: 0, Field2: 0}, root: null, commentRe: {Field0: null, Field1: null}, errors: [], rollbackStack: [], rollbackLocation: 0, farthestFail: 0, farthestParser: null});
    F.line = 840;
    result_1325400510 = r_1325400512;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400510;

}

function returnItemPlaceholder_1325400365(parser_1325400366, node_1325400367) {
  var result_1325404201 = null;

  var F = {procname: "parse.returnItemPlaceholder", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 709;
    F.filename = "parse.nim";
    result_1325404201 = EmptyNode_1325400358;
    F.line = 710;
    raiseException({message: [114,101,116,117,114,110,73,116,101,109,32,99,97,108,108,101,100,32,111,110,32,71,114,97,109,109,97,80,108,97,99,104,111,108,100,101,114], parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  return result_1325404201;

}

function returnSeqPlaceholder_1325400368(parser_1325400369, nodes_1325400370) {
  var result_1325404206 = null;

  var F = {procname: "parse.returnSeqPlaceholder", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 713;
    F.filename = "parse.nim";
    result_1325404206 = EmptyNode_1325400358;
    F.line = 714;
    raiseException({message: [114,101,116,117,114,110,73,116,101,109,32,99,97,108,108,101,100,32,111,110,32,71,114,97,109,109,97,80,108,97,99,104,111,108,100,101,114], parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  return result_1325404206;

}
var F = {procname: "module parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
framePtr = F;
F.line = 19;
F.filename = "parse.nim";
var NeverMatchRegex_1325400128 = ure_1325400104([36,46]);
F.line = 160;
var EmptyNode_1325400358 = init_1325400336(new_1124074179(), [58,69,77,80,84,89], [], null);
F.line = 196;
var GrammarPlaceholder_1325400546 = init_1325400433(new_1325400507(), [95,95,80,108,97,99,101,104,111,108,100,101,114,95,95], ConstSet2, EmptyStringSlice_1291845691, returnItemPlaceholder_1325400365, returnSeqPlaceholder_1325400368);
F.line = 745;
var anyPassage_1325404220 = {kind: 1, cmpStr: [], rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, findProc: null, consumeParser: null};
F.line = 1159;
var RxNeverMatch_1325405668 = nimCopy(null, {Field0: [36,46], Field1: nimCopy(null, NeverMatchRegex_1325400128, NTI1291845873)}, NTI1325400098);
framePtr = F.prev;
var F = {procname: "module parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module K", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/examples/K.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module K", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/examples/K.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function type_1325401129(parser_1325401130) {
    var Temporary1;

  var result_1325401131 = [];

  var F = {procname: "parse.type", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 232;
    F.filename = "parse.nim";
    if ((eqStrings(parser_1325401130.ptype, [58,70,111,114,119,97,114,100]) && (0 < (parser_1325401130.subParsers).length))) {
    Temporary1 = parser_1325401130.subParsers[chckIndx(0, 0, (parser_1325401130.subParsers).length - 1)].ptype;
    }
    else {
    Temporary1 = parser_1325401130.ptype;
    }
    
    result_1325401131 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1325401131;

}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function HEX5BHEX5D_754976027(s_754976030, x_754976031) {
  var result_754976032 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_754976034 = x_754976031.a;
    F.line = 84;
    var L_754976036 = addInt(subInt(subInt((s_754976030).length, x_754976031.b), a_754976034), 1);
    F.line = 85;
    result_754976032 = nimCopy(null, mnewString(chckRange(L_754976036, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_754976041 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094384 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094384 < L_754976036)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_754976041 = i_520094384;
            F.line = 86;
            result_754976032[chckIndx(i_754976041, 0, (result_754976032).length - 1)] = s_754976030[chckIndx(addInt(i_754976041, a_754976034), 0, (s_754976030).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094384 = addInt(i_520094384, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754976032;

}

function HEX2EHEX2E_939524200(a_939524203, b_939524204) {
  var result_939524207 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_939524207 = nimCopy(result_939524207, {a: a_939524203, b: b_939524204}, NTI939524181);
  framePtr = F.prev;

  return result_939524207;

}

function HEX5BHEX5D_754975999(s_754976002, x_754976003) {
  var result_754976004 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_754976006 = x_754976003.a;
    F.line = 84;
    var L_754976008 = addInt(subInt(x_754976003.b, a_754976006), 1);
    F.line = 85;
    result_754976004 = nimCopy(null, mnewString(chckRange(L_754976008, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_754976013 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094387 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094387 < L_754976008)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_754976013 = i_520094387;
            F.line = 86;
            result_754976004[chckIndx(i_754976013, 0, (result_754976004).length - 1)] = s_754976002[chckIndx(addInt(i_754976013, a_754976006), 0, (s_754976002).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094387 = addInt(i_520094387, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754976004;

}

function HEX2EHEX2E_989855792(a_989855795, b_989855796) {
  var result_989855797 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_989855797 = nimCopy(result_989855797, {a: a_989855795, b: b_989855796}, NTI805306437);
  framePtr = F.prev;

  return result_989855797;

}

function assignSymbol_1325401147(parser_1325401148, symbol_1325401149) {
  var F = {procname: "parse.assignSymbol", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "parse.nim";
    parser_1325401148.symbol = symbol_1325401149;
    Label1: {
      F.line = 245;
      var p_1325401171 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094391 = 0;
      F.line = 242;
      var L_520094392 = (parser_1325401148.subParsers).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094391 < L_520094392)) break Label3;
            F.line = 245;
            F.filename = "parse.nim";
            p_1325401171 = parser_1325401148.subParsers[chckIndx(i_520094391, 0, (parser_1325401148.subParsers).length - 1)];
            if ((p_1325401171.symbol == null)) {
            F.line = 246;
            assignSymbol_1325401147(p_1325401171, symbol_1325401149);
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094391 = addInt(i_520094391, 1);
            if (!(((parser_1325401148.subParsers).length == L_520094392))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function assignName_1325401207(name_1325401208, parser_1325401209) {
  var result_1325401210 = null;

  var F = {procname: "parse.assignName", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (eqStrings(type_1325401129(parser_1325401209), [58,84,114,97,99,101])) {
    F.line = 250;
    F.filename = "parse.nim";
    var _ = assignName_1325401207(name_1325401208, parser_1325401209.subParsers[chckIndx(0, 0, (parser_1325401209.subParsers).length - 1)]);
    F.line = 251;
    result_1325401210 = parser_1325401209;
    break BeforeRet;
    }
    
    if (!(eqStrings(parser_1325401209.pname, []))) {
    F.line = 252;
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(252, 3) `parser.pname == \"\"` "));
    }
    
    if (!(!(eqStrings(name_1325401208, [])))) {
    F.line = 253;
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(253, 3) `name != \"\"` "));
    }
    
    F.line = 254;
    parser_1325401209.nodeName[0][parser_1325401209.nodeName[1]] = nimCopy(null, name_1325401208, NTI33554449);
    if ((name_1325401208[chckIndx(0, 0, (name_1325401208).length - 1)] == 58)) {
    F.line = 256;
    parser_1325401209.pname = nimCopy(null, HEX5BHEX5D_754976027(name_1325401208, HEX2EHEX2E_939524200(1, 1)), NTI33554449);
    }
    else {
    if (((5 <= (name_1325401208).length) && (name_1325401208[chckIndx(4, 0, (name_1325401208).length - 1)] == 58))) {
    if (eqStrings(HEX5BHEX5D_754975999(name_1325401208, HEX2EHEX2E_989855792(0, 3)), [68,82,79,80])) {
    F.line = 259;
    parser_1325401209.flags[9] = true;
    }
    else {
      if (!(eqStrings(HEX5BHEX5D_754975999(name_1325401208, HEX2EHEX2E_989855792(0, 3)), [72,73,68,69]))) {
      F.line = 261;
      failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(261, 7) `name[0 .. 3] == \"HIDE\"` "));
      }
      
    }
    
    F.line = 262;
    parser_1325401209.pname = nimCopy(null, HEX5BHEX5D_754976027(name_1325401208, HEX2EHEX2E_939524200(5, 1)), NTI33554449);
    }
    else {
      if (!(eqStrings(parser_1325401209.ptype, [58,87,104,105,116,101,115,112,97,99,101]))) {
      F.line = 268;
      delete parser_1325401209.flags[7];
      }
      
      F.line = 269;
      parser_1325401209.pname = nimCopy(null, name_1325401208, NTI33554449);
    }
    }
    F.line = 270;
    assignSymbol_1325401147(parser_1325401209, parser_1325401209);
    F.line = 271;
    result_1325401210 = parser_1325401209;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401210;

}

function nsuFindChar(s_754976404, sub_754976405, start_754976406, last_754976407) {
    var Temporary1;

  var result_754976408 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1945;
    F.filename = "strutils.nim";
    result_754976408 = (-1);
    F.line = 1946;
    if ((last_754976407 < 0)) {
    Temporary1 = (s_754976404).length - 1;
    }
    else {
    Temporary1 = last_754976407;
    }
    
    var last_754976409 = Temporary1;
    Label2: {
      F.line = 1949;
      var iHEX60gensym176_754976423 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094399 = 0;
      F.line = 1949;
      F.filename = "strutils.nim";
      colontmp__520094399 = start_754976406;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094400 = colontmp__520094399;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_520094400 <= last_754976409)) break Label4;
            F.line = 1963;
            F.filename = "strutils.nim";
            iHEX60gensym176_754976423 = res_520094400;
            if ((s_754976404[chckIndx(iHEX60gensym176_754976423, 0, (s_754976404).length - 1)] == sub_754976405)) {
            F.line = 1951;
            result_754976408 = iHEX60gensym176_754976423;
            break BeforeRet;
            }
            
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094400 = addInt(res_520094400, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_754976408;

}

function nsuFindStrA(a_754976382, s_754976383, sub_754976384, start_754976385, last_754976386) {
    var Temporary1;

  var result_754976387 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1905;
    F.filename = "strutils.nim";
    if ((last_754976386 < 0)) {
    Temporary1 = (s_754976383).length - 1;
    }
    else {
    Temporary1 = last_754976386;
    }
    
    var last_754976388 = Temporary1;
    F.line = 1906;
    var subLast_754976389 = subInt((sub_754976384).length, 1);
    if ((subLast_754976389 == (-1))) {
    F.line = 1911;
    result_754976387 = start_754976385;
    break BeforeRet;
    }
    
    F.line = 1915;
    result_754976387 = (-1);
    F.line = 1916;
    var skip_754976390 = start_754976385;
    Label2: {
      F.line = 1918;
        Label3: while (true) {
        if (!(subLast_754976389 <= subInt(last_754976388, skip_754976390))) break Label3;
          F.line = 1919;
          var i_754976391 = subLast_754976389;
          Label4: {
            F.line = 1920;
              Label5: while (true) {
              if (!(s_754976383[chckIndx(addInt(skip_754976390, i_754976391), 0, (s_754976383).length - 1)] == sub_754976384[chckIndx(i_754976391, 0, (sub_754976384).length - 1)])) break Label5;
                if ((i_754976391 == 0)) {
                F.line = 1922;
                result_754976387 = skip_754976390;
                break BeforeRet;
                }
                
                F.line = 1923;
                i_754976391 = subInt(i_754976391, 1);
              }
          };
          F.line = 1924;
          skip_754976390 = addInt(skip_754976390, a_754976382[chckIndx(s_754976383[chckIndx(addInt(skip_754976390, subLast_754976389), 0, (s_754976383).length - 1)], 0, (a_754976382).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_754976387;

}

function fill_754976342(a_754976344, value_754976345) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "algorithm.nim";
    var xHEX60gensym172_754976351 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym172_754976351 <= (a_754976344).length - 1)) break Label2;
          F.line = 98;
          a_754976344[chckIndx(xHEX60gensym172_754976351, 0, (a_754976344).length - 1)] = value_754976345;
          F.line = 75;
          xHEX60gensym172_754976351 = addInt(xHEX60gensym172_754976351, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_754976339, sub_754976340) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1878;
    F.filename = "strutils.nim";
    var m_754976341 = (sub_754976340).length;
    F.line = 1879;
    fill_754976342(a_754976339, m_754976341);
    Label1: {
      F.line = 1881;
      var i_754976361 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520094405 = 0;
      F.line = 1881;
      F.filename = "strutils.nim";
      colontmp__520094405 = subInt(m_754976341, 1);
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094406 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094406 < colontmp__520094405)) break Label3;
            F.line = 1881;
            F.filename = "strutils.nim";
            i_754976361 = i_520094406;
            F.line = 1881;
            a_754976339[chckIndx(sub_754976340[chckIndx(i_754976361, 0, (sub_754976340).length - 1)], 0, (a_754976339).length - 1)] = subInt(subInt(m_754976341, 1), i_754976361);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094406 = addInt(i_520094406, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_754976379) {
  var result_754976380 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1891;
    F.filename = "strutils.nim";
    nsuInitSkipTable(result_754976380[0], sub_754976379);
  framePtr = F.prev;

  return result_754976380[0];

}

function nsuFindStr(s_754976441, sub_754976442, start_754976443, last_754976444) {
  var result_754976445 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((subInt((s_754976441).length, start_754976443) < (sub_754976442).length)) {
    F.line = 2003;
    F.filename = "strutils.nim";
    result_754976445 = (-1);
    break BeforeRet;
    }
    
    if (((sub_754976442).length == 1)) {
    F.line = 2004;
    result_754976445 = nsuFindChar(s_754976441, sub_754976442[chckIndx(0, 0, (sub_754976442).length - 1)], start_754976443, last_754976444);
    break BeforeRet;
    }
    
    F.line = 2007;
    result_754976445 = nsuFindStrA(nsuInitNewSkipTable(sub_754976442), s_754976441, sub_754976442, start_754976443, last_754976444);
  };
  framePtr = F.prev;

  return result_754976445;

}

function contains_754976583(s_754976584, sub_754976585) {
  var result_754976586 = false;

  var F = {procname: "strutils.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 2161;
    F.filename = "strutils.nim";
    result_754976586 = (0 <= nsuFindStr(s_754976584, sub_754976585, 0, (-1)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_754976586;

}

function urex_1325400161(pattern_1325400163) {
  var result_1325400164 = {Field0: null, Field1: null};

  var F = {procname: "urex.urex", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 227;
    F.filename = "strslice.nim";
    var flatPattern_1325400165 = toJSStr(pattern_1325400163).replace(PCREFlag_1291845937, "").replace(comment_1291845938, "").replace(whitespace_1291845939, "").replace(slashU_1291845940, "\\u{$1}");
    F.line = 231;
    var colontmp__520094411 = new RegExp(flatPattern_1325400165, "uy");
    F.line = 232;
    var colontmp__520094412 = new RegExp(flatPattern_1325400165, "ug");
    F.line = 231;
    result_1325400164 = nimCopy(result_1325400164, {Field0: colontmp__520094411, Field1: colontmp__520094412}, NTI1291845873);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325400164;

}

function mrx_1325400158(multiline_rx_str_1325400159) {
  var result_1325400160 = {Field0: [], Field1: {Field0: null, Field1: null}};

  var F = {procname: "parse.mrx", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 29;
    F.filename = "parse.nim";
    var colontmp__520094409 = nimCopy(null, multiline_rx_str_1325400159, NTI33554449);
    F.line = 29;
    var colontmp__520094410 = urex_1325400161(multiline_rx_str_1325400159);
    F.line = 29;
    result_1325400160 = nimCopy(result_1325400160, {Field0: nimCopy(null, colontmp__520094409, NTI33554449), Field1: nimCopy(null, colontmp__520094410, NTI1291845873)}, NTI1325400098);
  framePtr = F.prev;

  return result_1325400160;

}

function rx_1325400134(rx_str_1325400135) {
  var result_1325400136 = {Field0: [], Field1: {Field0: null, Field1: null}};

  var F = {procname: "parse.rx", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "parse.nim";
    var colontmp__520094413 = nimCopy(null, rx_str_1325400135, NTI33554449);
    F.line = 27;
    var colontmp__520094414 = ure_1325400104(rx_str_1325400135);
    F.line = 27;
    result_1325400136 = nimCopy(result_1325400136, {Field0: nimCopy(null, colontmp__520094413, NTI33554449), Field1: nimCopy(null, colontmp__520094414, NTI1291845873)}, NTI1325400098);
  framePtr = F.prev;

  return result_1325400136;

}

function grammar_1325401580(parser_1325401581) {
  var result_1325401582 = null;

  var F = {procname: "parse.grammar", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 405;
    F.filename = "parse.nim";
    if (!(!((parser_1325401581.grammarVar == GrammarPlaceholder_1325400546)))) {
    F.line = 405;
    failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(405, 3) `parser.grammarVar != GrammarPlaceholder` ") || []).concat(HEX24_1325401404(parser_1325401581) || []));
    }
    
    result_1325401582 = parser_1325401581.grammarVar;
  framePtr = F.prev;

  return result_1325401582;

}

function HEX5BHEX5D_1325402190(s_1325402192, i_1325402193) {
  var result_1325402194 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_1325402194 = s_1325402192[chckIndx(subInt((s_1325402192).length, i_1325402193), 0, (s_1325402192).length - 1)];
  framePtr = F.prev;

  return result_1325402194;

}

function pop_1325402215(s_1325402217, s_1325402217_Idx) {
  var result_1325402218 = {Field0: 0, Field1: null};

  var F = {procname: "pop.pop", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1696;
    F.filename = "system.nim";
    var L_1325402222 = subInt((s_1325402217[s_1325402217_Idx]).length, 1);
    F.line = 1701;
    result_1325402218 = nimCopy(result_1325402218, s_1325402217[s_1325402217_Idx][chckIndx(L_1325402222, 0, (s_1325402217[s_1325402217_Idx]).length - 1)], NTI1325400136);
    F.line = 1702;
    if (s_1325402217[s_1325402217_Idx].length < chckRange(L_1325402222, 0, 2147483647)) { for (var i = s_1325402217[s_1325402217_Idx].length ; i < chckRange(L_1325402222, 0, 2147483647) ; ++i) s_1325402217[s_1325402217_Idx].push({Field0: 0, Field1: null}); }
               else { s_1325402217[s_1325402217_Idx].length = chckRange(L_1325402222, 0, 2147483647); };
  framePtr = F.prev;

  return result_1325402218;

}

function rollback_1325402182(grammar_1325402183, location_1325402184) {
  var F = {procname: "parse.rollback", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 586;
    F.filename = "parse.nim";
    var rb_1325402185 = {Field0: 0, Field1: null};
    if (((0 < (grammar_1325402183.rollbackStack).length) && (location_1325402184 <= HEX5BHEX5D_1325402190(grammar_1325402183.rollbackStack, 1).Field0))) {
    F.line = 588;
    rb_1325402185 = nimCopy(rb_1325402185, pop_1325402215(grammar_1325402183, "rollbackStack"), NTI1325400136);
    F.line = 589;
    rb_1325402185.Field1();
    if ((0 < (grammar_1325402183.rollbackStack).length)) {
    F.line = 591;
    grammar_1325402183.rollbackLocation = HEX5BHEX5D_1325402190(grammar_1325402183.rollbackStack, 1).Field0;
    }
    else {
      F.line = 593;
      grammar_1325402183.rollbackLocation = (-2);
    }
    
    }
    
  framePtr = F.prev;

  
}

function hasJsBigInt_889192491() {
  var result_889192492 = false;

    result_889192492 = typeof BigInt != 'undefined'

  return result_889192492;

}

function hiXorLoJs_1224736853(a_1224736854, b_1224736855) {
  var result_1224736856 = 0n;

  var F = {procname: "hashes.hiXorLoJs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "hashes.nim";
    var prod_1224736857 = (a_1224736854 * b_1224736855);
    F.line = 141;
    var mask_1224736858 = BigInt("0xffffffffffffffff");
    F.line = 142;
    result_1224736856 = ((prod_1224736857 >> BigInt("64")) ^ (prod_1224736857 & mask_1224736858));
  framePtr = F.prev;

  return result_1224736856;

}

function hashWangYi1_1224736961(x_1224736963) {
  var result_1224736964 = 0;

  var F = {procname: "hashWangYi1.hashWangYi1", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    if (hasJsBigInt_889192491()) {
    F.line = 182;
    F.filename = "hashes.nim";
    F.line = 146;
    var P0HEX60gensym6_1224736983 = BigInt("0xa0761d6478bd642f");
    F.line = 147;
    var P1HEX60gensym6_1224736984 = BigInt("0xe7037ed1a0b428db");
    F.line = 148;
    var P58HEX60gensym6_1224736985 = BigInt("0xeb44accab455d16d");
    F.line = 149;
    var resHEX60gensym6_1224736986 = hiXorLoJs_1224736853(hiXorLoJs_1224736853(P0HEX60gensym6_1224736983, (BigInt(x_1224736963) ^ P1HEX60gensym6_1224736984)), P58HEX60gensym6_1224736985);
    result_1224736964 = Number((() => { const i = resHEX60gensym6_1224736986, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      F.line = 184;
      result_1224736964 = (Number(BigInt.asIntN(32, x_1224736963)) & Number(BigInt.asIntN(32, 4294967295n)));
    }
    
  framePtr = F.prev;

  return result_1224736964;

}

function hash_1224736953(x_1224736955) {
  var result_1224736956 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 214;
    F.filename = "hashes.nim";
    result_1224736956 = hashWangYi1_1224736961(BigInt.asUintN(64, BigInt(x_1224736955)));
  framePtr = F.prev;

  return result_1224736956;

}

function isFilled_1207959583(hcode_1207959584) {
  var result_1207959585 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1207959585 = !((hcode_1207959584 == 0));
  framePtr = F.prev;

  return result_1207959585;

}

function nextTry_1207959586(h_1207959587, maxHash_1207959588) {
  var result_1207959589 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_1207959589 = (addInt(h_1207959587, 1) & maxHash_1207959588);
  framePtr = F.prev;

  return result_1207959589;

}

function rawGet_1325402322(t_1325402325, key_1325402326, hc_1325402327, hc_1325402327_Idx) {
  var result_1325402328 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1325402327[hc_1325402327_Idx] = hash_1224736953(key_1325402326);
    if ((hc_1325402327[hc_1325402327_Idx] == 0)) {
    F.line = 61;
    hc_1325402327[hc_1325402327_Idx] = 314159265;
    }
    
    if (((t_1325402325.data).length == 0)) {
    F.line = 43;
    result_1325402328 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1325402393 = (hc_1325402327[hc_1325402327_Idx] & (t_1325402325.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1207959583(t_1325402325.data[chckIndx(h_1325402393, 0, (t_1325402325.data).length - 1)].Field0)) break Label2;
          if (((t_1325402325.data[chckIndx(h_1325402393, 0, (t_1325402325.data).length - 1)].Field0 == hc_1325402327[hc_1325402327_Idx]) && (t_1325402325.data[chckIndx(h_1325402393, 0, (t_1325402325.data).length - 1)].Field1 == key_1325402326))) {
          F.line = 51;
          result_1325402328 = h_1325402393;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1325402393 = nextTry_1207959586(h_1325402393, (t_1325402325.data).length - 1);
        }
    };
    F.line = 53;
    result_1325402328 = subInt((-1), h_1325402393);
  };
  framePtr = F.prev;

  return result_1325402328;

}

function hasKey_1325402315(t_1325402318, key_1325402319) {
  var result_1325402320 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1325402321 = [0];
    F.line = 373;
    result_1325402320 = (0 <= rawGet_1325402322(t_1325402318, key_1325402319, hc_1325402321, 0));
  framePtr = F.prev;

  return result_1325402320;

}

function contains_1325402309(t_1325402312, key_1325402313) {
  var result_1325402314 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 383;
    F.filename = "tables.nim";
    result_1325402314 = hasKey_1325402315(t_1325402312, key_1325402313);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325402314;

}

function raiseKeyError_1325402711(key_1325402713) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1325402713) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1325402640(t_1325402643, key_1325402644) {
  var result_1325402645 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_1325402646 = [0];
    F.line = 244;
    var indexHEX60gensym22_1325402653 = rawGet_1325402322(t_1325402643, key_1325402644, hcHEX60gensym22_1325402646, 0);
    if ((0 <= indexHEX60gensym22_1325402653)) {
    F.line = 245;
    result_1325402645 = t_1325402643.data[chckIndx(indexHEX60gensym22_1325402653, 0, (t_1325402643.data).length - 1)].Field2;
    }
    else {
      F.line = 247;
    raiseKeyError_1325402711(key_1325402644);
    }
    
  framePtr = F.prev;

  return result_1325402645;

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556446 = null;

    if (isNimException_33556443()) {
    result_33556446 = lastJSError;
    }
    

  return result_33556446;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function parseSaturatedNatural_771752378(s_771752379, b_771752380, b_771752380_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752381 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 500;
    F.filename = "parseutils.nim";
    var i_771752382 = 0;
    if (((i_771752382 < (s_771752379).length) && (s_771752379[chckIndx(i_771752382, 0, (s_771752379).length - 1)] == 43))) {
    F.line = 501;
    i_771752382 = addInt(i_771752382, 1);
    }
    
      if (!(i_771752382 < (s_771752379).length)) Temporary1 = false; else {        Temporary1 = (ConstSet8[s_771752379[chckIndx(i_771752382, 0, (s_771752379).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 503;
    b_771752380[b_771752380_Idx] = 0;
    Label2: {
      F.line = 504;
        Label3: while (true) {
          if (!(i_771752382 < (s_771752379).length)) Temporary4 = false; else {            Temporary4 = (ConstSet9[s_771752379[chckIndx(i_771752382, 0, (s_771752379).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 505;
          var c_771752411 = subInt(s_771752379[chckIndx(i_771752382, 0, (s_771752379).length - 1)], 48);
          if ((b_771752380[b_771752380_Idx] <= divInt(subInt(2147483647, c_771752411), 10))) {
          F.line = 507;
          b_771752380[b_771752380_Idx] = addInt(mulInt(b_771752380[b_771752380_Idx], 10), c_771752411);
          }
          else {
            F.line = 509;
            b_771752380[b_771752380_Idx] = 2147483647;
          }
          
          F.line = 510;
          i_771752382 = addInt(i_771752382, 1);
          Label5: {
            F.line = 511;
              Label6: while (true) {
              if (!((i_771752382 < (s_771752379).length) && (s_771752379[chckIndx(i_771752382, 0, (s_771752379).length - 1)] == 95))) break Label6;
                F.line = 511;
                i_771752382 = addInt(i_771752382, 1);
              }
          };
        }
    };
    F.line = 512;
    result_771752381 = i_771752382;
    }
    
  framePtr = F.prev;

  return result_771752381;

}

function parseSaturatedNatural_771752884(s_771752885, b_771752886, b_771752886_Idx, start_771752887) {
  var result_771752888 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1013;
    F.filename = "parseutils.nim";
    result_771752888 = parseSaturatedNatural_771752378((s_771752885.slice(start_771752887, (s_771752885).length - 1 + 1)), b_771752886, b_771752886_Idx);
  framePtr = F.prev;

  return result_771752888;

}

function parseStandardFormatSpecifier_1090519098(s_1090519099, start_1090519100, ignoreUnknownSuffix_1090519101) {
      var Temporary1;
      var Temporary2;

  var result_1090519102 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

  var F = {procname: "strformat.parseStandardFormatSpecifier", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 434;
    F.filename = "strformat.nim";
    result_1090519102.fill = 32;
    F.line = 435;
    result_1090519102.align = 0;
    F.line = 436;
    result_1090519102.sign = 45;
    F.line = 437;
    var i_1090519104 = start_1090519100;
    if (((addInt(i_1090519104, 1) < (s_1090519099).length) && (ConstSet4[s_1090519099[chckIndx(addInt(i_1090519104, 1), 0, (s_1090519099).length - 1)]] != undefined))) {
    F.line = 439;
    result_1090519102.fill = s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)];
    F.line = 440;
    result_1090519102.align = s_1090519099[chckIndx(addInt(i_1090519104, 1), 0, (s_1090519099).length - 1)];
    F.line = 441;
    i_1090519104 = addInt(i_1090519104, 2);
    }
    else {
    if (((i_1090519104 < (s_1090519099).length) && (ConstSet5[s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)]] != undefined))) {
    F.line = 443;
    result_1090519102.align = s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)];
    F.line = 444;
    i_1090519104 = addInt(i_1090519104, 1);
    }
    }
    if (((i_1090519104 < (s_1090519099).length) && (ConstSet6[s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)]] != undefined))) {
    F.line = 447;
    result_1090519102.sign = s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)];
    F.line = 448;
    i_1090519104 = addInt(i_1090519104, 1);
    }
    
    if (((i_1090519104 < (s_1090519099).length) && (s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)] == 35))) {
    F.line = 451;
    result_1090519102.alternateForm = true;
    F.line = 452;
    i_1090519104 = addInt(i_1090519104, 1);
    }
    
      if (!((addInt(i_1090519104, 1) < (s_1090519099).length) && (s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet7[s_1090519099[chckIndx(addInt(i_1090519104, 1), 0, (s_1090519099).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 455;
    result_1090519102.padWithZero = true;
    F.line = 456;
    i_1090519104 = addInt(i_1090519104, 1);
    }
    
    F.line = 458;
    var parsedLength_1090519146 = parseSaturatedNatural_771752884(s_1090519099, result_1090519102, "minimumWidth", i_1090519104);
    F.line = 459;
    i_1090519104 = addInt(i_1090519104, parsedLength_1090519146);
    if (((i_1090519104 < (s_1090519099).length) && (s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)] == 46))) {
    F.line = 461;
    i_1090519104 = addInt(i_1090519104, 1);
    F.line = 462;
    var parsedLengthB_1090519157 = parseSaturatedNatural_771752884(s_1090519099, result_1090519102, "precision", i_1090519104);
    F.line = 463;
    i_1090519104 = addInt(i_1090519104, parsedLengthB_1090519157);
    }
    else {
      F.line = 465;
      result_1090519102.precision = (-1);
    }
    
      if (!(i_1090519104 < (s_1090519099).length)) Temporary2 = false; else {        Temporary2 = (ConstSet10[s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)]] != undefined);      }    if (Temporary2) {
    F.line = 468;
    result_1090519102.typ = s_1090519099[chckIndx(i_1090519104, 0, (s_1090519099).length - 1)];
    F.line = 469;
    i_1090519104 = addInt(i_1090519104, 1);
    }
    
    F.line = 470;
    result_1090519102.endPosition = i_1090519104;
    if ((!((i_1090519104 == (s_1090519099).length)) && !(ignoreUnknownSuffix_1090519101))) {
    F.line = 472;
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_754976027(s_1090519099, HEX2EHEX2E_939524200(i_1090519104, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_1090519102;

}

function mkDigit_1090519045(v_1090519046, typ_1090519047) {
      var Temporary1;

  var result_1090519048 = [];

  var F = {procname: "strformat.mkDigit", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if (!((v_1090519046 < 26))) {
    F.line = 324;
    F.filename = "strformat.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim(324, 9) `v < 26` "));
    }
    
    if ((v_1090519046 < 10)) {
    F.line = 326;
    result_1090519048 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1090519046), 0, 255)), NTI33554449);
    }
    else {
      F.line = 328;
      if ((typ_1090519047 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1090519048 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1090519046), 10), 0, 255)), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_1090519048;

}

function nsuRepeatChar(c_754975841, count_754975842) {
  var result_754975843 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "strutils.nim";
    result_754975843 = nimCopy(null, mnewString(count_754975842), NTI33554449);
    Label1: {
      F.line = 1329;
      var i_754975848 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094437 = 0;
      F.line = 1329;
      F.filename = "strutils.nim";
      colontmp__520094437 = subInt(count_754975842, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094438 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094438 <= colontmp__520094437)) break Label3;
            F.line = 1329;
            F.filename = "strutils.nim";
            i_754975848 = res_520094438;
            F.line = 1329;
            result_754975843[chckIndx(i_754975848, 0, (result_754975843).length - 1)] = c_754975841;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094438 = addInt(res_520094438, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754975843;

}

function formatInt_1073741929(n_1073741931, radix_1073741932, spec_1073741933) {
    var Temporary1;

  var result_1073741934 = [];

  var F = {procname: "formatInt.formatInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strformat.nim";
    var n_1073741937 = BigInt(n_1073741931);
    F.line = 371;
    var negative_1073741938 = (n_1073741937 < 0n);
    F.line = 372;
    if (negative_1073741938) {
    Temporary1 = BigInt.asUintN(64, (BigInt.asUintN(64, ~(n_1073741937)) + 1n));
    }
    else {
    Temporary1 = BigInt.asUintN(64, n_1073741937);
    }
    
    var v_1073741939 = Temporary1;
    F.line = 379;
    var xx_1073741940 = [];
    if (spec_1073741933.alternateForm) {
    F.line = 381;
    switch (spec_1073741933.typ) {
    case 88:
      F.line = 382;
      xx_1073741940 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      F.line = 383;
      xx_1073741940 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      F.line = 384;
      xx_1073741940 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      F.line = 385;
      xx_1073741940 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1073741939 == 0n)) {
    F.line = 389;
    result_1073741934 = nimCopy(null, [48], NTI33554449);
    }
    else {
      F.line = 391;
      result_1073741934 = nimCopy(null, [], NTI33554449);
      Label2: {
        F.line = 392;
          Label3: while (true) {
          if (!(0n < v_1073741939)) break Label3;
            F.line = 393;
            var d_1073741941 = (v_1073741939 % BigInt.asUintN(64, BigInt(radix_1073741932)));
            F.line = 394;
            v_1073741939 = BigInt.asUintN(64, (v_1073741939 / BigInt.asUintN(64, BigInt(radix_1073741932))));
            F.line = 395;
            result_1073741934.push.apply(result_1073741934, mkDigit_1090519045(chckRange(Number(d_1073741941), (-2147483648), 2147483647), spec_1073741933.typ));;
          }
      };
      Label4: {
        F.line = 396;
        var idx_1073741946 = 0;
        F.line = 117;
        F.filename = "iterators_1.nim";
        var colontmp__520094429 = 0;
        F.line = 396;
        F.filename = "strformat.nim";
        colontmp__520094429 = divInt((result_1073741934).length, 2);
        F.line = 119;
        F.filename = "iterators_1.nim";
        var i_520094430 = 0;
        Label5: {
          F.line = 120;
            Label6: while (true) {
            if (!(i_520094430 < colontmp__520094429)) break Label6;
              F.line = 396;
              F.filename = "strformat.nim";
              idx_1073741946 = i_520094430;
              F.line = 396;
              var Temporary7 = result_1073741934[chckIndx(idx_1073741946, 0, (result_1073741934).length - 1)]; result_1073741934[chckIndx(idx_1073741946, 0, (result_1073741934).length - 1)] = result_1073741934[chckIndx(subInt(subInt((result_1073741934).length, idx_1073741946), 1), 0, (result_1073741934).length - 1)]; result_1073741934[chckIndx(subInt(subInt((result_1073741934).length, idx_1073741946), 1), 0, (result_1073741934).length - 1)] = Temporary7;              F.line = 122;
              F.filename = "iterators_1.nim";
              i_520094430 = addInt(i_520094430, 1);
            }
        };
      };
    }
    
    if (spec_1073741933.padWithZero) {
    F.line = 399;
    F.filename = "strformat.nim";
    var sign_1073741951 = (negative_1073741938 || !((spec_1073741933.sign == 45)));
    F.line = 400;
    var toFill_1073741955 = subInt(subInt(subInt(spec_1073741933.minimumWidth, (result_1073741934).length), (xx_1073741940).length), (sign_1073741951 ? 1 : 0));
    if ((0 < toFill_1073741955)) {
    F.line = 402;
    result_1073741934 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1073741955, 0, 2147483647)) || []).concat(result_1073741934 || []), NTI33554449);
    }
    
    }
    
    if (negative_1073741938) {
    F.line = 405;
    result_1073741934 = nimCopy(null, ([45] || []).concat(xx_1073741940 || [],result_1073741934 || []), NTI33554449);
    }
    else {
    if (!((spec_1073741933.sign == 45))) {
    F.line = 407;
    result_1073741934 = nimCopy(null, [spec_1073741933.sign].concat(xx_1073741940 || [],result_1073741934 || []), NTI33554449);
    }
    else {
      F.line = 409;
      result_1073741934 = nimCopy(null, (xx_1073741940 || []).concat(result_1073741934 || []), NTI33554449);
    }
    }
    if ((spec_1073741933.align == 60)) {
    Label8: {
      F.line = 412;
      var i_1073741960 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520094433 = 0;
      F.line = 412;
      F.filename = "strformat.nim";
      colontmp__520094433 = (result_1073741934).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094434 = colontmp__520094433;
      Label9: {
        F.line = 120;
          Label10: while (true) {
          if (!(i_520094434 < spec_1073741933.minimumWidth)) break Label10;
            F.line = 412;
            F.filename = "strformat.nim";
            i_1073741960 = i_520094434;
            F.line = 412;
            addChar(result_1073741934, spec_1073741933.fill);;
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094434 = addInt(i_520094434, 1);
          }
      };
    };
    }
    else {
      F.line = 415;
      F.filename = "strformat.nim";
      var toFill_1073741961 = subInt(spec_1073741933.minimumWidth, (result_1073741934).length);
      if ((spec_1073741933.align == 94)) {
      F.line = 417;
      var half_1073741962 = divInt(toFill_1073741961, 2);
      F.line = 418;
      result_1073741934 = nimCopy(null, (nsuRepeatChar(spec_1073741933.fill, chckRange(half_1073741962, 0, 2147483647)) || []).concat(result_1073741934 || [],nsuRepeatChar(spec_1073741933.fill, chckRange(subInt(toFill_1073741961, half_1073741962), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_1073741961)) {
        F.line = 421;
        result_1073741934 = nimCopy(null, (nsuRepeatChar(spec_1073741933.fill, chckRange(toFill_1073741961, 0, 2147483647)) || []).concat(result_1073741934 || []), NTI33554449);
        }
        
      }
      
    }
    
  framePtr = F.prev;

  return result_1073741934;

}

function formatValue_1073741921(result_1073741923, result_1073741923_Idx, value_1073741924, specifier_1073741925) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((specifier_1073741925).length == 0)) {
    F.line = 481;
    F.filename = "strformat.nim";
    result_1073741923[result_1073741923_Idx].push.apply(result_1073741923[result_1073741923_Idx], HEX24_369098760(((value_1073741924) | 0)));;
    F.line = 482;
    break BeforeRet;
    }
    
    F.line = 483;
    var spec_1073741926 = parseStandardFormatSpecifier_1090519098(specifier_1073741925, 0, false);
    F.line = 484;
    var radix_1073741927 = 10;
    F.line = 485;
    switch (spec_1073741926.typ) {
    case 120:
    case 88:
      F.line = 486;
      radix_1073741927 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      F.line = 488;
      radix_1073741927 = 2;
      break;
    case 111:
      F.line = 489;
      radix_1073741927 = 8;
      break;
    default: 
      F.line = 491;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1073741926.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    F.line = 494;
    result_1073741923[result_1073741923_Idx].push.apply(result_1073741923[result_1073741923_Idx], formatInt_1073741929(value_1073741924, radix_1073741927, spec_1073741926));;
  };
  framePtr = F.prev;

  
}

function nucruneLen(s_973078556) {
  var result_973078557 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_973078557 = 0;
    F.line = 53;
    var i_973078558 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_973078558 < (s_973078556).length)) break Label2;
          if ((s_973078556[chckIndx(i_973078558, 0, (s_973078556).length - 1)] <= 127)) {
          F.line = 55;
          i_973078558 = addInt(i_973078558, 1);
          }
          else {
          if (((s_973078556[chckIndx(i_973078558, 0, (s_973078556).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_973078558 = addInt(i_973078558, 2);
          }
          else {
          if (((s_973078556[chckIndx(i_973078558, 0, (s_973078556).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_973078558 = addInt(i_973078558, 3);
          }
          else {
          if (((s_973078556[chckIndx(i_973078558, 0, (s_973078556).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_973078558 = addInt(i_973078558, 4);
          }
          else {
          if (((s_973078556[chckIndx(i_973078558, 0, (s_973078556).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_973078558 = addInt(i_973078558, 5);
          }
          else {
          if (((s_973078556[chckIndx(i_973078558, 0, (s_973078556).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_973078558 = addInt(i_973078558, 6);
          }
          else {
            F.line = 61;
          i_973078558 = addInt(i_973078558, 1);
          }
          }}}}}
          F.line = 62;
          result_973078557 = addInt(result_973078557, 1);
        }
    };
  framePtr = F.prev;

  return result_973078557;

}

function runeLen_973085717(s_973085718) {
  var result_973085719 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1153;
    F.filename = "unicode.nim";
    result_973085719 = nucruneLen((s_973085718.slice(0, (s_973085718).length - 1 + 1)));
  framePtr = F.prev;

  return result_973085719;

}

function runeLenAt_973078622(s_973078623, i_973078624) {
  var result_973078625 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_973078623[chckIndx(i_973078624, 0, (s_973078623).length - 1)] <= 127)) {
    F.line = 74;
    F.filename = "unicode.nim";
    result_973078625 = 1;
    }
    else {
    if (((s_973078623[chckIndx(i_973078624, 0, (s_973078623).length - 1)] >>> 5) == 6)) {
    F.line = 75;
    result_973078625 = 2;
    }
    else {
    if (((s_973078623[chckIndx(i_973078624, 0, (s_973078623).length - 1)] >>> 4) == 14)) {
    F.line = 76;
    result_973078625 = 3;
    }
    else {
    if (((s_973078623[chckIndx(i_973078624, 0, (s_973078623).length - 1)] >>> 3) == 30)) {
    F.line = 77;
    result_973078625 = 4;
    }
    else {
    if (((s_973078623[chckIndx(i_973078624, 0, (s_973078623).length - 1)] >>> 2) == 62)) {
    F.line = 78;
    result_973078625 = 5;
    }
    else {
    if (((s_973078623[chckIndx(i_973078624, 0, (s_973078623).length - 1)] >>> 1) == 126)) {
    F.line = 79;
    result_973078625 = 6;
    }
    else {
      F.line = 80;
      result_973078625 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_973078625;

}

function runeOffset_973079246(s_973079247, pos_973079248, start_973079249) {
  var result_973079250 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 331;
    F.filename = "unicode.nim";
    var i_973079251 = 0;
    F.line = 332;
    var o_973079252 = start_973079249;
    Label1: {
      F.line = 333;
        Label2: while (true) {
        if (!(i_973079251 < pos_973079248)) break Label2;
          F.line = 334;
          o_973079252 = addInt(o_973079252, chckRange(runeLenAt_973078622(s_973079247, o_973079252), 0, 2147483647));
          if (((s_973079247).length <= o_973079252)) {
          F.line = 336;
          result_973079250 = (-1);
          break BeforeRet;
          }
          
          F.line = 337;
          i_973079251 = addInt(i_973079251, 1);
        }
    };
    F.line = 338;
    result_973079250 = o_973079252;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_973079250;

}

function runeOffset_973085892(s_973085893, pos_973085894, start_973085895) {
  var result_973085896 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1196;
    F.filename = "unicode.nim";
    result_973085896 = runeOffset_973079246((s_973085893.slice(0, (s_973085893).length - 1 + 1)), pos_973085894, start_973085895);
  framePtr = F.prev;

  return result_973085896;

}

function validateUtf8_973078864(s_973078865) {
  var result_973078866 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_973078867 = 0;
    F.line = 185;
    var L_973078871 = (s_973078865).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_973078867 < L_973078871)) break Label2;
          if ((s_973078865[chckIndx(i_973078867, 0, (s_973078865).length - 1)] <= 127)) {
          F.line = 188;
          i_973078867 = addInt(i_973078867, 1);
          }
          else {
          if (((s_973078865[chckIndx(i_973078867, 0, (s_973078865).length - 1)] >>> 5) == 6)) {
          if ((s_973078865[chckIndx(i_973078867, 0, (s_973078865).length - 1)] < 194)) {
          F.line = 190;
          result_973078866 = i_973078867;
          break BeforeRet;
          }
          
          if (((addInt(i_973078867, 1) < L_973078871) && ((s_973078865[chckIndx(addInt(i_973078867, 1), 0, (s_973078865).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_973078867 = addInt(i_973078867, 2);
          }
          else {
            F.line = 192;
            result_973078866 = i_973078867;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_973078865[chckIndx(i_973078867, 0, (s_973078865).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_973078867, 2) < L_973078871) && ((s_973078865[chckIndx(addInt(i_973078867, 1), 0, (s_973078865).length - 1)] >>> 6) == 2)) && ((s_973078865[chckIndx(addInt(i_973078867, 2), 0, (s_973078865).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_973078867 = addInt(i_973078867, 3);
          }
          else {
            F.line = 196;
            result_973078866 = i_973078867;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_973078865[chckIndx(i_973078867, 0, (s_973078865).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_973078867, 3) < L_973078871) && ((s_973078865[chckIndx(addInt(i_973078867, 1), 0, (s_973078865).length - 1)] >>> 6) == 2)) && ((s_973078865[chckIndx(addInt(i_973078867, 2), 0, (s_973078865).length - 1)] >>> 6) == 2)) && ((s_973078865[chckIndx(addInt(i_973078867, 3), 0, (s_973078865).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_973078867 = addInt(i_973078867, 4);
          }
          else {
            F.line = 202;
            result_973078866 = i_973078867;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_973078866 = i_973078867;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_973078866 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_973078866;

}

function validateUtf8_973085889(s_973085890) {
  var result_973085891 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1186;
    F.filename = "unicode.nim";
    result_973085891 = validateUtf8_973078864((s_973085890.slice(0, (s_973085890).length - 1 + 1)));
  framePtr = F.prev;

  return result_973085891;

}

function alignString_1090519060(s_1090519061, minimumWidth_1090519062, align_1090519063, fill_1090519064) {
      var Temporary1;

  var result_1090519065 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_1090519062 == 0)) {
    F.line = 335;
    F.filename = "strformat.nim";
    result_1090519065 = nimCopy(null, s_1090519061, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_973085889(s_1090519061) == (-1))) {
      Temporary1 = runeLen_973085717(s_1090519061);
      }
      else {
      Temporary1 = (s_1090519061).length;
      }
      
      var sRuneLen_1090519066 = Temporary1;
      F.line = 338;
      var toFill_1090519067 = subInt(minimumWidth_1090519062, sRuneLen_1090519066);
      if ((toFill_1090519067 <= 0)) {
      F.line = 340;
      result_1090519065 = nimCopy(null, s_1090519061, NTI33554449);
      }
      else {
      if (((align_1090519063 == 60) || (align_1090519063 == 0))) {
      F.line = 342;
      result_1090519065 = nimCopy(null, (s_1090519061 || []).concat(nsuRepeatChar(fill_1090519064, chckRange(toFill_1090519067, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_1090519063 == 94)) {
      F.line = 344;
      var half_1090519068 = divInt(toFill_1090519067, 2);
      F.line = 345;
      result_1090519065 = nimCopy(null, (nsuRepeatChar(fill_1090519064, chckRange(half_1090519068, 0, 2147483647)) || []).concat(s_1090519061 || [],nsuRepeatChar(fill_1090519064, chckRange(subInt(toFill_1090519067, half_1090519068), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_1090519065 = nimCopy(null, (nsuRepeatChar(fill_1090519064, chckRange(toFill_1090519067, 0, 2147483647)) || []).concat(s_1090519061 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_1090519065;

}

function formatValue_1090519211(result_1090519212, result_1090519212_Idx, value_1090519213, specifier_1090519214) {
    var Temporary1;

  var F = {procname: "strformat.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 557;
    F.filename = "strformat.nim";
    var spec_1090519215 = parseStandardFormatSpecifier_1090519098(specifier_1090519214, 0, false);
    F.line = 558;
    var value_1090519216 = nimCopy(null, value_1090519213, NTI33554449);
    F.line = 559;
    switch (spec_1090519215.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 562;
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_1090519215.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1090519215.precision == (-1)))) {
    if ((spec_1090519215.precision < runeLen_973085717(value_1090519216))) {
    F.line = 567;
    if (value_1090519216.length < (Temporary1 = chckRange(runeOffset_973085892(value_1090519216, chckRange(spec_1090519215.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_1090519216.length; i < Temporary1; ++i) value_1090519216.push(0); }
         else {value_1090519216.length = Temporary1; };
    }
    
    }
    
    F.line = 568;
    result_1090519212[result_1090519212_Idx].push.apply(result_1090519212[result_1090519212_Idx], alignString_1090519060(value_1090519216, spec_1090519215.minimumWidth, spec_1090519215.align, spec_1090519215.fill));;
  framePtr = F.prev;

  
}

function addInt_301990080(result_301990081, result_301990081_Idx, x_301990082) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 89;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990081, result_301990081_Idx, ((x_301990082) + ""));
  framePtr = F.prev;

  
}

function HEX24_369098766(x_369098767) {
  var result_369098768 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 26;
    F.filename = "dollars.nim";
    addInt_301990080(result_369098768, 0, x_369098767);
  framePtr = F.prev;

  return result_369098768[0];

}

function formatInt_1073741992(n_1073741994, radix_1073741995, spec_1073741996) {
  var result_1073741997 = [];

  var F = {procname: "formatInt.formatInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 367;
    F.filename = "strformat.nim";
    var v_1073742000 = BigInt(n_1073741994);
    F.line = 368;
    var negative_1073742001 = false;
    F.line = 379;
    var xx_1073742002 = [];
    if (spec_1073741996.alternateForm) {
    F.line = 381;
    switch (spec_1073741996.typ) {
    case 88:
      F.line = 382;
      xx_1073742002 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      F.line = 383;
      xx_1073742002 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      F.line = 384;
      xx_1073742002 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      F.line = 385;
      xx_1073742002 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1073742000 == 0n)) {
    F.line = 389;
    result_1073741997 = nimCopy(null, [48], NTI33554449);
    }
    else {
      F.line = 391;
      result_1073741997 = nimCopy(null, [], NTI33554449);
      Label1: {
        F.line = 392;
          Label2: while (true) {
          if (!(0n < v_1073742000)) break Label2;
            F.line = 393;
            var d_1073742003 = (v_1073742000 % BigInt.asUintN(64, BigInt(radix_1073741995)));
            F.line = 394;
            v_1073742000 = BigInt.asUintN(64, (v_1073742000 / BigInt.asUintN(64, BigInt(radix_1073741995))));
            F.line = 395;
            result_1073741997.push.apply(result_1073741997, mkDigit_1090519045(chckRange(Number(d_1073742003), (-2147483648), 2147483647), spec_1073741996.typ));;
          }
      };
      Label3: {
        F.line = 396;
        var idx_1073742008 = 0;
        F.line = 117;
        F.filename = "iterators_1.nim";
        var colontmp__520094448 = 0;
        F.line = 396;
        F.filename = "strformat.nim";
        colontmp__520094448 = divInt((result_1073741997).length, 2);
        F.line = 119;
        F.filename = "iterators_1.nim";
        var i_520094449 = 0;
        Label4: {
          F.line = 120;
            Label5: while (true) {
            if (!(i_520094449 < colontmp__520094448)) break Label5;
              F.line = 396;
              F.filename = "strformat.nim";
              idx_1073742008 = i_520094449;
              F.line = 396;
              var Temporary6 = result_1073741997[chckIndx(idx_1073742008, 0, (result_1073741997).length - 1)]; result_1073741997[chckIndx(idx_1073742008, 0, (result_1073741997).length - 1)] = result_1073741997[chckIndx(subInt(subInt((result_1073741997).length, idx_1073742008), 1), 0, (result_1073741997).length - 1)]; result_1073741997[chckIndx(subInt(subInt((result_1073741997).length, idx_1073742008), 1), 0, (result_1073741997).length - 1)] = Temporary6;              F.line = 122;
              F.filename = "iterators_1.nim";
              i_520094449 = addInt(i_520094449, 1);
            }
        };
      };
    }
    
    if (spec_1073741996.padWithZero) {
    F.line = 399;
    F.filename = "strformat.nim";
    var sign_1073742013 = (negative_1073742001 || !((spec_1073741996.sign == 45)));
    F.line = 400;
    var toFill_1073742017 = subInt(subInt(subInt(spec_1073741996.minimumWidth, (result_1073741997).length), (xx_1073742002).length), (sign_1073742013 ? 1 : 0));
    if ((0 < toFill_1073742017)) {
    F.line = 402;
    result_1073741997 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1073742017, 0, 2147483647)) || []).concat(result_1073741997 || []), NTI33554449);
    }
    
    }
    
    if (negative_1073742001) {
    F.line = 405;
    result_1073741997 = nimCopy(null, ([45] || []).concat(xx_1073742002 || [],result_1073741997 || []), NTI33554449);
    }
    else {
    if (!((spec_1073741996.sign == 45))) {
    F.line = 407;
    result_1073741997 = nimCopy(null, [spec_1073741996.sign].concat(xx_1073742002 || [],result_1073741997 || []), NTI33554449);
    }
    else {
      F.line = 409;
      result_1073741997 = nimCopy(null, (xx_1073742002 || []).concat(result_1073741997 || []), NTI33554449);
    }
    }
    if ((spec_1073741996.align == 60)) {
    Label7: {
      F.line = 412;
      var i_1073742022 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520094452 = 0;
      F.line = 412;
      F.filename = "strformat.nim";
      colontmp__520094452 = (result_1073741997).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094453 = colontmp__520094452;
      Label8: {
        F.line = 120;
          Label9: while (true) {
          if (!(i_520094453 < spec_1073741996.minimumWidth)) break Label9;
            F.line = 412;
            F.filename = "strformat.nim";
            i_1073742022 = i_520094453;
            F.line = 412;
            addChar(result_1073741997, spec_1073741996.fill);;
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094453 = addInt(i_520094453, 1);
          }
      };
    };
    }
    else {
      F.line = 415;
      F.filename = "strformat.nim";
      var toFill_1073742023 = subInt(spec_1073741996.minimumWidth, (result_1073741997).length);
      if ((spec_1073741996.align == 94)) {
      F.line = 417;
      var half_1073742024 = divInt(toFill_1073742023, 2);
      F.line = 418;
      result_1073741997 = nimCopy(null, (nsuRepeatChar(spec_1073741996.fill, chckRange(half_1073742024, 0, 2147483647)) || []).concat(result_1073741997 || [],nsuRepeatChar(spec_1073741996.fill, chckRange(subInt(toFill_1073742023, half_1073742024), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_1073742023)) {
        F.line = 421;
        result_1073741997 = nimCopy(null, (nsuRepeatChar(spec_1073741996.fill, chckRange(toFill_1073742023, 0, 2147483647)) || []).concat(result_1073741997 || []), NTI33554449);
        }
        
      }
      
    }
    
  framePtr = F.prev;

  return result_1073741997;

}

function formatValue_1073741984(result_1073741986, result_1073741986_Idx, value_1073741987, specifier_1073741988) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((specifier_1073741988).length == 0)) {
    F.line = 481;
    F.filename = "strformat.nim";
    result_1073741986[result_1073741986_Idx].push.apply(result_1073741986[result_1073741986_Idx], HEX24_369098766(BigInt(value_1073741987)));;
    F.line = 482;
    break BeforeRet;
    }
    
    F.line = 483;
    var spec_1073741989 = parseStandardFormatSpecifier_1090519098(specifier_1073741988, 0, false);
    F.line = 484;
    var radix_1073741990 = 10;
    F.line = 485;
    switch (spec_1073741989.typ) {
    case 120:
    case 88:
      F.line = 486;
      radix_1073741990 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      F.line = 488;
      radix_1073741990 = 2;
      break;
    case 111:
      F.line = 489;
      radix_1073741990 = 8;
      break;
    default: 
      F.line = 491;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1073741989.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    F.line = 494;
    result_1073741986[result_1073741986_Idx].push.apply(result_1073741986[result_1073741986_Idx], formatInt_1073741992(value_1073741987, radix_1073741990, spec_1073741989));;
  };
  framePtr = F.prev;

  
}

function HEX24_1073741903(error_1073741904) {
    var Temporary1;

  var result_1073741905 = [];

  var F = {procname: "error.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
  framePtr = F;
    F.line = 61;
    F.filename = "error.nim";
    F.line = 61;
    var code_1073741906 = error_1073741904.code;
    if ((0 <= error_1073741904.line)) {
    Label2: {
      F.line = 63;
      var fmtRes_1073741915 = [mnewString(0)];
      F.line = 63;
      formatValue_1073741921(fmtRes_1073741915, 0, error_1073741904.line, []);
      F.line = 63;
      fmtRes_1073741915[0].push.apply(fmtRes_1073741915[0], [58]);;
      F.line = 63;
      formatValue_1073741921(fmtRes_1073741915, 0, error_1073741904.column, []);
      F.line = 63;
      fmtRes_1073741915[0].push.apply(fmtRes_1073741915[0], [58]);;
      F.line = 63;
      formatValue_1073741984(fmtRes_1073741915, 0, code_1073741906, []);
      F.line = 63;
      fmtRes_1073741915[0].push.apply(fmtRes_1073741915[0], [58]);;
      F.line = 63;
      formatValue_1090519211(fmtRes_1073741915, 0, error_1073741904.message, []);
    };
    Temporary1 = fmtRes_1073741915[0];
    }
    else {
    if ((0 <= error_1073741904.origPos)) {
    Label3: {
      F.line = 65;
      var fmtRes_1073742045 = [mnewString(0)];
      F.line = 65;
      formatValue_1073741921(fmtRes_1073742045, 0, error_1073741904.origPos, []);
      F.line = 65;
      fmtRes_1073742045[0].push.apply(fmtRes_1073742045[0], [58]);;
      F.line = 65;
      formatValue_1073741984(fmtRes_1073742045, 0, code_1073741906, []);
      F.line = 65;
      fmtRes_1073742045[0].push.apply(fmtRes_1073742045[0], [58]);;
      F.line = 65;
      formatValue_1090519211(fmtRes_1073742045, 0, error_1073741904.message, []);
    };
    Temporary1 = fmtRes_1073742045[0];
    }
    else {
      Label4: {
        F.line = 67;
        var fmtRes_1073742060 = [mnewString(0)];
        F.line = 67;
        fmtRes_1073742060[0].push.apply(fmtRes_1073742060[0], [63,58]);;
        F.line = 67;
        formatValue_1073741921(fmtRes_1073742060, 0, error_1073741904.pos, []);
        F.line = 67;
        fmtRes_1073742060[0].push.apply(fmtRes_1073742060[0], [58]);;
        F.line = 67;
        formatValue_1073741984(fmtRes_1073742060, 0, code_1073741906, []);
        F.line = 67;
        fmtRes_1073742060[0].push.apply(fmtRes_1073742060[0], [58]);;
        F.line = 67;
        formatValue_1090519211(fmtRes_1073742060, 0, error_1073741904.message, []);
      };
    Temporary1 = fmtRes_1073742060[0];
    }
    }
    result_1073741905 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1073741905;

}

function formatValue_1325401356(result_1325401358, result_1325401358_Idx, value_1325401359, specifier_1325401360) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_1090519211(result_1325401358, result_1325401358_Idx, HEX24_1073741903(value_1325401359), specifier_1325401360);
  framePtr = F.prev;

  
}

function formatValue_1325401361(result_1325401363, result_1325401363_Idx, value_1325401364, specifier_1325401365) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_1090519211(result_1325401363, result_1325401363_Idx, nimBoolToStr(value_1325401364), specifier_1325401365);
  framePtr = F.prev;

  
}

function HEX24_1325401338(pe_1325401339) {
  var result_1325401340 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 290;
    F.filename = "parse.nim";
    Label1: {
      F.line = 291;
      var fmtRes_1325401345 = [mnewString(0)];
      F.line = 291;
      fmtRes_1325401345[0].push.apply(fmtRes_1325401345[0], [80,97,114,115,105,110,103,69,120,99,101,112,116,105,111,110,40,111,114,105,103,105,110,58,32]);;
      F.line = 649;
      F.filename = "strformat.nim";
      add_33556373(fmtRes_1325401345, 0, pe_1325401339.name);
      F.line = 291;
      F.filename = "parse.nim";
      fmtRes_1325401345[0].push.apply(fmtRes_1325401345[0], [44,32,110,111,100,101,95,111,114,105,103,110,95,108,101,110,58,32]);;
      F.line = 291;
      formatValue_1073741921(fmtRes_1325401345, 0, pe_1325401339.node_orig_len, []);
      F.line = 291;
      fmtRes_1325401345[0].push.apply(fmtRes_1325401345[0], [32,108,111,99,97,116,105,111,110,58,32]);;
      F.line = 291;
      formatValue_1073741921(fmtRes_1325401345, 0, pe_1325401339.location, []);
      F.line = 291;
      fmtRes_1325401345[0].push.apply(fmtRes_1325401345[0], [44,32,101,114,114,111,114,58,32,34]);;
      F.line = 291;
      formatValue_1325401356(fmtRes_1325401345, 0, pe_1325401339.error, []);
      F.line = 291;
      fmtRes_1325401345[0].push.apply(fmtRes_1325401345[0], [34,44,32,102,105,114,115,116,95,116,104,114,111,119,58,32]);;
      F.line = 291;
      formatValue_1325401361(fmtRes_1325401345, 0, pe_1325401339.first_throw, []);
    };
    result_1325401340 = nimCopy(null, fmtRes_1325401345[0], NTI33554449);
  framePtr = F.prev;

  return result_1325401340;

}

function cut_1291845772(str_1291845773, start_1291845774, stop_1291845775) {
    var Temporary1;

  var result_1291845776 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "strslice.nim";
    if ((((stop_1291845775 < start_1291845774) || (stop_1291845775 < 0)) || (str_1291845773.Field2 < start_1291845774))) {
    Temporary1 = {Field0: [EmptyStringSlice_1291845691.Field0[0], EmptyStringSlice_1291845691.Field0[1]], Field1: 0, Field2: (-1)};
    }
    else {
    Temporary1 = {Field0: [str_1291845773.Field0[0], str_1291845773.Field0[1]], Field1: nimMax(start_1291845774, 0), Field2: nimMin(stop_1291845775, str_1291845773.Field2)};
    }
    
    result_1291845776 = nimCopy(result_1291845776, Temporary1, NTI1291845635);
  framePtr = F.prev;

  return result_1291845776;

}

function index_1291845768(str_1291845769, i_1291845770) {
  var result_1291845771 = 0;

  var F = {procname: "strslice.index", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "strslice.nim";
    result_1291845771 = addInt(str_1291845769.Field1, i_1291845770);
  framePtr = F.prev;

  return result_1291845771;

}

function cut_1291845777(str_1291845778, slc_1291845781) {
  var result_1291845782 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "strslice.cut", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 100;
    F.filename = "strslice.nim";
    result_1291845782 = nimCopy(result_1291845782, cut_1291845772(str_1291845778, index_1291845768(str_1291845778, slc_1291845781.a), index_1291845768(str_1291845778, slc_1291845781.b)), NTI1291845635);
  framePtr = F.prev;

  return result_1291845782;

}

function HEX2EHEX2E_1291845699(a_1291845702, b_1291845703) {
  var result_1291845706 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_1291845706 = nimCopy(result_1291845706, {a: a_1291845702, b: b_1291845703}, NTI1291845695);
  framePtr = F.prev;

  return result_1291845706;

}

function high_1291845758(str_1291845759) {
  var result_1291845760 = 0;

  var F = {procname: "strslice.high", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 82;
    F.filename = "strslice.nim";
    result_1291845760 = subInt(str_1291845759.Field2, str_1291845759.Field1);
  framePtr = F.prev;

  return result_1291845760;

}

function len_1291845761(str_1291845762) {
  var result_1291845763 = 0;

  var F = {procname: "strslice.len", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 86;
    F.filename = "strslice.nim";
    result_1291845763 = addInt(high_1291845758(str_1291845762), 1);
  framePtr = F.prev;

  return result_1291845763;

}

function HEX3DHEX3D_1325401654(x_1325401656, y_1325401657) {
  var result_1325401658 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((x_1325401656["Field0"] == y_1325401657["Field0"]))) {
    F.line = 1708;
    F.filename = "system.nim";
    result_1325401658 = false;
    break BeforeRet;
    }
    
    if (!((x_1325401656["Field1"] == y_1325401657["Field1"]))) {
    F.line = 1708;
    result_1325401658 = false;
    break BeforeRet;
    }
    
    F.line = 1709;
    result_1325401658 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401658;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}

function init_1073741848(error_1073741849, message_1073741850, pos_1073741851, code_1073741852, line_1073741853, column_1073741854, length_1073741855, related_1073741860, origPos_1073741861, origDoc_1073741862) {
  var result_1073741863 = null;

  var F = {procname: "error.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((0 <= pos_1073741851))) {
    F.line = 43;
    F.filename = "error.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/error.nim(43, 5) `pos >= 0` "));
    }
    
    F.line = 44;
    error_1073741849.message = nimCopy(null, message_1073741850, NTI33554449);
    F.line = 45;
    error_1073741849.pos = pos_1073741851;
    F.line = 46;
    error_1073741849.code = code_1073741852;
    F.line = 47;
    error_1073741849.line = line_1073741853;
    F.line = 48;
    error_1073741849.column = column_1073741854;
    F.line = 49;
    error_1073741849.length = length_1073741855;
    F.line = 50;
    error_1073741849.related = nimCopy(null, related_1073741860, NTI1073741842);
    F.line = 51;
    error_1073741849.origPos = origPos_1073741861;
    F.line = 52;
    error_1073741849.origDoc = nimCopy(null, origDoc_1073741862, NTI33554449);
    F.line = 53;
    result_1073741863 = error_1073741849;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1073741863;

}

function new_1325401735() {
  var result_1325401738 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325401740 = null;
    F.line = 839;
    r_1325401740 = ({message: [], pos: 0, code: 0, line: 0, column: 0, length: 0, related: [], origPos: 0, origDoc: []});
    F.line = 840;
    result_1325401738 = r_1325401740;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401738;

}

function str_1291845749(str_1291845750) {
  var result_1291845751 = null;
  var result_1291845751_Idx = 0;

  var F = {procname: "strslice.str", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "strslice.nim";
    result_1291845751 = str_1291845750.Field0[0]; result_1291845751_Idx = str_1291845750.Field0[1];
  framePtr = F.prev;

  return [result_1291845751, result_1291845751_Idx];

}

function find_1291845954(slice_1291845955, pattern_1291845956, start_1291845957, size_1291845958) {
    var Temporary1;

  var result_1291845961 = {Field0: 0, Field1: 0};

  var F = {procname: "strslice.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((0 <= start_1291845957) && (start_1291845957 <= addInt(subInt(slice_1291845955.Field2, slice_1291845955.Field1), 1))))) {
    F.line = 238;
    F.filename = "strslice.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim(238, 5) `start >= 0 and start <= slice.stop - slice.start + 1` "));
    }
    
    F.line = 239;
    pattern_1291845956.Field1.lastIndex = addInt(start_1291845957, slice_1291845955.Field1);
    F.line = 240;
    var s_1291845967 = toJSStr((Temporary1 = str_1291845749(slice_1291845955), Temporary1)[0][Temporary1[1]]);
    F.line = 241;
    var m_1291845968 = (pattern_1291845956.Field1.exec(s_1291845967) || []);
    if ((0 < (m_1291845968).length)) {
    F.line = 243;
    var l_1291845973 = (((cstrToNimstr(m_1291845968[chckIndx(0, 0, (m_1291845968).length - 1)])).length) | 0);
    F.line = 244;
    var a_1291845974 = subInt(subInt(pattern_1291845956.Field1.lastIndex, slice_1291845955.Field1), ((((m_1291845968[chckIndx(0, 0, (m_1291845968).length - 1)]) == null ? 0 : (m_1291845968[chckIndx(0, 0, (m_1291845968).length - 1)]).length)) | 0));
    if (((size_1291845958 < 0) || (a_1291845974 <= addInt(start_1291845957, size_1291845958)))) {
    F.line = 246;
    var colontmp__520094469 = a_1291845974;
    F.line = 246;
    var colontmp__520094470 = subInt(addInt(a_1291845974, l_1291845973), 1);
    F.line = 246;
    result_1291845961 = nimCopy(result_1291845961, {Field0: colontmp__520094469, Field1: colontmp__520094470}, NTI1291845893);
    break BeforeRet;
    }
    
    }
    
    F.line = 247;
    var colontmp__520094471 = (-1);
    F.line = 247;
    var colontmp__520094472 = (-2);
    F.line = 247;
    result_1291845961 = nimCopy(result_1291845961, {Field0: colontmp__520094471, Field1: colontmp__520094472}, NTI1291845893);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845961;

}

function toStringSlice_1124074237(str_1124074239) {
  var result_1124074240 = {Field0: [null, 0], Field1: 0, Field2: 0};

  var F = {procname: "toStringSlice.toStringSlice", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 66;
    F.filename = "strslice.nim";
    result_1124074240 = nimCopy(result_1124074240, str_1124074239, NTI1291845635);
  framePtr = F.prev;

  return result_1124074240;

}

function init_1325401795(node_1325401798, name_1325401799, data_1325401800, attributes_1325401801) {
  var result_1325401802 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 30;
    F.filename = "nodetree.nim";
    node_1325401798.nameRef[0] = [[]]; node_1325401798.nameRef[1] = 0;
    F.line = 31;
    node_1325401798.nameRef[0][node_1325401798.nameRef[1]] = nimCopy(null, name_1325401799, NTI33554449);
    F.line = 43;
    node_1325401798.textSlice = nimCopy(node_1325401798.textSlice, toStringSlice_1124074237(data_1325401800), NTI1291845635);
    F.line = 44;
    node_1325401798.attributesRef = attributes_1325401801;
    F.line = 45;
    node_1325401798.sourcePos = (-1);
    F.line = 46;
    result_1325401802 = node_1325401798;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401802;

}

function reentry_point_1325401640(document_1325401641, location_1325401642, rules_1325401643, commentRe_1325401644, searchWindowSize_1325401645) {
    var Temporary1;
    var Temporary2;
              var Temporary6;
              document_1325401641 = nimCopy(null, document_1325401641, NTI1291845635);
              commentRe_1325401644 = nimCopy(null, commentRe_1325401644, NTI1291845873);

function nextComment_1325401673() {
  var result_1325401676 = {Field0: 0, Field1: 0};

  var F = {procname: "reentry_point.nextComment", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((commentPointer_1325401672 < upperLimit_1325401649)) {
    F.line = 456;
    F.filename = "parse.nim";
    var tmpTuple_1325401677 = find_1291845954(document_1325401641, commentRe_1325401644, commentPointer_1325401672, (-1));
    F.line = 456;
    var a_1325401678 = tmpTuple_1325401677["Field0"];
    F.line = 456;
    var b_1325401679 = tmpTuple_1325401677["Field1"];
    if ((0 <= a_1325401678)) {
    F.line = 458;
    commentPointer_1325401672 = addInt(b_1325401679, 1);
    F.line = 459;
    var colontmp__520094456 = a_1325401678;
    F.line = 459;
    var colontmp__520094457 = addInt(b_1325401679, 1);
    F.line = 459;
    result_1325401676 = nimCopy(result_1325401676, {Field0: colontmp__520094456, Field1: colontmp__520094457}, NTI1325401030);
    break BeforeRet;
    }
    else {
      F.line = 461;
      commentPointer_1325401672 = upperLimit_1325401649;
    }
    
    }
    
    F.line = 462;
    var colontmp__520094458 = (-1);
    F.line = 462;
    var colontmp__520094459 = (-2);
    F.line = 462;
    result_1325401676 = nimCopy(result_1325401676, {Field0: colontmp__520094458, Field1: colontmp__520094459}, NTI1325401030);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401676;

}
              
function entry_point_1325401680(m_1325401681) {
                  m_1325401681 = nimCopy(null, m_1325401681, NTI1325400126);
                  
function searchFunc_1325401683(start_1325401684) {
                      var Temporary1;
                        var Temporary2;
                        var Temporary3;
                        var Temporary4;
                        var Temporary5;
                        var Temporary6;

                    var result_1325401687 = {Field0: 0, Field1: 0};

                    var F = {procname: "entry_point.searchFunc", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
                    framePtr = F;
                      F.line = 466;
                      F.filename = "parse.nim";
                      F.line = 466;
                      switch (m_1325401681.kind) {
                      case 0:
                        F.line = 468;
                        var Temporary2 = m_1325401681;
                        if (ConstSet12[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rxInfo\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1325400124)); }
                        var tmpTuple_1325401688 = find_1291845954(document_1325401641, Temporary2.rxInfo.Field1, start_1325401684, searchWindow_1325401652);
                        F.line = 468;
                        var a_1325401689 = tmpTuple_1325401688["Field0"];
                        F.line = 468;
                        var b_1325401690 = tmpTuple_1325401688["Field1"];
                        Temporary1 = {Field0: a_1325401689, Field1: addInt(subInt(b_1325401690, a_1325401689), 1)};
                        break;
                      case 1:
                        var Temporary4 = m_1325401681;
                        if (ConstSet13[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1325400124)); }
                        var Temporary5 = m_1325401681;
                        if (ConstSet14[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1325400124)); }
                        Temporary1 = {Field0: ((nsuFindStr((Temporary3 = str_1291845749(document_1325401641), Temporary3)[0][Temporary3[1]], Temporary4.cmpStr, chckRange(start_1325401684, 0, 2147483647), ((addInt(start_1325401684, searchWindow_1325401652)) | 0))) | 0), Field1: (((Temporary5.cmpStr).length) | 0)};
                        break;
                      case 2:
                        var Temporary6 = m_1325401681;
                        if (ConstSet15[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'findProc\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1325400124)); }
                        Temporary1 = Temporary6.findProc(document_1325401641, start_1325401684, addInt(start_1325401684, searchWindow_1325401652));
                        break;
                      default: 
                        Temporary1 = {Field0: (-1), Field1: 0};
                        break;
                      }
                      result_1325401687 = nimCopy(result_1325401687, Temporary1, NTI1325401035);
                    framePtr = F.prev;

                    return result_1325401687;

                  }
                  var Temporary7;

                var result_1325401682 = 0;

                var F = {procname: "reentry_point.entry_point", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
                framePtr = F;
                BeforeRet: {
                  F.line = 479;
                  F.filename = "parse.nim";
                  var tmpTuple_1325401699 = nextComment_1325401673();
                  F.line = 479;
                  var a_1325401700 = tmpTuple_1325401699["Field0"];
                  F.line = 479;
                  var b_1325401701 = tmpTuple_1325401699["Field1"];
                  F.line = 480;
                  var tmpTuple_1325401702 = searchFunc_1325401683(location_1325401642);
                  F.line = 480;
                  var k_1325401703 = tmpTuple_1325401702["Field0"];
                  F.line = 480;
                  var length_1325401704 = tmpTuple_1325401702["Field1"];
                  Label1: {
                    F.line = 482;
                      Label2: while (true) {
                      if (!((a_1325401700 < b_1325401701) && (b_1325401701 <= addInt(k_1325401703, length_1325401704)))) break Label2;
                        F.line = 483;
                        var __1325401705 = nimCopy(null, nextComment_1325401673(), NTI1325401030);
                        F.line = 483;
                        a_1325401700 = __1325401705["Field0"];
                        F.line = 483;
                        b_1325401701 = __1325401705["Field1"];
                      }
                  };
                  Label3: {
                    F.line = 484;
                      Label4: while (true) {
                      if (!(((a_1325401700 < k_1325401703) && (k_1325401703 < b_1325401701)) || ((a_1325401700 < addInt(k_1325401703, length_1325401704)) && (addInt(k_1325401703, length_1325401704) < b_1325401701)))) break Label4;
                        F.line = 485;
                        var __1325401706 = nimCopy(null, searchFunc_1325401683(b_1325401701), NTI1325401035);
                        F.line = 485;
                        k_1325401703 = __1325401706["Field0"];
                        F.line = 485;
                        length_1325401704 = __1325401706["Field1"];
                        Label5: {
                          F.line = 486;
                            Label6: while (true) {
                            if (!((a_1325401700 < b_1325401701) && (b_1325401701 <= addInt(k_1325401703, length_1325401704)))) break Label6;
                              F.line = 487;
                              var __1325401707 = nimCopy(null, nextComment_1325401673(), NTI1325401030);
                              F.line = 487;
                              a_1325401700 = __1325401707["Field0"];
                              F.line = 487;
                              b_1325401701 = __1325401707["Field1"];
                            }
                        };
                      }
                  };
                  F.line = 488;
                  if ((0 <= k_1325401703)) {
                  Temporary7 = addInt(k_1325401703, length_1325401704);
                  }
                  else {
                  Temporary7 = upperLimit_1325401649;
                  }
                  
                  result_1325401682 = Temporary7;
                  break BeforeRet;
                };
                framePtr = F.prev;

                return result_1325401682;

              }

  var result_1325401648 = {Field0: null, Field1: 0};

  var F = {procname: "parse.reentry_point", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 444;
    F.filename = "parse.nim";
    var upperLimit_1325401649 = addInt(len_1291845761(document_1325401641), 1);
    F.line = 446;
    var pos_1325401650 = location_1325401642;
    F.line = 447;
    var closestMatch_1325401651 = upperLimit_1325401649;
    F.line = 448;
    if ((searchWindowSize_1325401645 < 0)) {
    Temporary1 = subInt(len_1291845761(document_1325401641), location_1325401642);
    }
    else {
    Temporary1 = searchWindowSize_1325401645;
    }
    
    var searchWindow_1325401652 = Temporary1;
    F.line = 450;
    var skipNode_1325401653 = null;
    F.line = 451;
    if (!(HEX3DHEX3D_1325401654(commentRe_1325401644, NeverMatchRegex_1325400128))) {
    Temporary2 = location_1325401642;
    }
    else {
    Temporary2 = upperLimit_1325401649;
    }
    
    var commentPointer_1325401672 = Temporary2;
    Label3: {
      F.line = 490;
      var rule_1325401730 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094464 = 0;
      F.line = 242;
      var L_520094465 = (rules_1325401643).length;
      Label4: {
        F.line = 243;
          Label5: while (true) {
          if (!(i_520094464 < L_520094465)) break Label5;
            F.line = 490;
            F.filename = "parse.nim";
            rule_1325401730 = rules_1325401643[chckIndx(i_520094464, 0, (rules_1325401643).length - 1)];
            F.line = 490;
            switch (rule_1325401730.kind) {
            case 3:
              F.line = 493;
              var Temporary6 = rule_1325401730;
              if (ConstSet11[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1325400124)); }
              var parser_1325401731 = Temporary6.consumeParser;
              F.line = 494;
              skipNode_1325401653 = null;
              F.line = 495;
++excHandler;
              try {
              F.line = 496;
              var __1325401732 = nimCopy(null, parser_1325401731.call(parser_1325401731, location_1325401642), NTI1325400121);
              F.line = 496;
              skipNode_1325401653 = __1325401732["Field0"];
              F.line = 496;
              pos_1325401650 = __1325401732["Field1"];
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              framePtr = F;
              if (lastJSError && (isObj(lastJSError.m_type, NTI1325400142))) {
              F.line = 498;
              var pe_1325401733 = getCurrentException();
              F.line = 498;
              var msg_1325401734 = ([69,114,114,111,114,32,119,104,105,108,101,32,115,101,97,114,99,104,105,110,103,32,114,101,45,101,110,116,114,121,32,112,111,105,110,116,32,119,105,116,104,32,112,97,114,115,101,114] || []).concat(HEX24_1325401404(parser_1325401731) || [],[58,32] || [],pe_1325401733.message || []);
              F.line = 499;
              var error_1325401768 = init_1073741848(new_1325401735(), msg_1325401734, location_1325401642, 1301, (-1), (-1), (-1), [], (-1), []);
              F.line = 500;
              grammar_1325401580(parser_1325401731).errors.push(error_1325401768);;
              F.line = 502;
              pos_1325401650 = upperLimit_1325401649;
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              framePtr = F;
              }
              if (!((skipNode_1325401653 == null))) {
              if ((pos_1325401650 < closestMatch_1325401651)) {
              F.line = 505;
              closestMatch_1325401651 = pos_1325401650;
              }
              
              }
              
              break;
            default: 
              F.line = 507;
              pos_1325401650 = entry_point_1325401680(rule_1325401730);
              if ((pos_1325401650 < closestMatch_1325401651)) {
              F.line = 509;
              skipNode_1325401653 = null;
              F.line = 510;
              closestMatch_1325401651 = pos_1325401650;
              }
              
              break;
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094464 = addInt(i_520094464, 1);
            if (!(((rules_1325401643).length == L_520094465))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((upperLimit_1325401649 <= closestMatch_1325401651)) {
    F.line = 512;
    F.filename = "parse.nim";
    closestMatch_1325401651 = (-1);
    }
    
    if ((skipNode_1325401653 == null)) {
    F.line = 514;
    var skipSlice_1325401791 = cut_1291845777(document_1325401641, HEX2EHEX2E_1291845699(location_1325401642, subInt(nimMax(closestMatch_1325401651, location_1325401642), 1)));
    F.line = 516;
    skipNode_1325401653 = init_1325401795(new_1124074179(), [95,95,90,79,77,66,73,69], skipSlice_1325401791, null);
    }
    
    F.line = 517;
    var colontmp__520094467 = skipNode_1325401653;
    F.line = 517;
    var colontmp__520094468 = subInt(closestMatch_1325401651, location_1325401642);
    F.line = 517;
    result_1325401648 = nimCopy(result_1325401648, {Field0: colontmp__520094467, Field1: colontmp__520094468}, NTI1325401020);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401648;

}

function HEX3DHEX3D_1325401940(str_1325401942, cmp_1325401943) {
  var result_1325401944 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((len_1291845761(str_1325401942) == len_1291845761(cmp_1325401943)))) {
    F.line = 147;
    F.filename = "strslice.nim";
    result_1325401944 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 149;
      var i_1325401945 = 0;
      F.line = 107;
      F.filename = "iterators_1.nim";
      var res_520094475 = cmp_1325401943.Field1;
      Label2: {
        F.line = 108;
          Label3: while (true) {
          if (!(res_520094475 <= cmp_1325401943.Field2)) break Label3;
            F.line = 149;
            F.filename = "strslice.nim";
            i_1325401945 = res_520094475;
            if (!((str_1325401942.Field0[0][str_1325401942.Field0[1]][chckIndx(subInt(addInt(i_1325401945, str_1325401942.Field1), cmp_1325401943.Field1), 0, (str_1325401942.Field0[0][str_1325401942.Field0[1]]).length - 1)] == cmp_1325401943.Field0[0][cmp_1325401943.Field0[1]][chckIndx(i_1325401945, 0, (cmp_1325401943.Field0[0][cmp_1325401943.Field0[1]]).length - 1)]))) {
            F.line = 150;
            result_1325401944 = false;
            break BeforeRet;
            }
            
            F.line = 110;
            F.filename = "iterators_1.nim";
            res_520094475 = addInt(res_520094475, 1);
          }
      };
    };
    F.line = 151;
    F.filename = "strslice.nim";
    result_1325401944 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401944;

}

function textHEX3D_1325401929(node_1325401931, text_1325401932) {
  var F = {procname: "text=.text=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    if ((0 < (node_1325401931.childrenSeq).length)) {
    F.line = 88;
    F.filename = "nodetree.nim";
    node_1325401931.childrenSeq = nimCopy(null, [], NTI1124073497);
    }
    
    if (HEX3DHEX3D_1325401940(node_1325401931.textSlice, EmptyStringSlice_1291845691)) {
    F.line = 90;
    node_1325401931.textSlice = nimCopy(node_1325401931.textSlice, toStringSlice_1124074237(text_1325401932), NTI1291845635);
    }
    else {
      F.line = 93;
      node_1325401931.textSlice = nimCopy(node_1325401931.textSlice, text_1325401932, NTI1291845635);
    }
    
  framePtr = F.prev;

  
}

function last_1291845755(str_1291845756) {
  var result_1291845757 = 0;

  var F = {procname: "strslice.last", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 79;
    F.filename = "strslice.nim";
    result_1291845757 = str_1291845756.Field2;
  framePtr = F.prev;

  return result_1291845757;

}

function first_1291845752(str_1291845753) {
  var result_1291845754 = 0;

  var F = {procname: "strslice.first", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "strslice.nim";
    result_1291845754 = str_1291845753.Field1;
  framePtr = F.prev;

  return result_1291845754;

}

function runeLenAt_973085720(s_973085721, i_973085722) {
  var result_973085723 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1161;
    F.filename = "unicode.nim";
    result_973085723 = runeLenAt_973078622((s_973085721.slice(0, (s_973085721).length - 1 + 1)), i_973085722);
  framePtr = F.prev;

  return result_973085723;

}

function runeLen_1124074031(node_1124074032) {
          var Temporary3;

  var result_1124074033 = 0;

  var F = {procname: "nodetree.runeLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 138;
    F.filename = "nodetree.nim";
    result_1124074033 = 0;
    if ((((node_1124074032.childrenSeq).length == 0) && (0 < len_1291845761(node_1124074032.textSlice)))) {
    F.line = 140;
    var last_1124074037 = last_1291845755(node_1124074032.textSlice);
    F.line = 141;
    var i_1124074038 = first_1291845752(node_1124074032.textSlice);
    Label1: {
      F.line = 142;
        Label2: while (true) {
        if (!(i_1124074038 <= last_1124074037)) break Label2;
          F.line = 143;
          i_1124074038 = addInt(i_1124074038, runeLenAt_973085720((Temporary3 = str_1291845749(node_1124074032.textSlice), Temporary3)[0][Temporary3[1]], chckRange(i_1124074038, 0, 2147483647)));
          F.line = 144;
          result_1124074033 = addInt(result_1124074033, 1);
        }
    };
    }
    else {
      Label4: {
        F.line = 146;
        var child_1124074052 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094483 = 0;
        F.line = 242;
        var L_520094484 = (node_1124074032.childrenSeq).length;
        Label5: {
          F.line = 243;
            Label6: while (true) {
            if (!(i_520094483 < L_520094484)) break Label6;
              F.line = 146;
              F.filename = "nodetree.nim";
              child_1124074052 = node_1124074032.childrenSeq[chckIndx(i_520094483, 0, (node_1124074032.childrenSeq).length - 1)];
              F.line = 146;
              result_1124074033 = addInt(result_1124074033, runeLen_1124074031(child_1124074052));
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094483 = addInt(i_520094483, 1);
              if (!(((node_1124074032.childrenSeq).length == L_520094484))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  framePtr = F.prev;

  return result_1124074033;

}

function assignSourcePos_1124074099(node_1124074100, sourcePos_1124074101) {
  var result_1124074102 = 0;

  var F = {procname: "nodetree.assignSourcePos", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((0 <= sourcePos_1124074101))) {
    F.line = 157;
    F.filename = "nodetree.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim(157, 3) `sourcePos >= 0` "));
    }
    
    if (((0 <= node_1124074100.sourcePos) && !((node_1124074100.sourcePos == sourcePos_1124074101)))) {
    F.line = 159;
    raiseException({message: [115,111,117,114,99,101,32,112,111,115,105,116,105,111,110,32,109,117,115,116,32,110,111,116,32,98,101,32,114,101,97,115,115,105,103,110,101,100,33], parent: null, m_type: NTI1124073480, name: null, trace: [], up: null}, "SourcePosReAssigmentDefect");
    }
    
    F.line = 160;
    node_1124074100.sourcePos = sourcePos_1124074101;
    F.line = 161;
    var pos_1124074109 = sourcePos_1124074101;
    if (((node_1124074100.childrenSeq).length == 0)) {
    F.line = 163;
    result_1124074102 = addInt(pos_1124074109, runeLen_1124074031(node_1124074100));
    break BeforeRet;
    }
    else {
      Label1: {
        F.line = 165;
        var child_1124074116 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094478 = 0;
        F.line = 242;
        var L_520094479 = (node_1124074100.childrenSeq).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_520094478 < L_520094479)) break Label3;
              F.line = 165;
              F.filename = "nodetree.nim";
              child_1124074116 = node_1124074100.childrenSeq[chckIndx(i_520094478, 0, (node_1124074100.childrenSeq).length - 1)];
              if (!((child_1124074116 == null))) {
              if ((child_1124074116.sourcePos < 0)) {
              F.line = 168;
              pos_1124074109 = addInt(pos_1124074109, assignSourcePos_1124074099(child_1124074116, pos_1124074109));
              }
              else {
                F.line = 170;
              pos_1124074109 = addInt(pos_1124074109, runeLen_1124074031(child_1124074116));
              }
              
              }
              
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094478 = addInt(i_520094478, 1);
              if (!(((node_1124074100.childrenSeq).length == L_520094479))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
    F.line = 171;
    F.filename = "nodetree.nim";
    result_1124074102 = pos_1124074109;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1124074102;

}

function init_1124074290(node_1124074293, name_1124074294, name_1124074294_Idx, data_1124074295, attributes_1124074296) {
  var result_1124074297 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_1124074293.nameRef[0] = name_1124074294; node_1124074293.nameRef[1] = name_1124074294_Idx;
    F.line = 33;
    node_1124074293.childrenSeq = nimCopy(null, data_1124074295, NTI1124073497);
    F.line = 34;
    node_1124074293.textSlice = nimCopy(node_1124074293.textSlice, EmptyStringSlice_1291845691, NTI1291845635);
    F.line = 44;
    node_1124074293.attributesRef = attributes_1124074296;
    F.line = 45;
    node_1124074293.sourcePos = (-1);
    F.line = 46;
    result_1124074297 = node_1124074293;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1124074297;

}

function HEX5BHEX5D_1325401993(s_1325401995, i_1325401996) {
  var result_1325401997 = null;
  var result_1325401997_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_1325401997 = s_1325401995; result_1325401997_Idx = chckIndx(subInt((s_1325401995).length, i_1325401996), 0, (s_1325401995).length - 1);
  framePtr = F.prev;

  return [result_1325401997, result_1325401997_Idx];

}

function handle_error_1325401866(parser_1325401867, pe_1325401868, location_1325401869) {
      var Temporary4;

  var result_1325401870 = {Field0: null, Field1: 0};

  var F = {procname: "parse.handle_error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((0 <= pe_1325401868.node_orig_len))) {
    F.line = 521;
    F.filename = "parse.nim";
    failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(521, 3) `pe.node_orig_len >= 0` ") || []).concat(HEX24_1325401338(pe_1325401868) || []));
    }
    
    if (!((0 <= pe_1325401868.location))) {
    F.line = 522;
    failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(522, 3) `pe.location >= 0` ") || []).concat(HEX24_1325401338(pe_1325401868) || []));
    }
    
    F.line = 525;
    var grammar_1325401881 = grammar_1325401580(pe_1325401868.origin);
    F.line = 526;
    var gap_1325401882 = subInt(pe_1325401868.location, location_1325401869);
    F.line = 527;
    var cut_1325401894 = cut_1291845777(grammar_1325401881.document, HEX2EHEX2E_1291845699(location_1325401869, subInt(addInt(location_1325401869, gap_1325401882), 1)));
    F.line = 528;
    var rules_1325401895 = nimCopy(null, pe_1325401868.origin.resumeList, NTI1325400167);
    F.line = 530;
    var node_1325401896 = EmptyNode_1325400358;
    F.line = 531;
    var tail_1325401897 = false;
    F.line = 532;
    var nextLoc_1325401898 = addInt(pe_1325401868.location, pe_1325401868.node_orig_len);
    F.line = 533;
    var tmpTuple_1325401899 = reentry_point_1325401640(grammar_1325401881.document, nextLoc_1325401898, rules_1325401895, grammar_1325401881.commentRe, 10000);
    F.line = 533;
    var skipNode_1325401900 = tmpTuple_1325401899["Field0"];
    F.line = 533;
    var i_1325401901 = tmpTuple_1325401899["Field1"];
    if (((0 <= i_1325401901) || (parser_1325401867 == grammar_1325401881.root))) {
    F.line = 536;
    var zombie_1325401906 = null;
    if ((i_1325401901 < 0)) {
    F.line = 537;
    i_1325401901 = 0;
    }
    
    Label1: {
      F.line = 538;
      var child_1325401910 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094419 = 0;
      F.line = 242;
      var L_520094420 = (pe_1325401868.node.childrenSeq).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094419 < L_520094420)) break Label3;
            F.line = 538;
            F.filename = "parse.nim";
            child_1325401910 = pe_1325401868.node.childrenSeq[chckIndx(i_520094419, 0, (pe_1325401868.node.childrenSeq).length - 1)];
            if (eqStrings(child_1325401910.nameRef[0][child_1325401910.nameRef[1]], [95,95,90,79,77,66,73,69])) {
            F.line = 540;
            zombie_1325401906 = child_1325401910;
            F.line = 541;
            break Label1;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094419 = addInt(i_520094419, 1);
            if (!(((pe_1325401868.node.childrenSeq).length == L_520094420))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((!((zombie_1325401906 == null)) && (((zombie_1325401906.childrenSeq).length == 0) && (len_1291845761(zombie_1325401906.textSlice) == 0)))) {
    F.line = 543;
    F.filename = "parse.nim";
    textHEX3D_1325401929(zombie_1325401906, cut_1291845777(grammar_1325401881.document, HEX2EHEX2E_1291845699(location_1325401869, subInt(addInt(location_1325401869, i_1325401901), 1))));
    F.line = 544;
    tail_1325401897 = false;
    }
    
    F.line = 545;
    nextLoc_1325401898 = addInt(nextLoc_1325401898, i_1325401901);
    if (pe_1325401868.first_throw) {
    F.line = 547;
    node_1325401896 = pe_1325401868.node;
    if ((tail_1325401897 && !((skipNode_1325401900 == null)))) {
    F.line = 548;
    node_1325401896.childrenSeq.push(skipNode_1325401900);;
    }
    
    }
    else {
      if (!((skipNode_1325401900 == null))) {
      F.line = 553;
      F.line = 177;
      F.filename = "nodetree.nim";
      var _ = assignSourcePos_1124074099(init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [init_1325401795(new_1124074179(), [95,95,90,79,77,66,73,69], cut_1325401894, null), pe_1325401868.node, skipNode_1325401900], null), location_1325401869);
      node_1325401896 = init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [init_1325401795(new_1124074179(), [95,95,90,79,77,66,73,69], cut_1325401894, null), pe_1325401868.node, skipNode_1325401900], null);
      }
      else {
        if (true) {
        F.line = 555;
        F.filename = "parse.nim";
        failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(555, 9) `false` Unrechable, theoretically..."));
        }
        
      }
      
    }
    
    }
    else {
    if (pe_1325401868.first_throw) {
    F.line = 557;
    pe_1325401868.first_throw = false;
    F.line = 558;
    raiseException(pe_1325401868, "ParsingException:ObjectType");
    }
    else {
    if (((Temporary4 = HEX5BHEX5D_1325401993(grammar_1325401881.errors, 1), Temporary4)[0][Temporary4[1]].code == 1015)) {
    F.line = 560;
    F.line = 177;
    F.filename = "nodetree.nim";
    var _ = assignSourcePos_1124074099(init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [pe_1325401868.node], null), location_1325401869);
    node_1325401896 = init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [pe_1325401868.node], null);
    }
    else {
      if ((gap_1325401882 == 0)) {
      F.line = 563;
      F.filename = "parse.nim";
      F.line = 177;
      F.filename = "nodetree.nim";
      var _ = assignSourcePos_1124074099(init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [pe_1325401868.node], null), location_1325401869);
      node_1325401896 = init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [pe_1325401868.node], null);
      }
      else {
        F.line = 565;
        F.filename = "parse.nim";
        F.line = 177;
        F.filename = "nodetree.nim";
        var _ = assignSourcePos_1124074099(init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [init_1325401795(new_1124074179(), [95,95,90,79,77,66,73,69], cut_1325401894, null), pe_1325401868.node], null), location_1325401869);
        node_1325401896 = init_1124074290(new_1124074179(), parser_1325401867.nodeName[0], parser_1325401867.nodeName[1], [init_1325401795(new_1124074179(), [95,95,90,79,77,66,73,69], cut_1325401894, null), pe_1325401868.node], null);
      }
      
      F.line = 566;
      F.filename = "parse.nim";
      pe_1325401868.node = node_1325401896;
      F.line = 567;
      pe_1325401868.node_orig_len = addInt(pe_1325401868.node_orig_len, gap_1325401882);
      F.line = 568;
      pe_1325401868.location = location_1325401869;
      F.line = 569;
      pe_1325401868.first_throw = false;
      F.line = 570;
      raiseException(pe_1325401868, "ParsingException:ObjectType");
    }
    }}
    F.line = 571;
    var colontmp__520094422 = node_1325401896;
    F.line = 571;
    var colontmp__520094423 = nextLoc_1325401898;
    F.line = 571;
    result_1325401870 = nimCopy(result_1325401870, {Field0: colontmp__520094422, Field1: colontmp__520094423}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401870;

}

function nextPowerOfTwo_788529399(x_788529400) {
  var result_788529401 = 0;

    result_788529401 = (x_788529400 - 1);
    result_788529401 = (result_788529401 | (result_788529401 >> 16));
    result_788529401 = (result_788529401 | (result_788529401 >> 8));
    result_788529401 = (result_788529401 | (result_788529401 >> 4));
    result_788529401 = (result_788529401 | (result_788529401 >> 2));
    result_788529401 = (result_788529401 | (result_788529401 >> 1));
    result_788529401 += (1 + ((x_788529400 <= 0) ? 1 : 0));

  return result_788529401;

}

function slotsNeeded_1207959594(count_1207959595) {
  var result_1207959596 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "hashcommon.nim";
    result_1207959596 = nextPowerOfTwo_788529399(addInt(divInt(mulInt(count_1207959595, 3), 2), 4));
  framePtr = F.prev;

  return result_1207959596;

}

function mustRehash_1325403029(t_1325403031) {
  var result_1325403032 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1325403031.counter < (t_1325403031.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1325403032 = ((mulInt((t_1325403031.data).length, 2) < mulInt(t_1325403031.counter, 3)) || (subInt((t_1325403031.data).length, t_1325403031.counter) < 4));
  framePtr = F.prev;

  return result_1325403032;

}

function rawInsert_1325403538(t_1325403542, data_1325403543, data_1325403543_Idx, key_1325403544, val_1325403545, hc_1325403546, h_1325403547) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1325403543[data_1325403543_Idx][chckIndx(h_1325403547, 0, (data_1325403543[data_1325403543_Idx]).length - 1)].Field1 = key_1325403544;
    F.line = 26;
    data_1325403543[data_1325403543_Idx][chckIndx(h_1325403547, 0, (data_1325403543[data_1325403543_Idx]).length - 1)].Field2 = nimCopy(data_1325403543[data_1325403543_Idx][chckIndx(h_1325403547, 0, (data_1325403543[data_1325403543_Idx]).length - 1)].Field2, val_1325403545, NTI1325400121);
    F.line = 27;
    data_1325403543[data_1325403543_Idx][chckIndx(h_1325403547, 0, (data_1325403543[data_1325403543_Idx]).length - 1)].Field0 = hc_1325403546;
  framePtr = F.prev;

  
}

function enlarge_1325403217(t_1325403220) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1325403223 = [];
    F.line = 251;
    n_1325403223 = new Array(chckRange(mulInt((t_1325403220.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1325403220.data).length, 2), 0, 2147483647) ; ++i) { n_1325403223[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }    F.line = 252;
    var Temporary1 = t_1325403220.data; t_1325403220.data = n_1325403223; n_1325403223 = Temporary1;    Label2: {
      F.line = 253;
      var i_1325403298 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__520094488 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__520094488 = (n_1325403223).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_520094490 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_520094490 <= colontmp__520094488)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1325403298 = res_520094490;
            F.line = 254;
            var eh_1325403356 = n_1325403223[chckIndx(i_1325403298, 0, (n_1325403223).length - 1)].Field0;
            if (isFilled_1207959583(eh_1325403356)) {
            F.line = 256;
            var j_1325403360 = (eh_1325403356 & (t_1325403220.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1207959583(t_1325403220.data[chckIndx(j_1325403360, 0, (t_1325403220.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1325403360 = nextTry_1207959586(j_1325403360, (t_1325403220.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1325403538(t_1325403220, t_1325403220, "data", n_1325403223[chckIndx(i_1325403298, 0, (n_1325403223).length - 1)].Field1, n_1325403223[chckIndx(i_1325403298, 0, (n_1325403223).length - 1)].Field2, eh_1325403356, j_1325403360);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_520094490 = addInt(res_520094490, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1325403719(t_1325403722, key_1325403723, hc_1325403724) {
  var result_1325403725 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1325403722.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1325403725 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1325403787 = (hc_1325403724 & (t_1325403722.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1207959583(t_1325403722.data[chckIndx(h_1325403787, 0, (t_1325403722.data).length - 1)].Field0)) break Label2;
          if (((t_1325403722.data[chckIndx(h_1325403787, 0, (t_1325403722.data).length - 1)].Field0 == hc_1325403724) && (t_1325403722.data[chckIndx(h_1325403787, 0, (t_1325403722.data).length - 1)].Field1 == key_1325403723))) {
          F.line = 51;
          result_1325403725 = h_1325403787;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1325403787 = nextTry_1207959586(h_1325403787, (t_1325403722.data).length - 1);
        }
    };
    F.line = 53;
    result_1325403725 = subInt((-1), h_1325403787);
  };
  framePtr = F.prev;

  return result_1325403725;

}

function HEX5BHEX5DHEX3D_1325402830(t_1325402833, key_1325402834, val_1325402835) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1325402833.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym97_1325402895 = slotsNeeded_1207959594(32);
    F.line = 169;
    t_1325402833.counter = 0;
    F.line = 170;
    t_1325402833.data = new Array(chckRange(correctSizeHEX60gensym97_1325402895, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym97_1325402895, 0, 2147483647) ; ++i) { t_1325402833.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }    }
    
    F.line = 59;
    var hc_1325402900 = [0];
    F.line = 60;
    var index_1325402907 = rawGet_1325402322(t_1325402833, key_1325402834, hc_1325402900, 0);
    if ((0 <= index_1325402907)) {
    F.line = 61;
    t_1325402833.data[chckIndx(index_1325402907, 0, (t_1325402833.data).length - 1)].Field2 = nimCopy(t_1325402833.data[chckIndx(index_1325402907, 0, (t_1325402833.data).length - 1)].Field2, val_1325402835, NTI1325400121);
    }
    else {
      if (((t_1325402833.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym100_1325403024 = slotsNeeded_1207959594(32);
      F.line = 169;
      t_1325402833.counter = 0;
      F.line = 170;
      t_1325402833.data = new Array(chckRange(correctSizeHEX60gensym100_1325403024, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym100_1325403024, 0, 2147483647) ; ++i) { t_1325402833.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }      }
      
      if (mustRehash_1325403029(t_1325402833)) {
      F.line = 51;
      enlarge_1325403217(t_1325402833);
      F.line = 52;
      index_1325402907 = rawGetKnownHC_1325403719(t_1325402833, key_1325402834, hc_1325402900[0]);
      }
      
      F.line = 53;
      index_1325402907 = subInt((-1), index_1325402907);
      F.line = 54;
      rawInsert_1325403538(t_1325402833, t_1325402833, "data", key_1325402834, val_1325402835, hc_1325402900[0], index_1325402907);
      F.line = 62;
      t_1325402833.counter = addInt(t_1325402833.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function memoizationWrapper_1325400547(parser_1325400548, location_1325400549) {
  var result_1325402254 = {Field0: null, Field1: 0};

  var F = {procname: "parse.memoizationWrapper", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 596;
    F.filename = "parse.nim";
    var grammar_1325402255 = grammar_1325401580(parser_1325400548);
    if ((location_1325400549 < grammar_1325402255.rollbackLocation)) {
    F.line = 597;
    rollback_1325402182(grammar_1325402255, location_1325400549);
    }
    
    if (contains_1325402309(parser_1325400548.visited, ((location_1325400549) | 0))) {
    F.line = 598;
    result_1325402254 = nimCopy(result_1325402254, HEX5BHEX5D_1325402640(parser_1325400548.visited, ((location_1325400549) | 0)), NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 600;
    var memoization_1325402772 = (grammar_1325402255.flags[1] != undefined);
    F.line = 601;
    grammar_1325402255.flags[1] = true;
    F.line = 603;
++excHandler;
    try {
    F.line = 604;
    result_1325402254 = nimCopy(result_1325402254, parse_1325402153(parser_1325400548, location_1325400549), NTI1325400121);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1325400142))) {
    F.line = 606;
    var pe_1325402777 = getCurrentException();
    F.line = 606;
    result_1325402254 = nimCopy(result_1325402254, handle_error_1325401866(parser_1325400548, pe_1325402777, location_1325400549), NTI1325400121);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    F.line = 608;
    var node_1325402778 = result_1325402254.Field0;
    if ((node_1325402778 == null)) {
    F.line = 610;
    grammar_1325402255.farthestFail = location_1325400549;
    F.line = 611;
    grammar_1325402255.farthestParser = parser_1325400548;
    }
    else {
    if (!((node_1325402778 == EmptyNode_1325400358))) {
    F.line = 613;
    node_1325402778.sourcePos = location_1325400549;
    }
    }
    if ((grammar_1325402255.flags[1] != undefined)) {
    F.line = 616;
    HEX5BHEX5DHEX3D_1325402830(parser_1325400548.visited, ((location_1325400549) | 0), result_1325402254);
    if (!(memoization_1325402772)) {
    F.line = 617;
    delete grammar_1325402255.flags[1];
    }
    
    }
    
  };
  framePtr = F.prev;

  return result_1325402254;

}

function initTable_1325401053(initialSize_1325401056) {
  var result_1325401057 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym6_1325401059 = slotsNeeded_1207959594(chckRange(initialSize_1325401056, 0, 2147483647));
    F.line = 169;
    result_1325401057.counter = 0;
    F.line = 170;
    result_1325401057.data = new Array(chckRange(correctSizeHEX60gensym6_1325401059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1325401059, 0, 2147483647) ; ++i) { result_1325401057.data[i] = {Field0: 0, Field1: 0, Field2: {Field0: null, Field1: 0}}; }  framePtr = F.prev;

  return result_1325401057;

}

function init_1325401041(parser_1325401042, ptype_1325401043) {
  var result_1325401044 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((!(eqStrings(ptype_1325401043, [])) && (ptype_1325401043[chckIndx(0, 0, (ptype_1325401043).length - 1)] == 58)))) {
    F.line = 211;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(211, 3) `ptype != \"\" and ptype[0] == \':\'` "));
    }
    
    F.line = 212;
    parser_1325401042.pname = nimCopy(null, [], NTI33554449);
    F.line = 213;
    parser_1325401042.nodeName[0] = [[]]; parser_1325401042.nodeName[1] = 0;
    F.line = 214;
    parser_1325401042.nodeName[0][parser_1325401042.nodeName[1]] = nimCopy(null, ptype_1325401043, NTI33554449);
    F.line = 215;
    parser_1325401042.ptype = nimCopy(null, ptype_1325401043, NTI33554449);
    F.line = 216;
    parser_1325401042.flags = nimCopy(parser_1325401042.flags, ConstSet3, NTI1325400130);
    F.line = 217;
    parser_1325401042.uniqueID = 0;
    F.line = 219;
    parser_1325401042.grammarVar = GrammarPlaceholder_1325400546;
    F.line = 220;
    parser_1325401042.symbol = null;
    F.line = 223;
    parser_1325401042.call = memoizationWrapper_1325400547;
    F.line = 224;
    parser_1325401042.visited = nimCopy(parser_1325401042.visited, initTable_1325401053(32), NTI1325400158);
    F.line = 225;
    cleanUp_1325401040(parser_1325401042);
    F.line = 226;
    result_1325401044 = parser_1325401042;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401044;

}

function init_1325405560(regexParser_1325405561, rxInfo_1325405562) {
  var result_1325405563 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1113;
    F.filename = "parse.nim";
    var _ = init_1325401041(regexParser_1325405561, [58,82,101,103,69,120,112]);
    F.line = 1114;
    regexParser_1325405561.reInfo = nimCopy(regexParser_1325405561.reInfo, rxInfo_1325405562, NTI1325400098);
    F.line = 1115;
    regexParser_1325405561.flags[0] = true;
    F.line = 1116;
    result_1325405563 = regexParser_1325405561;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405563;

}

function new_1325405590() {
  var result_1325405593 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325405595 = null;
    F.line = 839;
    r_1325405595 = ({m_type: NTI1325403832, reInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_1325405593 = r_1325405595;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405593;

}

function RegExp_1325405586(reStr_1325405587) {
    var Temporary1;

  var result_1325405588 = null;

  var F = {procname: "parse.RegExp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1122;
    F.filename = "parse.nim";
    F.line = 1122;
    if (contains_754976583(reStr_1325405587, [10])) {
    Temporary1 = mrx_1325400158(reStr_1325405587);
    }
    else {
    Temporary1 = rx_1325400134(reStr_1325405587);
    }
    
    var reInfo_1325405589 = nimCopy(null, Temporary1, NTI1325400098);
    result_1325405588 = init_1325405560(new_1325405590(), reInfo_1325405589);
  framePtr = F.prev;

  return result_1325405588;

}

function Drop_1325405125(parser_1325405126) {
  var result_1325405127 = null;

  var F = {procname: "parse.Drop", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 967;
    F.filename = "parse.nim";
    F.line = 967;
    parser_1325405126.flags = nimCopy(parser_1325405126.flags, SetPlus(parser_1325405126.flags, ConstSet16), NTI1325400130);
    result_1325405127 = parser_1325405126;
  framePtr = F.prev;

  return result_1325405127;

}

function init_1325405674(insignificant_1325405675, whitespace_1325405676, comment_1325405677) {
  var result_1325405678 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1170;
    F.filename = "parse.nim";
    var _ = init_1325401041(insignificant_1325405675, [58,87,104,105,116,101,115,112,97,99,101]);
    F.line = 1171;
    insignificant_1325405675.whitespace = nimCopy(insignificant_1325405675.whitespace, whitespace_1325405676, NTI1325400098);
    F.line = 1172;
    insignificant_1325405675.comment = nimCopy(insignificant_1325405675.comment, comment_1325405677, NTI1325400098);
    F.line = 1173;
    var ws_1325405679 = ([40,63,58] || []).concat(whitespace_1325405676.Field0 || [],[41,63] || []);
    if ((((comment_1325405677.Field0).length == 0) || eqStrings(comment_1325405677.Field0, [36,46]))) {
    F.line = 1175;
    insignificant_1325405675.combined = nimCopy(insignificant_1325405675.combined, rx_1325400134(ws_1325405679), NTI1325400098);
    }
    else {
      F.line = 1177;
      var cmmt_1325405680 = ([40,63,58] || []).concat(comment_1325405677.Field0 || [],[41] || []);
      F.line = 1178;
      Label1: {
        F.line = 1178;
        var fmtRes_1325405685 = [mnewString(0)];
        F.line = 1178;
        fmtRes_1325405685[0].push.apply(fmtRes_1325405685[0], [40,63,58]);;
        F.line = 1178;
        formatValue_1090519211(fmtRes_1325405685, 0, ws_1325405679, []);
        F.line = 1178;
        fmtRes_1325405685[0].push.apply(fmtRes_1325405685[0], [40,63,58]);;
        F.line = 1178;
        formatValue_1090519211(fmtRes_1325405685, 0, cmmt_1325405680, []);
        F.line = 1178;
        formatValue_1090519211(fmtRes_1325405685, 0, ws_1325405679, []);
        F.line = 1178;
        fmtRes_1325405685[0].push.apply(fmtRes_1325405685[0], [41,42,41]);;
      };
      insignificant_1325405675.combined = nimCopy(insignificant_1325405675.combined, rx_1325400134(fmtRes_1325405685[0]), NTI1325400098);
    }
    
    F.line = 1179;
    result_1325405678 = insignificant_1325405675;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405678;

}

function new_1325405711() {
  var result_1325405714 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325405716 = null;
    F.line = 839;
    r_1325405716 = ({m_type: NTI1325403903, combined: {Field0: [], Field1: {Field0: null, Field1: null}}, whitespace: {Field0: [], Field1: {Field0: null, Field1: null}}, comment: {Field0: [], Field1: {Field0: null, Field1: null}}, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_1325405714 = r_1325405716;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405714;

}

function Whitespace_1325405705(whitespace_1325405706, comment_1325405707) {
    var Temporary1;
    var Temporary2;

  var result_1325405708 = null;

  var F = {procname: "parse.Whitespace", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1185;
    F.filename = "parse.nim";
    F.line = 1185;
    if (contains_754976583(whitespace_1325405706, [10])) {
    Temporary1 = mrx_1325400158(whitespace_1325405706);
    }
    else {
    Temporary1 = rx_1325400134(whitespace_1325405706);
    }
    
    var wsInfo_1325405709 = nimCopy(null, Temporary1, NTI1325400098);
    F.line = 1186;
    if (contains_754976583(comment_1325405707, [10])) {
    Temporary2 = mrx_1325400158(comment_1325405707);
    }
    else {
    Temporary2 = rx_1325400134(comment_1325405707);
    }
    
    var commentInfo_1325405710 = nimCopy(null, Temporary2, NTI1325400098);
    result_1325405708 = init_1325405674(new_1325405711(), wsInfo_1325405709, commentInfo_1325405710);
  framePtr = F.prev;

  return result_1325405708;

}

function init_1325404275(errorCatching_1325404276, ptype_1325404277, mandatory_1325404278, skipList_1325404283, resumeList_1325404288, errorList_1325404293) {
  var result_1325404294 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 755;
    F.filename = "parse.nim";
    var _ = init_1325401041(errorCatching_1325404276, ptype_1325404277);
    F.line = 756;
    errorCatching_1325404276.flags[5] = true;
    F.line = 757;
    errorCatching_1325404276.mandatory = mandatory_1325404278;
    F.line = 758;
    errorCatching_1325404276.skipList = nimCopy(null, skipList_1325404283, NTI1325402504);
    F.line = 759;
    errorCatching_1325404276.resumeList = nimCopy(null, resumeList_1325404288, NTI1325402515);
    F.line = 760;
    errorCatching_1325404276.errorList = nimCopy(null, errorList_1325404293, NTI1325402526);
    F.line = 761;
    result_1325404294 = errorCatching_1325404276;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404294;

}

function HEX40_1325406061(a_1325406063) {
  var result_1325406064 = [];

  var F = {procname: "@.@", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1462;
    F.filename = "system.nim";
    result_1325406064 = new Array(chckRange((a_1325406063).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_1325406063).length, 0, 2147483647) ; ++i) { result_1325406064[i] = null; }    Label1: {
      F.line = 1463;
      var i_1325406080 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094501 = 0;
      F.line = 1463;
      F.filename = "system.nim";
      colontmp__520094501 = subInt((a_1325406063).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094502 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094502 <= colontmp__520094501)) break Label3;
            F.line = 1463;
            F.filename = "system.nim";
            i_1325406080 = res_520094502;
            F.line = 1463;
            result_1325406064[chckIndx(i_1325406080, 0, (result_1325406064).length - 1)] = a_1325406063[chckIndx(i_1325406080, 0, (a_1325406063).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094502 = addInt(res_520094502, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1325406064;

}

function init_1325406315(series_1325406316, parsers_1325406317, mandatory_1325406318) {
                      var Temporary7;

  var result_1325406319 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((1 <= (parsers_1325406317).length))) {
    F.line = 1430;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1430, 3) `parsers.len >= 1` "));
    }
    
    F.line = 1431;
    var _ = init_1325404275(series_1325406316, [58,83,101,114,105,101,115], mandatory_1325406318, [], [], []);
    F.line = 1432;
    series_1325406316.flags[1] = true;
    F.line = 1433;
    series_1325406316.subParsers = nimCopy(null, HEX40_1325406061(parsers_1325406317), NTI1325404156);
    Label1: {
      F.line = 1435;
      var i_1325406335 = (-1);
      Label2: {
        F.line = 1434;
        var subP_1325406339 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094497 = 0;
        F.line = 242;
        var L_520094498 = (series_1325406316.subParsers).length;
        Label3: {
          F.line = 243;
            Label4: while (true) {
            if (!(i_520094497 < L_520094498)) break Label4;
              F.line = 1435;
              F.filename = "parse.nim";
              subP_1325406339 = series_1325406316.subParsers[chckIndx(i_520094497, 0, (series_1325406316.subParsers).length - 1)];
              F.line = 1435;
              i_1325406335 = addInt(i_1325406335, 1);
              F.line = 1435;
              var p_1325406345 = subP_1325406339;
              Label5: {
                F.line = 1436;
                  Label6: while (true) {
                  if (!((((p_1325406345.subParsers).length == 1) && eqStrings(p_1325406345.ptype, [58,83,101,114,105,101,115])) && eqStrings(p_1325406345.pname, []))) break Label6;
                      if (!(p_1325406345.mandatory == 0)) Temporary7 = false; else {                        Temporary7 = (i_1325406335 < series_1325406316.mandatory);                      }                    if (Temporary7) {
                    F.line = 1438;
                    series_1325406316.mandatory = i_1325406335;
                    }
                    
                    F.line = 1439;
                    p_1325406345 = p_1325406345.subParsers[chckIndx(0, 0, (p_1325406345.subParsers).length - 1)];
                    F.line = 1440;
                    series_1325406316.subParsers[chckIndx(i_1325406335, 0, (series_1325406316.subParsers).length - 1)] = p_1325406345;
                  }
              };
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094497 = addInt(i_520094497, 1);
              if (!(((series_1325406316.subParsers).length == L_520094498))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    F.line = 1441;
    F.filename = "parse.nim";
    result_1325406319 = series_1325406316;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406319;

}

function new_1325406406() {
  var result_1325406409 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325406411 = null;
    F.line = 839;
    r_1325406411 = ({m_type: NTI1325404342, mandatory: 0, skipList: [], resumeList: [], errorList: [], referredParsers: [], ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_1325406409 = r_1325406411;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406409;

}

function HEX26_1325406739(series_1325406740, other_1325406741) {
  var result_1325406742 = null;

  var F = {procname: "parse.&", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(series_1325406740.pname, []))) {
    F.line = 1519;
    F.filename = "parse.nim";
    result_1325406742 = init_1325406315(new_1325406406(), [series_1325406740, other_1325406741], 1073741824);
    break BeforeRet;
    }
    
    F.line = 1520;
    series_1325406740.subParsers.push(other_1325406741);;
    F.line = 1521;
    result_1325406742 = series_1325406740;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406742;

}

function HEX26_1325406769(parser_1325406770, other_1325406771) {
  var result_1325406772 = null;

  var F = {procname: "parse.&", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1530;
    F.filename = "parse.nim";
    result_1325406772 = init_1325406315(new_1325406406(), [parser_1325406770, other_1325406771], 1073741824);
  framePtr = F.prev;

  return result_1325406772;

}

function init_1325405152(textParser_1325405153, text_1325405154) {
  var result_1325405155 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((text_1325405154).length <= 2147483647))) {
    F.line = 1000;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1000, 3) `text.len <= MaxTextLen` "));
    }
    
    F.line = 1001;
    var _ = init_1325401041(textParser_1325405153, [58,84,101,120,116]);
    F.line = 1003;
    textParser_1325405153.flags[0] = true;
    F.line = 1004;
    textParser_1325405153.text = nimCopy(null, text_1325405154, NTI33554449);
    F.line = 1005;
    textParser_1325405153.slice = nimCopy(textParser_1325405153.slice, toStringSlice_1325400350(text_1325405154), NTI1291845635);
    F.line = 1006;
    textParser_1325405153.empty = eqStrings(text_1325405154, []);
    F.line = 1007;
    result_1325405155 = textParser_1325405153;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405155;

}

function new_520093708() {
  var result_520093711 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_520093713 = null;
    F.line = 839;
    r_520093713 = ({m_type: NTI1325403225, text: [], slice: {Field0: [null, 0], Field1: 0, Field2: 0}, empty: false, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_520093711 = r_520093713;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093711;

}

function init_1325406057(alternative_1325406058, parsers_1325406059) {
  var result_1325406060 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1364;
    F.filename = "parse.nim";
    var _ = init_1325401041(alternative_1325406058, [58,65,108,116,101,114,110,97,116,105,118,101]);
    F.line = 1365;
    alternative_1325406058.subParsers = nimCopy(null, HEX40_1325406061(parsers_1325406059), NTI1325404156);
    F.line = 1366;
    alternative_1325406058.flags[1] = true;
    F.line = 1367;
    result_1325406060 = alternative_1325406058;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406060;

}

function new_1325406146() {
  var result_1325406149 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325406151 = null;
    F.line = 839;
    r_1325406151 = ({m_type: NTI1325404150, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_1325406149 = r_1325406151;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406149;

}

function HEX26_1325406276(x_1325406278, y_1325406279) {
  var result_1325406280 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1531;
    F.filename = "system.nim";
    result_1325406280 = new Array(chckRange(addInt((x_1325406278).length, (y_1325406279).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_1325406278).length, (y_1325406279).length), 0, 2147483647) ; ++i) { result_1325406280[i] = null; }    Label1: {
      F.line = 1532;
      var i_1325406298 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094505 = 0;
      F.line = 1532;
      F.filename = "system.nim";
      colontmp__520094505 = subInt((x_1325406278).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094506 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094506 <= colontmp__520094505)) break Label3;
            F.line = 1532;
            F.filename = "system.nim";
            i_1325406298 = res_520094506;
            F.line = 1532;
            result_1325406280[chckIndx(i_1325406298, 0, (result_1325406280).length - 1)] = x_1325406278[chckIndx(i_1325406298, 0, (x_1325406278).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094506 = addInt(res_520094506, 1);
          }
      };
    };
    Label4: {
      F.line = 1534;
      F.filename = "system.nim";
      var i_1325406306 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094509 = 0;
      F.line = 1534;
      F.filename = "system.nim";
      colontmp__520094509 = subInt((y_1325406279).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094510 = 0;
      Label5: {
        F.line = 91;
          Label6: while (true) {
          if (!(res_520094510 <= colontmp__520094509)) break Label6;
            F.line = 1534;
            F.filename = "system.nim";
            i_1325406306 = res_520094510;
            F.line = 1534;
            result_1325406280[chckIndx(addInt(i_1325406306, (x_1325406278).length), 0, (result_1325406280).length - 1)] = y_1325406279[chckIndx(i_1325406306, 0, (y_1325406279).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094510 = addInt(res_520094510, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1325406280;

}

function HEX26_1325406750(other_1325406751, series_1325406752) {
  var result_1325406753 = null;

  var F = {procname: "parse.&", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(series_1325406752.pname, []))) {
    F.line = 1524;
    F.filename = "parse.nim";
    result_1325406753 = init_1325406315(new_1325406406(), [other_1325406751, series_1325406752], 1073741824);
    break BeforeRet;
    }
    
    F.line = 1525;
    series_1325406752.subParsers = nimCopy(null, HEX26_1325406276([other_1325406751], series_1325406752.subParsers), NTI1325404318);
    if ((series_1325406752.mandatory < 1073741824)) {
    F.line = 1527;
    series_1325406752.mandatory = ((series_1325406752.mandatory + 1) >>> 0);
    }
    
    F.line = 1528;
    result_1325406753 = series_1325406752;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406753;

}

function HEXC2HEXA7_1325406402(parser_1325406403) {
  var result_1325406404 = null;

  var F = {procname: "parse.\xC2\xA7", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((eqStrings(parser_1325406403.pname, []) && eqStrings(parser_1325406403.ptype, [58,83,101,114,105,101,115]))) {
    F.line = 1451;
    F.filename = "parse.nim";
    var series_1325406405 = parser_1325406403;
    F.line = 1452;
    series_1325406405.mandatory = 0;
    F.line = 1453;
    result_1325406404 = series_1325406405;
    break BeforeRet;
    }
    
    F.line = 1454;
    result_1325406404 = init_1325406315(new_1325406406(), [parser_1325406403], 0);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406404;

}

function init_1325405843(repeat_1325405844, parser_1325405845, repRange_1325405846, name_1325405847) {
  var result_1325405848 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((repRange_1325405846["Field0"] < repRange_1325405846["Field1"]))) {
    F.line = 1265;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1265, 3) `repRange[1] > repRange[0]` "));
    }
    
    F.line = 1266;
    var _ = init_1325401041(repeat_1325405844, name_1325405847);
    F.line = 1267;
    repeat_1325405844.subParsers = nimCopy(null, [parser_1325405845], NTI1325404012);
    F.line = 1268;
    repeat_1325405844.repRange = nimCopy(repeat_1325405844.repRange, repRange_1325405846, NTI1325403997);
    F.line = 1269;
    result_1325405848 = repeat_1325405844;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405848;

}

function new_520093837() {
  var result_520093840 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_520093842 = null;
    F.line = 839;
    r_520093842 = ({m_type: NTI1325403999, repRange: {Field0: 0, Field1: 0}, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_520093840 = r_520093842;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093840;

}

function name_1325401136(parser_1325401137) {
    var Temporary1;

  var result_1325401138 = [];

  var F = {procname: "parse.name", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 238;
    F.filename = "parse.nim";
    if (((parser_1325401137.flags[6] != undefined) && (0 < (parser_1325401137.subParsers).length))) {
    Temporary1 = parser_1325401137.subParsers[chckIndx(0, 0, (parser_1325401137.subParsers).length - 1)].pname;
    }
    else {
    Temporary1 = parser_1325401137.pname;
    }
    
    result_1325401138 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1325401138;

}

function min_1325406719(x_1325406721, y_1325406722) {
    var Temporary1;

  var result_1325406723 = 0;

    if ((x_1325406721 <= y_1325406722)) {
    Temporary1 = x_1325406721;
    }
    else {
    Temporary1 = y_1325406722;
    }
    
    result_1325406723 = Temporary1;

  return result_1325406723;

}

function add_1325406181(x_1325406183, x_1325406183_Idx, y_1325406184) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1204;
    F.filename = "system.nim";
    var xl_1325406188 = (x_1325406183[x_1325406183_Idx]).length;
    F.line = 1205;
    if (x_1325406183[x_1325406183_Idx].length < (Temporary1 = chckRange(addInt(xl_1325406188, (y_1325406184).length), 0, 2147483647), Temporary1)) { for (var i = x_1325406183[x_1325406183_Idx].length ; i < Temporary1 ; ++i) x_1325406183[x_1325406183_Idx].push(null); }
               else { x_1325406183[x_1325406183_Idx].length = Temporary1; };
    Label2: {
      F.line = 1206;
      var i_1325406203 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094513 = 0;
      F.line = 1206;
      F.filename = "system.nim";
      colontmp__520094513 = (y_1325406184).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094514 = 0;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_520094514 <= colontmp__520094513)) break Label4;
            F.line = 1206;
            F.filename = "system.nim";
            i_1325406203 = res_520094514;
            F.line = 1206;
            x_1325406183[x_1325406183_Idx][chckIndx(addInt(xl_1325406188, i_1325406203), 0, (x_1325406183[x_1325406183_Idx]).length - 1)] = y_1325406184[chckIndx(i_1325406203, 0, (y_1325406184).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094514 = addInt(res_520094514, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function mergeErrorLists_1325404585(left_1325404586, right_1325404587) {
  var F = {procname: "parse.mergeErrorLists", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 859;
      F.filename = "parse.nim";
      var m_1325404591 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094517 = 0;
      F.line = 242;
      var L_520094518 = (right_1325404587.skipList).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094517 < L_520094518)) break Label3;
            F.line = 859;
            F.filename = "parse.nim";
            m_1325404591 = right_1325404587.skipList[chckIndx(i_520094517, 0, (right_1325404587.skipList).length - 1)];
            F.line = 859;
            var Temporary4 = nimCopy(null, m_1325404591, NTI1325400126);
            left_1325404586.skipList.push(Temporary4);;
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094517 = addInt(i_520094517, 1);
            if (!(((right_1325404587.skipList).length == L_520094518))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label5: {
      F.line = 860;
      F.filename = "parse.nim";
      var m_1325404599 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094521 = 0;
      F.line = 242;
      var L_520094522 = (right_1325404587.resumeList).length;
      Label6: {
        F.line = 243;
          Label7: while (true) {
          if (!(i_520094521 < L_520094522)) break Label7;
            F.line = 860;
            F.filename = "parse.nim";
            m_1325404599 = right_1325404587.resumeList[chckIndx(i_520094521, 0, (right_1325404587.resumeList).length - 1)];
            F.line = 860;
            var Temporary8 = nimCopy(null, m_1325404599, NTI1325400126);
            left_1325404586.resumeList.push(Temporary8);;
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094521 = addInt(i_520094521, 1);
            if (!(((right_1325404587.resumeList).length == L_520094522))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      F.line = 861;
      F.filename = "parse.nim";
      var em_1325404607 = {Field0: ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null}), Field1: []};
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094526 = 0;
      F.line = 242;
      var L_520094527 = (right_1325404587.errorList).length;
      Label10: {
        F.line = 243;
          Label11: while (true) {
          if (!(i_520094526 < L_520094527)) break Label11;
            F.line = 861;
            F.filename = "parse.nim";
            em_1325404607 = right_1325404587.errorList[chckIndx(i_520094526, 0, (right_1325404587.errorList).length - 1)];
            F.line = 861;
            var Temporary12 = nimCopy(null, em_1325404607, NTI1325400127);
            left_1325404586.errorList.push(Temporary12);;
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094526 = addInt(i_520094526, 1);
            if (!(((right_1325404587.errorList).length == L_520094527))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label13: {
      F.line = 862;
      F.filename = "parse.nim";
      var p_1325404615 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094534 = 0;
      F.line = 242;
      var L_520094535 = (right_1325404587.referredParsers).length;
      Label14: {
        F.line = 243;
          Label15: while (true) {
          if (!(i_520094534 < L_520094535)) break Label15;
            F.line = 862;
            F.filename = "parse.nim";
            p_1325404615 = right_1325404587.referredParsers[chckIndx(i_520094534, 0, (right_1325404587.referredParsers).length - 1)];
            Label16: {
              Label17: {
                F.line = 864;
                var q_1325404620 = null;
                F.line = 241;
                F.filename = "iterators.nim";
                var i_520094531 = 0;
                F.line = 242;
                var L_520094532 = (left_1325404586.referredParsers).length;
                Label18: {
                  F.line = 243;
                    Label19: while (true) {
                    if (!(i_520094531 < L_520094532)) break Label19;
                      F.line = 864;
                      F.filename = "parse.nim";
                      q_1325404620 = left_1325404586.referredParsers[chckIndx(i_520094531, 0, (left_1325404586.referredParsers).length - 1)];
                      if ((p_1325404615 == q_1325404620)) {
                      F.line = 865;
                      break Label16;
                      }
                      
                      F.line = 245;
                      F.filename = "iterators.nim";
                      i_520094531 = addInt(i_520094531, 1);
                      if (!(((left_1325404586.referredParsers).length == L_520094532))) {
                      F.line = 246;
                      failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              F.line = 866;
              F.filename = "parse.nim";
              left_1325404586.referredParsers.push(p_1325404615);;
            };
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094534 = addInt(i_520094534, 1);
            if (!(((right_1325404587.referredParsers).length == L_520094535))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3CHEX3C_1325406713(left_1325406714, right_1325406715) {
  var F = {procname: "parse.<<", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (((1073741824 <= left_1325406714.mandatory) && (right_1325406715.mandatory < 1073741824))) {
    F.line = 1506;
    F.filename = "parse.nim";
    left_1325406714.mandatory = min_1325406719((((left_1325406714.subParsers).length + right_1325406715.mandatory) >>> 0), 1073741824);
    }
    
    F.line = 1507;
    add_1325406181(left_1325406714, "subParsers", right_1325406715.subParsers);
    F.line = 1508;
    mergeErrorLists_1325404585(left_1325406714, right_1325406715);
  framePtr = F.prev;

  
}

function HEX26_1325406728(series_1325406729, other_1325406730) {
  var result_1325406731 = null;

  var F = {procname: "parse.&", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(series_1325406729.pname, []))) {
    F.line = 1511;
    F.filename = "parse.nim";
    result_1325406731 = init_1325406315(new_1325406406(), [series_1325406729, other_1325406730], 1073741824);
    break BeforeRet;
    }
    
    if (eqStrings(name_1325401136(other_1325406730), [])) {
    F.line = 1513;
    HEX3CHEX3C_1325406713(series_1325406729, other_1325406730);
    }
    else {
      F.line = 1515;
    series_1325406729.subParsers.push(other_1325406730);;
    }
    
    F.line = 1516;
    result_1325406731 = series_1325406729;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406731;

}

function init_1325406779(lookahead_1325406780, parser_1325406781, positive_1325406782) {
  var result_1325406783 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1551;
    F.filename = "parse.nim";
    var _ = init_1325401041(lookahead_1325406780, [58,76,111,111,107,97,104,101,97,100]);
    F.line = 1552;
    lookahead_1325406780.subParsers = nimCopy(null, [parser_1325406781], NTI1325404012);
    F.line = 1553;
    lookahead_1325406780.flags = nimCopy(lookahead_1325406780.flags, SetPlus(lookahead_1325406780.flags, ConstSet17), NTI1325400130);
    F.line = 1554;
    lookahead_1325406780.positive = positive_1325406782;
    F.line = 1555;
    result_1325406783 = lookahead_1325406780;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406783;

}

function new_1325406813() {
  var result_1325406816 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_1325406818 = null;
    F.line = 839;
    r_1325406818 = ({m_type: NTI1325404690, positive: false, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_1325406816 = r_1325406818;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406816;

}

function HEX3EHEX3EHEX21_1325406855(parser_1325406856) {
  var result_1325406857 = null;

  var F = {procname: "parse.>>!", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1564;
    F.filename = "parse.nim";
    result_1325406857 = init_1325406779(new_1325406813(), parser_1325406856, false);
  framePtr = F.prev;

  return result_1325406857;

}

function HEX7C_1325406254(alternative_1325406255, other_1325406256) {
  var result_1325406257 = null;

  var F = {procname: "parse.|", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(alternative_1325406255.pname, []))) {
    F.line = 1396;
    F.filename = "parse.nim";
    result_1325406257 = init_1325406057(new_1325406146(), [alternative_1325406255, other_1325406256]);
    break BeforeRet;
    }
    
    F.line = 1397;
    alternative_1325406255.subParsers.push(other_1325406256);;
    F.line = 1398;
    result_1325406257 = alternative_1325406255;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406257;

}

function hash_1325407156(x_1325407158) {
  var result_1325407159 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 214;
    F.filename = "hashes.nim";
    result_1325407159 = hashWangYi1_1224736961(BigInt.asUintN(64, BigInt(x_1325407158)));
  framePtr = F.prev;

  return result_1325407159;

}

function rawGet_1325407149(t_1325407152, key_1325407153, hc_1325407154, hc_1325407154_Idx) {
  var result_1325407155 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1325407154[hc_1325407154_Idx] = hash_1325407156(key_1325407153);
    if ((hc_1325407154[hc_1325407154_Idx] == 0)) {
    F.line = 61;
    hc_1325407154[hc_1325407154_Idx] = 314159265;
    }
    
    if (((t_1325407152.data).length == 0)) {
    F.line = 43;
    result_1325407155 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1325407229 = (hc_1325407154[hc_1325407154_Idx] & (t_1325407152.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1207959583(t_1325407152.data[chckIndx(h_1325407229, 0, (t_1325407152.data).length - 1)].Field0)) break Label2;
          if (((t_1325407152.data[chckIndx(h_1325407229, 0, (t_1325407152.data).length - 1)].Field0 == hc_1325407154[hc_1325407154_Idx]) && (t_1325407152.data[chckIndx(h_1325407229, 0, (t_1325407152.data).length - 1)].Field1 == key_1325407153))) {
          F.line = 51;
          result_1325407155 = h_1325407229;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1325407229 = nextTry_1207959586(h_1325407229, (t_1325407152.data).length - 1);
        }
    };
    F.line = 53;
    result_1325407155 = subInt((-1), h_1325407229);
  };
  framePtr = F.prev;

  return result_1325407155;

}

function hasKey_1325407142(t_1325407145, key_1325407146) {
  var result_1325407147 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1325407148 = [0];
    F.line = 373;
    result_1325407147 = (0 <= rawGet_1325407149(t_1325407145, key_1325407146, hc_1325407148, 0));
  framePtr = F.prev;

  return result_1325407147;

}

function contains_1325407136(t_1325407139, key_1325407140) {
  var result_1325407141 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 383;
    F.filename = "tables.nim";
    result_1325407141 = hasKey_1325407142(t_1325407139, key_1325407140);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325407141;

}

function raiseKeyError_1325407563(key_1325407565) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(((key_1325407565) | 0)) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1325407492(t_1325407495, key_1325407496) {
  var result_1325407497 = null;
  var result_1325407497_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_1325407498 = [0];
    F.line = 244;
    var indexHEX60gensym22_1325407505 = rawGet_1325407149(t_1325407495, key_1325407496, hcHEX60gensym22_1325407498, 0);
    if ((0 <= indexHEX60gensym22_1325407505)) {
    F.line = 245;
    result_1325407497 = t_1325407495.data[chckIndx(indexHEX60gensym22_1325407505, 0, (t_1325407495.data).length - 1)]; result_1325407497_Idx = "Field2";
    }
    else {
      F.line = 247;
    raiseKeyError_1325407563(key_1325407496);
    }
    
  framePtr = F.prev;

  return [result_1325407497, result_1325407497_Idx];

}

function mustRehash_1325407826(t_1325407828) {
  var result_1325407829 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1325407828.counter < (t_1325407828.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1325407829 = ((mulInt((t_1325407828.data).length, 2) < mulInt(t_1325407828.counter, 3)) || (subInt((t_1325407828.data).length, t_1325407828.counter) < 4));
  framePtr = F.prev;

  return result_1325407829;

}

function rawInsert_1325408335(t_1325408339, data_1325408340, data_1325408340_Idx, key_1325408341, val_1325408342, hc_1325408343, h_1325408344) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1325408340[data_1325408340_Idx][chckIndx(h_1325408344, 0, (data_1325408340[data_1325408340_Idx]).length - 1)].Field1 = key_1325408341;
    F.line = 26;
    data_1325408340[data_1325408340_Idx][chckIndx(h_1325408344, 0, (data_1325408340[data_1325408340_Idx]).length - 1)].Field2 = val_1325408342;
    F.line = 27;
    data_1325408340[data_1325408340_Idx][chckIndx(h_1325408344, 0, (data_1325408340[data_1325408340_Idx]).length - 1)].Field0 = hc_1325408343;
  framePtr = F.prev;

  
}

function enlarge_1325408014(t_1325408017) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1325408020 = [];
    F.line = 251;
    n_1325408020 = new Array(chckRange(mulInt((t_1325408017.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1325408017.data).length, 2), 0, 2147483647) ; ++i) { n_1325408020[i] = {Field0: 0, Field1: 0, Field2: 0}; }    F.line = 252;
    var Temporary1 = t_1325408017.data; t_1325408017.data = n_1325408020; n_1325408020 = Temporary1;    Label2: {
      F.line = 253;
      var i_1325408095 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__520094544 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__520094544 = (n_1325408020).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_520094545 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_520094545 <= colontmp__520094544)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1325408095 = res_520094545;
            F.line = 254;
            var eh_1325408153 = n_1325408020[chckIndx(i_1325408095, 0, (n_1325408020).length - 1)].Field0;
            if (isFilled_1207959583(eh_1325408153)) {
            F.line = 256;
            var j_1325408157 = (eh_1325408153 & (t_1325408017.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1207959583(t_1325408017.data[chckIndx(j_1325408157, 0, (t_1325408017.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1325408157 = nextTry_1207959586(j_1325408157, (t_1325408017.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1325408335(t_1325408017, t_1325408017, "data", n_1325408020[chckIndx(i_1325408095, 0, (n_1325408020).length - 1)].Field1, n_1325408020[chckIndx(i_1325408095, 0, (n_1325408020).length - 1)].Field2, eh_1325408153, j_1325408157);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_520094545 = addInt(res_520094545, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1325408516(t_1325408519, key_1325408520, hc_1325408521) {
  var result_1325408522 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1325408519.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1325408522 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1325408584 = (hc_1325408521 & (t_1325408519.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1207959583(t_1325408519.data[chckIndx(h_1325408584, 0, (t_1325408519.data).length - 1)].Field0)) break Label2;
          if (((t_1325408519.data[chckIndx(h_1325408584, 0, (t_1325408519.data).length - 1)].Field0 == hc_1325408521) && (t_1325408519.data[chckIndx(h_1325408584, 0, (t_1325408519.data).length - 1)].Field1 == key_1325408520))) {
          F.line = 51;
          result_1325408522 = h_1325408584;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1325408584 = nextTry_1207959586(h_1325408584, (t_1325408519.data).length - 1);
        }
    };
    F.line = 53;
    result_1325408522 = subInt((-1), h_1325408584);
  };
  framePtr = F.prev;

  return result_1325408522;

}

function HEX5BHEX5DHEX3D_1325407627(t_1325407630, key_1325407631, val_1325407632) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1325407630.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym357_1325407692 = slotsNeeded_1207959594(32);
    F.line = 169;
    t_1325407630.counter = 0;
    F.line = 170;
    t_1325407630.data = new Array(chckRange(correctSizeHEX60gensym357_1325407692, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym357_1325407692, 0, 2147483647) ; ++i) { t_1325407630.data[i] = {Field0: 0, Field1: 0, Field2: 0}; }    }
    
    F.line = 59;
    var hc_1325407697 = [0];
    F.line = 60;
    var index_1325407704 = rawGet_1325407149(t_1325407630, key_1325407631, hc_1325407697, 0);
    if ((0 <= index_1325407704)) {
    F.line = 61;
    t_1325407630.data[chckIndx(index_1325407704, 0, (t_1325407630.data).length - 1)].Field2 = val_1325407632;
    }
    else {
      if (((t_1325407630.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym360_1325407821 = slotsNeeded_1207959594(32);
      F.line = 169;
      t_1325407630.counter = 0;
      F.line = 170;
      t_1325407630.data = new Array(chckRange(correctSizeHEX60gensym360_1325407821, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym360_1325407821, 0, 2147483647) ; ++i) { t_1325407630.data[i] = {Field0: 0, Field1: 0, Field2: 0}; }      }
      
      if (mustRehash_1325407826(t_1325407630)) {
      F.line = 51;
      enlarge_1325408014(t_1325407630);
      F.line = 52;
      index_1325407704 = rawGetKnownHC_1325408516(t_1325407630, key_1325407631, hc_1325407697[0]);
      }
      
      F.line = 53;
      index_1325407704 = subInt((-1), index_1325407704);
      F.line = 54;
      rawInsert_1325408335(t_1325407630, t_1325407630, "data", key_1325407631, val_1325407632, hc_1325407697[0], index_1325407704);
      F.line = 62;
      t_1325407630.counter = addInt(t_1325407630.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX28HEX29_1325403998(parser_1325403999, location_1325404000) {
  var result_1325404001 = {Field0: null, Field1: 0};

  var F = {procname: "parse.()", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 637;
    F.filename = "parse.nim";
    result_1325404001 = nimCopy(result_1325404001, parser_1325403999.call(parser_1325403999, location_1325404000), NTI1325400121);
  framePtr = F.prev;

  return result_1325404001;

}

function forwardWrapper_1325406957(parser_1325406958, location_1325406959) {
    var Temporary1;

  var result_1325406960 = {Field0: null, Field1: 0};

  var F = {procname: "parse.forwardWrapper", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1625;
    F.filename = "parse.nim";
    var grammar_1325406961 = grammar_1325401580(parser_1325406958);
    if ((location_1325406959 <= grammar_1325406961.rollbackLocation)) {
    F.line = 1626;
    rollback_1325402182(grammar_1325406961, location_1325406959);
    }
    
    if (contains_1325402309(parser_1325406958.visited, ((location_1325406959) | 0))) {
    F.line = 1627;
    result_1325406960 = nimCopy(result_1325406960, HEX5BHEX5D_1325402640(parser_1325406958.visited, ((location_1325406959) | 0)), NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1629;
    var depth_1325407082 = 0;
    if (contains_1325407136(parser_1325406958.recursionCounter, location_1325406959)) {
    F.line = 1631;
    depth_1325407082 = (Temporary1 = HEX5BHEX5D_1325407492(parser_1325406958.recursionCounter, location_1325406959), Temporary1)[0][Temporary1[1]];
    if ((depth_1325407082 == 0)) {
    F.line = 1633;
    delete grammar_1325406961.flags[1];
    F.line = 1634;
    var colontmp__520094537 = null;
    F.line = 1634;
    var colontmp__520094538 = location_1325406959;
    F.line = 1634;
    result_1325406960 = nimCopy(result_1325406960, {Field0: colontmp__520094537, Field1: colontmp__520094538}, NTI1325400121);
    }
    else {
      F.line = 1636;
      HEX5BHEX5DHEX3D_1325407627(parser_1325406958.recursionCounter, location_1325406959, subInt(depth_1325407082, 1));
      F.line = 1637;
      result_1325406960 = nimCopy(result_1325406960, HEX28HEX29_1325403998(parser_1325406958.subParsers[chckIndx(0, 0, (parser_1325406958.subParsers).length - 1)], location_1325406959), NTI1325400121);
      F.line = 1638;
      HEX5BHEX5DHEX3D_1325407627(parser_1325406958.recursionCounter, location_1325406959, depth_1325407082);
    }
    
    }
    else {
      F.line = 1640;
      HEX5BHEX5DHEX3D_1325407627(parser_1325406958.recursionCounter, location_1325406959, 0);
      F.line = 1641;
      var memoization_1325408873 = (grammar_1325406961.flags[1] != undefined);
      F.line = 1642;
      grammar_1325406961.flags[1] = true;
      F.line = 1644;
      result_1325406960 = nimCopy(result_1325406960, HEX28HEX29_1325403998(parser_1325406958.subParsers[chckIndx(0, 0, (parser_1325406958.subParsers).length - 1)], location_1325406959), NTI1325400121);
      if (!((result_1325406960.Field0 == null))) {
      F.line = 1647;
      depth_1325407082 = 1;
      Label2: {
        F.line = 1649;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 1650;
            HEX5BHEX5DHEX3D_1325407627(parser_1325406958.recursionCounter, location_1325406959, depth_1325407082);
            F.line = 1651;
            grammar_1325406961.flags[1] = true;
            F.line = 1652;
            var rb_1325408934 = (grammar_1325406961.rollbackStack).length;
            F.line = 1653;
            var nextResult_1325408935 = HEX28HEX29_1325403998(parser_1325406958.subParsers[chckIndx(0, 0, (parser_1325406958.subParsers).length - 1)], location_1325406959);
            if ((nextResult_1325408935.Field1 <= result_1325406960.Field1)) {
            Label4: {
              F.line = 1656;
                Label5: while (true) {
                if (!(rb_1325408934 < (grammar_1325406961.rollbackStack).length)) break Label5;
                  F.line = 1657;
                  var rbItem_1325408942 = pop_1325402215(grammar_1325406961, "rollbackStack");
                  F.line = 1658;
                  rbItem_1325408942.Field1();
                  if ((0 < (grammar_1325406961.rollbackStack).length)) {
                  F.line = 1660;
                  grammar_1325406961.rollbackLocation = HEX5BHEX5D_1325402190(grammar_1325406961.rollbackStack, 1).Field0;
                  }
                  else {
                    F.line = 1662;
                    grammar_1325406961.rollbackLocation = (-2);
                  }
                  
                }
            };
            F.line = 1663;
            break Label2;
            }
            
            F.line = 1665;
            result_1325406960 = nimCopy(result_1325406960, nextResult_1325408935, NTI1325400121);
            F.line = 1666;
            depth_1325407082 = addInt(depth_1325407082, 1);
          }
      };
      }
      
      if (!(memoization_1325408873)) {
      F.line = 1668;
      delete grammar_1325406961.flags[1];
      }
      
      if ((grammar_1325406961.flags[1] != undefined)) {
      F.line = 1669;
      HEX5BHEX5DHEX3D_1325402830(parser_1325406958.visited, ((location_1325406959) | 0), result_1325406960);
      }
      
    }
    
  };
  framePtr = F.prev;

  return result_1325406960;

}

function initTable_1325409504(initialSize_1325409507) {
  var result_1325409508 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym374_1325409510 = slotsNeeded_1207959594(chckRange(initialSize_1325409507, 0, 2147483647));
    F.line = 169;
    result_1325409508.counter = 0;
    F.line = 170;
    result_1325409508.data = new Array(chckRange(correctSizeHEX60gensym374_1325409510, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym374_1325409510, 0, 2147483647) ; ++i) { result_1325409508.data[i] = {Field0: 0, Field1: 0, Field2: 0}; }  framePtr = F.prev;

  return result_1325409508;

}

function init_1325409497(forward_1325409498) {
  var result_1325409499 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1677;
    F.filename = "parse.nim";
    var _ = init_1325401041(forward_1325409498, [58,70,111,114,119,97,114,100]);
    F.line = 1678;
    forward_1325409498.flags[6] = true;
    F.line = 1679;
    forward_1325409498.call = forwardWrapper_1325406957;
    F.line = 1680;
    forward_1325409498.recursionCounter = nimCopy(forward_1325409498.recursionCounter, initTable_1325409504(32), NTI1325404801);
    F.line = 1681;
    result_1325409499 = forward_1325409498;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325409499;

}

function new_520094009() {
  var result_520094012 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_520094014 = null;
    F.line = 839;
    r_520094014 = ({m_type: NTI1325404793, recursionCounter: ({data: [], counter: 0}), ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_520094012 = r_520094014;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094012;

}

function HEX7C_1325406265(other_1325406266, alternative_1325406267) {
  var result_1325406268 = null;

  var F = {procname: "parse.|", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(alternative_1325406267.pname, []))) {
    F.line = 1401;
    F.filename = "parse.nim";
    result_1325406268 = init_1325406057(new_1325406146(), [other_1325406266, alternative_1325406267]);
    break BeforeRet;
    }
    
    F.line = 1402;
    alternative_1325406267.subParsers = nimCopy(null, HEX26_1325406276([other_1325406266], alternative_1325406267.subParsers), NTI1325404318);
    F.line = 1403;
    result_1325406268 = alternative_1325406267;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406268;

}

function HEX3EHEX3E_1325406849(parser_1325406850) {
  var result_1325406851 = null;

  var F = {procname: "parse.>>", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1561;
    F.filename = "parse.nim";
    result_1325406851 = init_1325406779(new_1325406813(), parser_1325406850, true);
  framePtr = F.prev;

  return result_1325406851;

}

function nsuToLowerAsciiChar(c_754974805) {
  var result_754974806 = 0;

  var F = {procname: "strutils.toLowerAscii", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((ConstSet18[c_754974805] != undefined)) {
    F.line = 218;
    F.filename = "strutils.nim";
    result_754974806 = (c_754974805 ^ 32);
    }
    else {
      F.line = 220;
      result_754974806 = c_754974805;
    }
    
  framePtr = F.prev;

  return result_754974806;

}

function nsuToLowerAsciiStr(s_754974815) {
  var result_754974816 = [];

  var F = {procname: "strutils.toLowerAscii", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "strutils.nim";
    result_754974816 = nimCopy(null, mnewString(chckRange((s_754974815).length, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 224;
      var iHEX60gensym7_754974822 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094553 = 0;
      F.line = 224;
      F.filename = "strutils.nim";
      colontmp__520094553 = subInt((s_754974815).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094554 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094554 <= colontmp__520094553)) break Label3;
            F.line = 238;
            F.filename = "strutils.nim";
            iHEX60gensym7_754974822 = res_520094554;
            F.line = 238;
            result_754974816[chckIndx(iHEX60gensym7_754974822, 0, (result_754974816).length - 1)] = nsuToLowerAsciiChar(s_754974815[chckIndx(iHEX60gensym7_754974822, 0, (s_754974815).length - 1)]);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094554 = addInt(res_520094554, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754974816;

}

function cmpIgnoreCaseAscii_1325405217(s_1325405218, pos_1325405219, cmp_1325405220) {
  var result_1325405221 = false;

  var F = {procname: "parse.cmpIgnoreCaseAscii", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 1044;
      F.filename = "parse.nim";
      var i_1325405226 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520094557 = 0;
      F.line = 1044;
      F.filename = "parse.nim";
      colontmp__520094557 = (cmp_1325405220).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094558 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094558 < colontmp__520094557)) break Label3;
            F.line = 1044;
            F.filename = "parse.nim";
            i_1325405226 = i_520094558;
            if (!((cmp_1325405220[chckIndx(i_1325405226, 0, (cmp_1325405220).length - 1)] == nsuToLowerAsciiChar(s_1325405218[chckIndx(addInt(pos_1325405219, ((i_1325405226) | 0)), 0, (s_1325405218).length - 1)])))) {
            F.line = 1046;
            result_1325405221 = false;
            break BeforeRet;
            }
            
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094558 = addInt(i_520094558, 1);
          }
      };
    };
    F.line = 1047;
    F.filename = "parse.nim";
    result_1325405221 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405221;

}

function binarySearch_973079549(c_973079550, tab_973079551, len_973079552, stride_973079553) {
  var result_973079554 = 0;

  var F = {procname: "unicode.binarySearch", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 468;
    F.filename = "unicode.nim";
    var n_973079555 = len_973079552;
    F.line = 469;
    var t_973079556 = 0;
    Label1: {
      F.line = 470;
        Label2: while (true) {
        if (!(1 < n_973079555)) break Label2;
          F.line = 471;
          var m_973079557 = divInt(n_973079555, 2);
          F.line = 472;
          var p_973079558 = addInt(t_973079556, mulInt(m_973079557, stride_973079553));
          if ((((tab_973079551[chckIndx(p_973079558, 0, (tab_973079551).length - 1)]) | 0) <= c_973079550)) {
          F.line = 474;
          t_973079556 = p_973079558;
          F.line = 475;
          n_973079555 = subInt(n_973079555, m_973079557);
          }
          else {
            F.line = 477;
            n_973079555 = m_973079557;
          }
          
        }
    };
    if ((!((n_973079555 == 0)) && (((tab_973079551[chckIndx(t_973079556, 0, (tab_973079551).length - 1)]) | 0) <= c_973079550))) {
    F.line = 479;
    result_973079554 = t_973079556;
    break BeforeRet;
    }
    
    F.line = 480;
    result_973079554 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_973079554;

}

function nuctoLower(c_973079560) {
  var result_973079561 = 0;

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 491;
    F.filename = "unicode.nim";
    var c_973079562 = c_973079560;
    F.line = 492;
    var p_973079571 = binarySearch_973079549(c_973079562, toLowerRanges_973079540, 45, 3);
    if ((((0 <= p_973079571) && (((toLowerRanges_973079540[chckIndx(p_973079571, 0, (toLowerRanges_973079540).length - 1)]) | 0) <= c_973079562)) && (c_973079562 <= ((toLowerRanges_973079540[chckIndx(addInt(p_973079571, 1), 0, (toLowerRanges_973079540).length - 1)]) | 0)))) {
    F.line = 494;
    result_973079561 = subInt(addInt(c_973079562, ((toLowerRanges_973079540[chckIndx(addInt(p_973079571, 2), 0, (toLowerRanges_973079540).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    F.line = 495;
    p_973079571 = binarySearch_973079549(c_973079562, toLowerSinglets_973079541, 610, 2);
    if (((0 <= p_973079571) && (c_973079562 == ((toLowerSinglets_973079541[chckIndx(p_973079571, 0, (toLowerSinglets_973079541).length - 1)]) | 0)))) {
    F.line = 497;
    result_973079561 = subInt(addInt(c_973079562, ((toLowerSinglets_973079541[chckIndx(addInt(p_973079571, 1), 0, (toLowerSinglets_973079541).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    F.line = 498;
    result_973079561 = c_973079562;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_973079561;

}

function HEX3CHEX3DHEX25_33555507(x_33555508, y_33555509) {
  var result_33555510 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 185;
    F.filename = "comparisons.nim";
    result_33555510 = (Number(BigInt.asUintN(32, BigInt(x_33555508))) <= Number(BigInt.asUintN(32, BigInt(y_33555509))));
  framePtr = F.prev;

  return result_33555510;

}

function nuctoLowerStr(s_973080861) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_973080862 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 658;
    F.filename = "unicode.nim";
    result_973080862 = nimCopy(null, mnewString(chckRange((s_973080861).length, 0, 2147483647)), NTI33554449);
    F.line = 660;
    var iHEX60gensym252_973080869 = 0;
    F.line = 661;
    var resultIndexHEX60gensym252_973080870 = 0;
    F.line = 662;
    var runeHEX60gensym252_973080871 = 0;
    Label1: {
      F.line = 680;
        Label2: while (true) {
        if (!(iHEX60gensym252_973080869 < (s_973080861).length)) break Label2;
          if ((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] <= 127)) {
          F.line = 91;
          runeHEX60gensym252_973080871 = chckRange(s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)], (-2147483648), 2147483647);
          F.line = 92;
          iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          else {
          if (((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_973080869 <= subInt((s_973080861).length, 2))) {
          F.line = 96;
          runeHEX60gensym252_973080871 = chckRange(((((((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 1), 0, (s_973080861).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 98;
          iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 2);
          }
          else {
            F.line = 100;
            runeHEX60gensym252_973080871 = 65533;
            F.line = 101;
            iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          
          }
          else {
          if (((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_973080869 <= subInt((s_973080861).length, 3))) {
          F.line = 106;
          runeHEX60gensym252_973080871 = chckRange(((((((((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 1), 0, (s_973080861).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 2), 0, (s_973080861).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 109;
          iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 3);
          }
          else {
            F.line = 111;
            runeHEX60gensym252_973080871 = 65533;
            F.line = 112;
            iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          
          }
          else {
          if (((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_973080869 <= subInt((s_973080861).length, 4))) {
          F.line = 118;
          runeHEX60gensym252_973080871 = chckRange(((((((((((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 1), 0, (s_973080861).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 2), 0, (s_973080861).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 3), 0, (s_973080861).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 122;
          iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 4);
          }
          else {
            F.line = 124;
            runeHEX60gensym252_973080871 = 65533;
            F.line = 125;
            iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          
          }
          else {
          if (((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_973080869 <= subInt((s_973080861).length, 5))) {
          F.line = 132;
          runeHEX60gensym252_973080871 = chckRange(((((((((((((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 1), 0, (s_973080861).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 2), 0, (s_973080861).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 3), 0, (s_973080861).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 4), 0, (s_973080861).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 137;
          iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 5);
          }
          else {
            F.line = 139;
            runeHEX60gensym252_973080871 = 65533;
            F.line = 140;
            iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          
          }
          else {
          if (((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_973080869 <= subInt((s_973080861).length, 6))) {
          F.line = 148;
          runeHEX60gensym252_973080871 = chckRange(((((((((((((((s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 1), 0, (s_973080861).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 2), 0, (s_973080861).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 3), 0, (s_973080861).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 4), 0, (s_973080861).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_973080861[chckIndx(addInt(iHEX60gensym252_973080869, 5), 0, (s_973080861).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 154;
          iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 6);
          }
          else {
            F.line = 156;
            runeHEX60gensym252_973080871 = 65533;
            F.line = 157;
            iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          
          }
          else {
            F.line = 159;
            runeHEX60gensym252_973080871 = chckRange(s_973080861[chckIndx(iHEX60gensym252_973080869, 0, (s_973080861).length - 1)], (-2147483648), 2147483647);
            F.line = 160;
            iHEX60gensym252_973080869 = addInt(iHEX60gensym252_973080869, 1);
          }
          }}}}}
          F.line = 665;
          runeHEX60gensym252_973080871 = nuctoLower(runeHEX60gensym252_973080871);
          F.line = 221;
          var iHEX60gensym274_973081112 = runeHEX60gensym252_973080871;
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_973081112, 127)) {
          F.line = 223;
          if (result_973080862.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_973080870, 1), 0, 2147483647), Temporary3)) { for (var i = result_973080862.length; i < Temporary3; ++i) result_973080862.push(0); }
         else {result_973080862.length = Temporary3; };
          F.line = 224;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 0), 0, (result_973080862).length - 1)] = chckRange(iHEX60gensym274_973081112, 0, 255);
          F.line = 225;
          resultIndexHEX60gensym252_973080870 = addInt(resultIndexHEX60gensym252_973080870, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_973081112, 2047)) {
          F.line = 227;
          if (result_973080862.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_973080870, 2), 0, 2147483647), Temporary4)) { for (var i = result_973080862.length; i < Temporary4; ++i) result_973080862.push(0); }
         else {result_973080862.length = Temporary4; };
          F.line = 228;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 0), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 >> 6) | 192), 0, 255);
          F.line = 229;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 1), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 & 63) | 128), 0, 255);
          F.line = 230;
          resultIndexHEX60gensym252_973080870 = addInt(resultIndexHEX60gensym252_973080870, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_973081112, 65535)) {
          F.line = 232;
          if (result_973080862.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_973080870, 3), 0, 2147483647), Temporary5)) { for (var i = result_973080862.length; i < Temporary5; ++i) result_973080862.push(0); }
         else {result_973080862.length = Temporary5; };
          F.line = 233;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 0), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 >> 12) | 224), 0, 255);
          F.line = 234;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 1), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 6) & 63) | 128), 0, 255);
          F.line = 235;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 2), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 & 63) | 128), 0, 255);
          F.line = 236;
          resultIndexHEX60gensym252_973080870 = addInt(resultIndexHEX60gensym252_973080870, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_973081112, 2097151)) {
          F.line = 238;
          if (result_973080862.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_973080870, 4), 0, 2147483647), Temporary6)) { for (var i = result_973080862.length; i < Temporary6; ++i) result_973080862.push(0); }
         else {result_973080862.length = Temporary6; };
          F.line = 239;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 0), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 >> 18) | 240), 0, 255);
          F.line = 240;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 1), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 12) & 63) | 128), 0, 255);
          F.line = 241;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 2), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 6) & 63) | 128), 0, 255);
          F.line = 242;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 3), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 & 63) | 128), 0, 255);
          F.line = 243;
          resultIndexHEX60gensym252_973080870 = addInt(resultIndexHEX60gensym252_973080870, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_973081112, 67108863)) {
          F.line = 245;
          if (result_973080862.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_973080870, 5), 0, 2147483647), Temporary7)) { for (var i = result_973080862.length; i < Temporary7; ++i) result_973080862.push(0); }
         else {result_973080862.length = Temporary7; };
          F.line = 246;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 0), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 >> 24) | 248), 0, 255);
          F.line = 247;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 1), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 18) & 63) | 128), 0, 255);
          F.line = 248;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 2), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 12) & 63) | 128), 0, 255);
          F.line = 249;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 3), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 6) & 63) | 128), 0, 255);
          F.line = 250;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 4), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 & 63) | 128), 0, 255);
          F.line = 251;
          resultIndexHEX60gensym252_973080870 = addInt(resultIndexHEX60gensym252_973080870, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_973081112, 2147483647)) {
          F.line = 253;
          if (result_973080862.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_973080870, 6), 0, 2147483647), Temporary8)) { for (var i = result_973080862.length; i < Temporary8; ++i) result_973080862.push(0); }
         else {result_973080862.length = Temporary8; };
          F.line = 254;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 0), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 >> 30) | 252), 0, 255);
          F.line = 255;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 1), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 24) & 63) | 128), 0, 255);
          F.line = 256;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 2), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 18) & 63) | 128), 0, 255);
          F.line = 257;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 3), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 12) & 63) | 128), 0, 255);
          F.line = 258;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 4), 0, (result_973080862).length - 1)] = chckRange((((iHEX60gensym274_973081112 >> 6) & 63) | 128), 0, 255);
          F.line = 259;
          result_973080862[chckIndx(addInt(resultIndexHEX60gensym252_973080870, 5), 0, (result_973080862).length - 1)] = chckRange(((iHEX60gensym274_973081112 & 63) | 128), 0, 255);
          F.line = 260;
          resultIndexHEX60gensym252_973080870 = addInt(resultIndexHEX60gensym252_973080870, 6);
          }
          else {
          }
          }}}}}
        }
    };
  framePtr = F.prev;

  return result_973080862;

}

function toLower_973086104(s_973086105) {
  var result_973086106 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1297;
    F.filename = "unicode.nim";
    result_973086106 = nimCopy(null, nuctoLowerStr((s_973086105.slice(0, (s_973086105).length - 1 + 1))), NTI33554449);
  framePtr = F.prev;

  return result_973086106;

}

function HEX3DHEX3D_973079536(a_973079537, b_973079538) {
  var result_973079539 = false;

  var F = {procname: "unicode.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 462;
    F.filename = "unicode.nim";
    result_973079539 = (((a_973079537) | 0) == ((b_973079538) | 0));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_973079539;

}

function cmpIgnoreCaseUnicode_1325405227(s_1325405228, pos_1325405229, cmp_1325405230) {
                var Temporary5;
              var Temporary6;
                var Temporary7;
              var Temporary8;
              var Temporary9;
                var Temporary10;
              var Temporary11;
              var Temporary12;
              var Temporary13;
                var Temporary14;
              var Temporary15;
              var Temporary16;
              var Temporary17;
              var Temporary18;
                var Temporary19;
              var Temporary20;
              var Temporary21;
              var Temporary22;
              var Temporary23;
              var Temporary24;
                var Temporary25;
              var Temporary26;
              var Temporary27;
              var Temporary28;
              var Temporary29;
              var Temporary30;
              var Temporary31;
                var Temporary32;

  var result_1325405231 = false;

  var F = {procname: "parse.cmpIgnoreCaseUnicode", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1051;
    F.filename = "parse.nim";
    var i_1325405232 = pos_1325405229;
    F.line = 1052;
    var r_1325405233 = 0;
    Label1: {
      F.line = 1054;
      var c_1325405234 = 0;
      Label2: {
        F.line = 1346;
        F.filename = "unicode.nim";
        var rune_520094569 = 0;
        F.line = 803;
        var i_520094570 = 0;
        F.line = 804;
        var result_520094571 = 0;
        Label3: {
          F.line = 805;
            Label4: while (true) {
            if (!(i_520094570 < ((cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1))).length)) break Label4;
              if (((Temporary5 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary5)[chckIndx(i_520094570, 0, (Temporary5).length - 1)] <= 127)) {
              F.line = 91;
              result_520094571 = chckRange((Temporary6 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary6)[chckIndx(i_520094570, 0, (Temporary6).length - 1)], (-2147483648), 2147483647);
              F.line = 92;
              i_520094570 = addInt(i_520094570, 1);
              }
              else {
              if ((((Temporary7 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary7)[chckIndx(i_520094570, 0, (Temporary7).length - 1)] >>> 5) == 6)) {
              if ((i_520094570 <= subInt(((cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1))).length, 2))) {
              F.line = 96;
              result_520094571 = chckRange((((((((Temporary8 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary8)[chckIndx(i_520094570, 0, (Temporary8).length - 1)] & 31) >>> 0) << 6) >>> 0) | (((Temporary9 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary9)[chckIndx(addInt(i_520094570, 1), 0, (Temporary9).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 98;
              i_520094570 = addInt(i_520094570, 2);
              }
              else {
                F.line = 100;
                result_520094571 = 65533;
                F.line = 101;
                i_520094570 = addInt(i_520094570, 1);
              }
              
              }
              else {
              if ((((Temporary10 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary10)[chckIndx(i_520094570, 0, (Temporary10).length - 1)] >>> 4) == 14)) {
              if ((i_520094570 <= subInt(((cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1))).length, 3))) {
              F.line = 106;
              result_520094571 = chckRange((((((((((Temporary11 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary11)[chckIndx(i_520094570, 0, (Temporary11).length - 1)] & 15) >>> 0) << 12) >>> 0) | (((((Temporary12 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary12)[chckIndx(addInt(i_520094570, 1), 0, (Temporary12).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary13 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary13)[chckIndx(addInt(i_520094570, 2), 0, (Temporary13).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 109;
              i_520094570 = addInt(i_520094570, 3);
              }
              else {
                F.line = 111;
                result_520094571 = 65533;
                F.line = 112;
                i_520094570 = addInt(i_520094570, 1);
              }
              
              }
              else {
              if ((((Temporary14 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary14)[chckIndx(i_520094570, 0, (Temporary14).length - 1)] >>> 3) == 30)) {
              if ((i_520094570 <= subInt(((cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1))).length, 4))) {
              F.line = 118;
              result_520094571 = chckRange((((((((((((Temporary15 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary15)[chckIndx(i_520094570, 0, (Temporary15).length - 1)] & 7) >>> 0) << 18) >>> 0) | (((((Temporary16 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary16)[chckIndx(addInt(i_520094570, 1), 0, (Temporary16).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary17 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary17)[chckIndx(addInt(i_520094570, 2), 0, (Temporary17).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary18 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary18)[chckIndx(addInt(i_520094570, 3), 0, (Temporary18).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 122;
              i_520094570 = addInt(i_520094570, 4);
              }
              else {
                F.line = 124;
                result_520094571 = 65533;
                F.line = 125;
                i_520094570 = addInt(i_520094570, 1);
              }
              
              }
              else {
              if ((((Temporary19 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary19)[chckIndx(i_520094570, 0, (Temporary19).length - 1)] >>> 2) == 62)) {
              if ((i_520094570 <= subInt(((cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1))).length, 5))) {
              F.line = 132;
              result_520094571 = chckRange((((((((((((((Temporary20 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary20)[chckIndx(i_520094570, 0, (Temporary20).length - 1)] & 3) >>> 0) << 24) >>> 0) | (((((Temporary21 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary21)[chckIndx(addInt(i_520094570, 1), 0, (Temporary21).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary22 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary22)[chckIndx(addInt(i_520094570, 2), 0, (Temporary22).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary23 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary23)[chckIndx(addInt(i_520094570, 3), 0, (Temporary23).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary24 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary24)[chckIndx(addInt(i_520094570, 4), 0, (Temporary24).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 137;
              i_520094570 = addInt(i_520094570, 5);
              }
              else {
                F.line = 139;
                result_520094571 = 65533;
                F.line = 140;
                i_520094570 = addInt(i_520094570, 1);
              }
              
              }
              else {
              if ((((Temporary25 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary25)[chckIndx(i_520094570, 0, (Temporary25).length - 1)] >>> 1) == 126)) {
              if ((i_520094570 <= subInt(((cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1))).length, 6))) {
              F.line = 148;
              result_520094571 = chckRange((((((((((((((((Temporary26 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary26)[chckIndx(i_520094570, 0, (Temporary26).length - 1)] & 1) >>> 0) << 30) >>> 0) | (((((Temporary27 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary27)[chckIndx(addInt(i_520094570, 1), 0, (Temporary27).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | (((((Temporary28 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary28)[chckIndx(addInt(i_520094570, 2), 0, (Temporary28).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | (((((Temporary29 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary29)[chckIndx(addInt(i_520094570, 3), 0, (Temporary29).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | (((((Temporary30 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary30)[chckIndx(addInt(i_520094570, 4), 0, (Temporary30).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | (((Temporary31 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary31)[chckIndx(addInt(i_520094570, 5), 0, (Temporary31).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 154;
              i_520094570 = addInt(i_520094570, 6);
              }
              else {
                F.line = 156;
                result_520094571 = 65533;
                F.line = 157;
                i_520094570 = addInt(i_520094570, 1);
              }
              
              }
              else {
                F.line = 159;
                result_520094571 = chckRange((Temporary32 = (cmp_1325405230.slice(0, (cmp_1325405230).length - 1 + 1)), Temporary32)[chckIndx(i_520094570, 0, (Temporary32).length - 1)], (-2147483648), 2147483647);
                F.line = 160;
                i_520094570 = addInt(i_520094570, 1);
              }
              }}}}}
              F.line = 1346;
              rune_520094569 = result_520094571;
              F.line = 1054;
              F.filename = "parse.nim";
              c_1325405234 = rune_520094569;
              if ((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] <= 127)) {
              F.line = 91;
              F.filename = "unicode.nim";
              r_1325405233 = chckRange(s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)], (-2147483648), 2147483647);
              F.line = 92;
              i_1325405232 = addInt(i_1325405232, 1);
              }
              else {
              if (((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] >>> 5) == 6)) {
              if ((i_1325405232 <= ((subInt((s_1325405228).length, 2)) | 0))) {
              F.line = 96;
              r_1325405233 = chckRange(((((((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_1325405228[chckIndx(addInt(i_1325405232, 1), 0, (s_1325405228).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 98;
              i_1325405232 = addInt(i_1325405232, 2);
              }
              else {
                F.line = 100;
                r_1325405233 = 65533;
                F.line = 101;
                i_1325405232 = addInt(i_1325405232, 1);
              }
              
              }
              else {
              if (((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] >>> 4) == 14)) {
              if ((i_1325405232 <= ((subInt((s_1325405228).length, 3)) | 0))) {
              F.line = 106;
              r_1325405233 = chckRange(((((((((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 1), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1325405228[chckIndx(addInt(i_1325405232, 2), 0, (s_1325405228).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 109;
              i_1325405232 = addInt(i_1325405232, 3);
              }
              else {
                F.line = 111;
                r_1325405233 = 65533;
                F.line = 112;
                i_1325405232 = addInt(i_1325405232, 1);
              }
              
              }
              else {
              if (((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] >>> 3) == 30)) {
              if ((i_1325405232 <= ((subInt((s_1325405228).length, 4)) | 0))) {
              F.line = 118;
              r_1325405233 = chckRange(((((((((((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 1), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 2), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1325405228[chckIndx(addInt(i_1325405232, 3), 0, (s_1325405228).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 122;
              i_1325405232 = addInt(i_1325405232, 4);
              }
              else {
                F.line = 124;
                r_1325405233 = 65533;
                F.line = 125;
                i_1325405232 = addInt(i_1325405232, 1);
              }
              
              }
              else {
              if (((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] >>> 2) == 62)) {
              if ((i_1325405232 <= ((subInt((s_1325405228).length, 5)) | 0))) {
              F.line = 132;
              r_1325405233 = chckRange(((((((((((((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 1), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 2), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 3), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1325405228[chckIndx(addInt(i_1325405232, 4), 0, (s_1325405228).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 137;
              i_1325405232 = addInt(i_1325405232, 5);
              }
              else {
                F.line = 139;
                r_1325405233 = 65533;
                F.line = 140;
                i_1325405232 = addInt(i_1325405232, 1);
              }
              
              }
              else {
              if (((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] >>> 1) == 126)) {
              if ((i_1325405232 <= ((subInt((s_1325405228).length, 6)) | 0))) {
              F.line = 148;
              r_1325405233 = chckRange(((((((((((((((s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 1), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 2), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 3), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_1325405228[chckIndx(addInt(i_1325405232, 4), 0, (s_1325405228).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_1325405228[chckIndx(addInt(i_1325405232, 5), 0, (s_1325405228).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
              F.line = 154;
              i_1325405232 = addInt(i_1325405232, 6);
              }
              else {
                F.line = 156;
                r_1325405233 = 65533;
                F.line = 157;
                i_1325405232 = addInt(i_1325405232, 1);
              }
              
              }
              else {
                F.line = 159;
                r_1325405233 = chckRange(s_1325405228[chckIndx(i_1325405232, 0, (s_1325405228).length - 1)], (-2147483648), 2147483647);
                F.line = 160;
                i_1325405232 = addInt(i_1325405232, 1);
              }
              }}}}}
              if (!(HEX3DHEX3D_973079536(c_1325405234, nuctoLower(r_1325405233)))) {
              F.line = 1057;
              F.filename = "parse.nim";
              result_1325405231 = false;
              break BeforeRet;
              }
              
            }
        };
      };
    };
    F.line = 1058;
    result_1325405231 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405231;

}

function init_1325405456(ignoreCaseParser_1325405457, text_1325405458) {
  var result_1325405459 = null;

  var F = {procname: "parse.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((text_1325405458).length <= 2147483647))) {
    F.line = 1061;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1061, 3) `text.len <= MaxTextLen` "));
    }
    
    F.line = 1062;
    var _ = init_1325401041(ignoreCaseParser_1325405457, [58,73,103,110,111,114,101,67,97,115,101]);
    F.line = 1063;
    ignoreCaseParser_1325405457.flags[0] = true;
    F.line = 1064;
    var asciiOnly_1325405469 = true;
    Label1: {
      F.line = 1065;
      var ch_1325405470 = 0;
      F.line = 259;
      F.filename = "iterators.nim";
      var i_520094549 = 0;
      F.line = 260;
      var L_520094550 = (text_1325405458).length;
      Label2: {
        F.line = 261;
          Label3: while (true) {
          if (!(i_520094549 < L_520094550)) break Label3;
            F.line = 1065;
            F.filename = "parse.nim";
            ch_1325405470 = text_1325405458[chckIndx(i_520094549, 0, (text_1325405458).length - 1)];
            if ((128 <= ch_1325405470)) {
            F.line = 1067;
            asciiOnly_1325405469 = false;
            F.line = 1068;
            break Label1;
            }
            
            F.line = 263;
            F.filename = "iterators.nim";
            i_520094549 = addInt(i_520094549, 1);
            if (!(((text_1325405458).length == L_520094550))) {
            F.line = 264;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    if (asciiOnly_1325405469) {
    F.line = 1070;
    F.filename = "parse.nim";
    ignoreCaseParser_1325405457.text = nimCopy(null, nsuToLowerAsciiStr(text_1325405458), NTI33554449);
    F.line = 1071;
    ignoreCaseParser_1325405457.compare = cmpIgnoreCaseAscii_1325405217;
    }
    else {
      F.line = 1073;
      ignoreCaseParser_1325405457.text = nimCopy(null, toLower_973086104(text_1325405458), NTI33554449);
      F.line = 1074;
      ignoreCaseParser_1325405457.compare = cmpIgnoreCaseUnicode_1325405227;
    }
    
    F.line = 1075;
    result_1325405459 = ignoreCaseParser_1325405457;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405459;

}

function new_520094141() {
  var result_520094144 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 836;
    F.filename = "system.nim";
    var r_520094146 = null;
    F.line = 839;
    r_520094146 = ({m_type: NTI1325403264, text: [], compare: null, ptype: [], pname: [], nodeName: [null, 0], flags: {}, uniqueID: 0, grammarVar: null, symbol: null, subParsers: [], call: null, visited: ({data: [], counter: 0})});
    F.line = 840;
    result_520094144 = r_520094146;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094144;

}

function set_1325409533(forward_1325409534, parser_1325409535) {
  var F = {procname: "parse.set", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1687;
    F.filename = "parse.nim";
    forward_1325409534.subParsers = nimCopy(null, [parser_1325409535], NTI1325404012);
    if (eqStrings(parser_1325409535.pname, [])) {
    if (!(eqStrings(forward_1325409534.pname, []))) {
    F.line = 1690;
    var _ = assignName_1325401207(forward_1325409534.pname, parser_1325409535);
    F.line = 1691;
    forward_1325409534.symbol = parser_1325409535;
    }
    
    }
    
    if ((forward_1325409534.flags[7] != undefined)) {
    F.line = 1692;
    parser_1325409535.flags[7] = true;
    }
    
    if ((parser_1325409535.flags[9] != undefined)) {
    F.line = 1694;
    forward_1325409534.flags[9] = true;
    }
    else {
      if (!((forward_1325409534.flags[7] != undefined))) {
      F.line = 1696;
      delete parser_1325409535.flags[7];
      }
      
      F.line = 1697;
      delete forward_1325409534.flags[9];
    }
    
    F.line = 1698;
    forward_1325409534.pname = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  
}

function collect_descendants_1325401488(parser_1325401489, selector_1325401490, descs_1325401491, descs_1325401491_Idx) {
  var F = {procname: "parse.collect_descendants", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!((!((parser_1325401489.flags[6] != undefined)) || (0 < (parser_1325401489.subParsers).length)))) {
    F.line = 331;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(331, 5) `isForward notin parser.flags or parser.subParsers.len > 0` "));
    }
    
    if (!((parser_1325401489.flags[10] != undefined))) {
    F.line = 333;
    parser_1325401489.flags[10] = true;
    F.line = 334;
    descs_1325401491[descs_1325401491_Idx].push(parser_1325401489);;
    F.line = 335;
    var subIter_1325401516 = selector_1325401490;
    Label1: {
      F.line = 336;
      var p_1325401520 = null;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__520094579 = [];
      F.line = 336;
      F.filename = "parse.nim";
      colontmp__520094579 = subIter_1325401516(parser_1325401489);
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094580 = 0;
      F.line = 242;
      var L_520094581 = (colontmp__520094579).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094580 < L_520094581)) break Label3;
            F.line = 336;
            F.filename = "parse.nim";
            p_1325401520 = colontmp__520094579[chckIndx(i_520094580, 0, (colontmp__520094579).length - 1)];
            F.line = 336;
            collect_descendants_1325401488(p_1325401520, selector_1325401490, descs_1325401491, descs_1325401491_Idx);
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094580 = addInt(i_520094580, 1);
            if (!(((colontmp__520094579).length == L_520094581))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function descendants_1325401536(parser_1325401537, selector_1325401538) {
  var result_1325401539 = [];

  var F = {procname: "parse.descendants", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 340;
    F.filename = "parse.nim";
    var descs_1325401544 = [[]];
    F.line = 341;
    collect_descendants_1325401488(parser_1325401537, selector_1325401538, descs_1325401544, 0);
    F.line = 342;
    result_1325401539 = nimCopy(null, descs_1325401544[0], NTI1325400947);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401539;

}

function subs_1325401452(parser_1325401453) {
  var result_1325401454 = [];

  var F = {procname: "parse.subs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 319;
    F.filename = "parse.nim";
    result_1325401454 = nimCopy(null, parser_1325401453.subParsers, NTI1325400149);
  framePtr = F.prev;

  return result_1325401454;

}

function resetTraversalTracker_1325401561(parser_1325401562) {
  var F = {procname: "parse.resetTraversalTracker", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if ((parser_1325401562.flags[10] != undefined)) {
    F.line = 369;
    F.filename = "parse.nim";
    delete parser_1325401562.flags[10];
    Label1: {
      F.line = 370;
      var p_1325401574 = null;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__520094584 = [];
      F.line = 370;
      F.filename = "parse.nim";
      colontmp__520094584 = refdParsers_1325401427(parser_1325401562);
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094585 = 0;
      F.line = 242;
      var L_520094586 = (colontmp__520094584).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094585 < L_520094586)) break Label3;
            F.line = 370;
            F.filename = "parse.nim";
            p_1325401574 = colontmp__520094584[chckIndx(i_520094585, 0, (colontmp__520094584).length - 1)];
            F.line = 370;
            resetTraversalTracker_1325401561(p_1325401574);
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094585 = addInt(i_520094585, 1);
            if (!(((colontmp__520094584).length == L_520094586))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function DropStrings_1325405133(root_1325405134) {
  var F = {procname: "parse.DropStrings", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 973;
      F.filename = "parse.nim";
      var p_1325405138 = null;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__520094574 = [];
      F.line = 376;
      F.filename = "parse.nim";
      colontmp__520094574 = descendants_1325401536(root_1325405134, subs_1325401452);
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094575 = 0;
      F.line = 242;
      var L_520094576 = (colontmp__520094574).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094575 < L_520094576)) break Label3;
            F.line = 376;
            F.filename = "parse.nim";
            p_1325405138 = colontmp__520094574[chckIndx(i_520094575, 0, (colontmp__520094574).length - 1)];
            if ((eqStrings(p_1325405138.ptype, [58,84,101,120,116]) && (p_1325405138.flags[7] != undefined))) {
            F.line = 975;
            p_1325405138.flags[9] = true;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094575 = addInt(i_520094575, 1);
            if (!(((colontmp__520094574).length == L_520094576))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 378;
    F.filename = "parse.nim";
    resetTraversalTracker_1325401561(root_1325405134);
  framePtr = F.prev;

  
}

function find_939524150(a_939524153, item_939524154) {
  var result_939524155 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_939524155 = 0;
    Label1: {
      F.line = 1666;
      var i_939524159 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_520094601 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_520094601 < (a_939524153).length)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_939524159 = a_939524153[chckIndx(i_520094601, 0, (a_939524153).length - 1)];
            if (eqStrings(i_939524159, item_939524154)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_939524155 = addInt(result_939524155, 1);
            F.line = 16;
            F.filename = "iterators.nim";
            i_520094601 = addInt(i_520094601, 1);
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_939524155 = (-1);
  };
  framePtr = F.prev;

  return result_939524155;

}

function contains_939524145(a_939524147, item_939524148) {
  var result_939524149 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1683;
    F.filename = "system.nim";
    result_939524149 = (0 <= find_939524150(a_939524147, item_939524148));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_939524149;

}

function nsuJoinSep(a_754976299, sep_754976300) {
  var result_754976301 = [];

  var F = {procname: "strutils.join", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((0 < (a_754976299).length)) {
    F.line = 1845;
    F.filename = "strutils.nim";
    var L_754976308 = mulInt((sep_754976300).length, subInt((a_754976299).length, 1));
    Label1: {
      F.line = 1846;
      var i_754976316 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094604 = 0;
      F.line = 1846;
      F.filename = "strutils.nim";
      colontmp__520094604 = (a_754976299).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094605 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094605 <= colontmp__520094604)) break Label3;
            F.line = 1846;
            F.filename = "strutils.nim";
            i_754976316 = res_520094605;
            F.line = 1846;
            L_754976308 = addInt(L_754976308, (a_754976299[chckIndx(i_754976316, 0, (a_754976299).length - 1)]).length);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094605 = addInt(res_520094605, 1);
          }
      };
    };
    F.line = 1847;
    F.filename = "strutils.nim";
    result_754976301 = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 1848;
    result_754976301.push.apply(result_754976301, a_754976299[chckIndx(0, 0, (a_754976299).length - 1)]);;
    Label4: {
      F.line = 1849;
      var i_754976329 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094608 = 0;
      F.line = 1849;
      F.filename = "strutils.nim";
      colontmp__520094608 = (a_754976299).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094609 = 1;
      Label5: {
        F.line = 91;
          Label6: while (true) {
          if (!(res_520094609 <= colontmp__520094608)) break Label6;
            F.line = 1849;
            F.filename = "strutils.nim";
            i_754976329 = res_520094609;
            F.line = 1849;
            result_754976301.push.apply(result_754976301, sep_754976300);;
            F.line = 1849;
            result_754976301.push.apply(result_754976301, a_754976299[chckIndx(i_754976329, 0, (a_754976299).length - 1)]);;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094609 = addInt(res_520094609, 1);
          }
      };
    };
    }
    else {
      F.line = 1853;
      F.filename = "strutils.nim";
      result_754976301 = nimCopy(null, [], NTI33554449);
    }
    
  framePtr = F.prev;

  return result_754976301;

}

function setMatcherList_1325404766(errorCatcher_1325404768, list_1325404769, listName_1325404770) {
              var Temporary4;

  var F = {procname: "setMatcherList.setMatcherList", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!((errorCatcher_1325404768.flags[5] != undefined))) {
    F.line = 869;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(869, 5) `\x0Acontains(errorCatcher.flags, isErrorCatching)` "));
    }
    
    F.line = 870;
    var catcher_1325404780 = errorCatcher_1325404768;
    if (eqStrings(listName_1325404770, [101,114,114,111,114,115])) {
    if (!(((catcher_1325404780.errorList).length == 0))) {
    F.line = 891;
    failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(891, 9) `catcher.errorList.len == 0` ") || []).concat(HEX24_1325401404(catcher_1325404780) || [],[58,32,115,107,105,112,76,105,115,116,32,99,97,110,110,111,116,32,98,101,32,115,101,116,32,116,119,105,99,101,33] || []));
    }
    
    F.line = 892;
    catcher_1325404780.errorList = nimCopy(null, list_1325404769, NTI1325402914);
    }
    else {
      F.line = 894;
      raiseException({message: ([70,111,114,32,116,121,112,101,32,84,32,61,32,77,97,116,99,104,101,114,44,32,108,105,115,116,78,97,109,101,32,109,117,115,116,32,98,101,32,34,101,114,114,111,114,115,34,44,32,98,117,116,32,110,111,116,32,34] || []).concat(listName_1325404770 || [],[34,33] || []), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
    }
    
    if (!((errorCatcher_1325404768.grammarVar == GrammarPlaceholder_1325400546))) {
    Label1: {
      F.line = 897;
      var em_1325404797 = {Field0: ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null}), Field1: []};
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094612 = 0;
      F.line = 242;
      var L_520094613 = (list_1325404769).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094612 < L_520094613)) break Label3;
            F.line = 897;
            F.filename = "parse.nim";
            em_1325404797 = list_1325404769[chckIndx(i_520094612, 0, (list_1325404769).length - 1)];
            F.line = 898;
            var matcher_1325404798 = nimCopy(null, em_1325404797.Field0, NTI1325400126);
            F.line = 897;
            switch (matcher_1325404798.kind) {
            case 3:
              F.line = 901;
              var Temporary4 = matcher_1325404798;
              if (ConstSet19[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1325400124)); }
              grammarHEX3D_1325401629(Temporary4.consumeParser, grammar_1325401580(errorCatcher_1325404768));
              break;
            default: 
              break;
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094612 = addInt(i_520094612, 1);
            if (!(((list_1325404769).length == L_520094613))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function anonSubs_1325401458(parser_1325401459) {
  var result_1325401460 = [];

  var F = {procname: "parse.anonSubs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 324;
    F.filename = "parse.nim";
    F.line = 324;
    var collectResult_1325401461 = [];
    Label1: {
      F.line = 325;
      var p_1325401479 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094616 = 0;
      F.line = 242;
      var L_520094617 = (parser_1325401459.subParsers).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094616 < L_520094617)) break Label3;
            F.line = 325;
            F.filename = "parse.nim";
            p_1325401479 = parser_1325401459.subParsers[chckIndx(i_520094616, 0, (parser_1325401459.subParsers).length - 1)];
            if ((((name_1325401136(p_1325401479)).length == 0) || (parser_1325401459.flags[6] != undefined))) {
            F.line = 341;
            F.filename = "sugar.nim";
            collectResult_1325401461.push(p_1325401479);;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094616 = addInt(i_520094616, 1);
            if (!(((parser_1325401459.subParsers).length == L_520094617))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1325401460 = nimCopy(null, collectResult_1325401461, NTI1325400877);
  framePtr = F.prev;

  return result_1325401460;

}

function isActive_1325404391(catcher_1325404392) {
  var result_1325404393 = false;

  var F = {procname: "parse.isActive", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 787;
    F.filename = "parse.nim";
    result_1325404393 = (catcher_1325404392.mandatory < 1073741824);
  framePtr = F.prev;

  return result_1325404393;

}

function attachMatchers_1325404686(parser_1325404688, list_1325404689, listName_1325404690, failIfAmbiguous_1325404691) {
                var Temporary8;

  var F = {procname: "attachMatchers.attachMatchers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!(contains_939524145(ErrorCatcherListNames_1325404669, listName_1325404690))) {
    F.line = 909;
    F.filename = "parse.nim";
    failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(909, 3) `\x0Acontains(ErrorCatcherListNames, listName)` ") || []).concat(listName_1325404690 || [],[105,115,32,110,111,116,32,111,110,101,32,111,102,32] || [],nsuJoinSep(ErrorCatcherListNames_1325404669, [44,32]) || []));
    }
    
    if (!((0 < (list_1325404689).length))) {
    F.line = 911;
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(911, 3) `\x0A0 < list.len` Empty lists are not allowed"));
    }
    
    if ((parser_1325404688.flags[5] != undefined)) {
    F.line = 913;
    setMatcherList_1325404766(parser_1325404688, list_1325404689, listName_1325404690);
    }
    else {
      F.line = 916;
      var pname_1325404803 = nimCopy(null, parser_1325404688.pname, NTI33554449);
      F.line = 917;
      var ptype_1325404804 = nimCopy(null, parser_1325404688.ptype, NTI33554449);
      F.line = 918;
      var lname_1325404805 = nimCopy(null, listName_1325404690, NTI33554449);
      F.line = 919;
      Label1: {
        F.line = 919;
        var fmtRes_1325404810 = [mnewString(0)];
        F.line = 919;
        fmtRes_1325404810[0].push.apply(fmtRes_1325404810[0], [80,97,114,115,101,114,32]);;
        F.line = 919;
        formatValue_1090519211(fmtRes_1325404810, 0, pname_1325404803, []);
        F.line = 919;
        fmtRes_1325404810[0].push.apply(fmtRes_1325404810[0], [58]);;
        F.line = 919;
        formatValue_1090519211(fmtRes_1325404810, 0, ptype_1325404804, []);
        F.line = 919;
        fmtRes_1325404810[0].push.apply(fmtRes_1325404810[0], [32,99,111,110,116,97,105,110,115,32,109,111,114,101,32,116,104,97,110,32]);;
      };
      Label2: {
        F.line = 921;
        var fmtRes_1325404815 = [mnewString(0)];
        F.line = 921;
        fmtRes_1325404815[0].push.apply(fmtRes_1325404815[0], [32,117,110,99,108,101,97,114,32,116,111,32,119,104,105,99,104,32,111,102,32,116,104,101,115,101,32,116,104,101,32]);;
        F.line = 921;
        formatValue_1090519211(fmtRes_1325404815, 0, lname_1325404805, []);
        F.line = 921;
        fmtRes_1325404815[0].push.apply(fmtRes_1325404815[0], [32,115,104,111,117,108,100,32,98,101,32,97,116,116,97,99,104,101,100,33]);;
      };
      var ambigErr_1325404816 = (fmtRes_1325404810[0] || []).concat(makeNimstrLit("one error catching parser (Series or Interleave), so that it remains") || [],fmtRes_1325404815[0] || []);
      F.line = 922;
      Label3: {
        F.line = 922;
        var fmtRes_1325404821 = [mnewString(0)];
        F.line = 922;
        fmtRes_1325404821[0].push.apply(fmtRes_1325404821[0], [80,97,114,115,101,114,32]);;
        F.line = 922;
        formatValue_1090519211(fmtRes_1325404821, 0, pname_1325404803, []);
        F.line = 922;
        fmtRes_1325404821[0].push.apply(fmtRes_1325404821[0], [58]);;
        F.line = 922;
        formatValue_1090519211(fmtRes_1325404821, 0, ptype_1325404804, []);
        F.line = 922;
        fmtRes_1325404821[0].push.apply(fmtRes_1325404821[0], [32,110,101,105,116,104,101,114,32]);;
      };
      Label4: {
        F.line = 924;
        var fmtRes_1325404826 = [mnewString(0)];
        F.line = 924;
        formatValue_1090519211(fmtRes_1325404826, 0, lname_1325404805, []);
        F.line = 924;
        fmtRes_1325404826[0].push.apply(fmtRes_1325404826[0], [32,99,111,117,108,100,32,98,101,32,97,116,116,97,99,104,101,100,33]);;
      };
      var notAcatcherErr_1325404827 = (fmtRes_1325404821[0] || []).concat([99,111,110,116,97,105,110,115,32,97,110,121,32,110,111,114,32,105,115,32,105,116,115,101,108,102,32,97,110,32,101,114,114,111,114,32,99,97,116,99,104,105,110,103,32,112,97,114,115,101,114,32,116,111,32,119,104,105,99,104,32] || [],fmtRes_1325404826[0] || []);
      F.line = 925;
      var ambiguityFlag_1325404828 = false;
      Label5: {
        F.line = 926;
        var p_1325404832 = null;
        F.line = 239;
        F.filename = "iterators.nim";
        var colontmp__520094595 = [];
        F.line = 376;
        F.filename = "parse.nim";
        colontmp__520094595 = descendants_1325401536(parser_1325404688, anonSubs_1325401458);
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094596 = 0;
        F.line = 242;
        var L_520094597 = (colontmp__520094595).length;
        Label6: {
          F.line = 243;
            Label7: while (true) {
            if (!(i_520094596 < L_520094597)) break Label7;
              F.line = 376;
              F.filename = "parse.nim";
              p_1325404832 = colontmp__520094595[chckIndx(i_520094596, 0, (colontmp__520094595).length - 1)];
                if (!(p_1325404832.flags[5] != undefined)) Temporary8 = false; else {                  Temporary8 = isActive_1325404391(p_1325404832);                }              if (Temporary8) {
              if (ambiguityFlag_1325404828) {
              F.line = 929;
              raiseException({message: nimCopy(null, ambigErr_1325404816, NTI33554449), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
              }
              
              F.line = 930;
              setMatcherList_1325404766(p_1325404832, list_1325404689, listName_1325404690);
              F.line = 931;
              if (p_1325404832.referredParsers.length < 0) { for (var i = p_1325404832.referredParsers.length ; i < 0 ; ++i) p_1325404832.referredParsers.push(null); }
               else { p_1325404832.referredParsers.length = 0; };
              if (!(failIfAmbiguous_1325404691)) {
              F.line = 933;
              break Label5;
              }
              
              F.line = 934;
              ambiguityFlag_1325404828 = true;
              }
              
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094596 = addInt(i_520094596, 1);
              if (!(((colontmp__520094595).length == L_520094597))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      F.line = 378;
      F.filename = "parse.nim";
      resetTraversalTracker_1325401561(parser_1325404688);
      if (!(ambiguityFlag_1325404828)) {
      F.line = 936;
      rawEcho(name_1325401136(parser_1325404688.subParsers[chckIndx(0, 0, (parser_1325404688.subParsers).length - 1)]));
      F.line = 937;
      raiseException({message: nimCopy(null, notAcatcherErr_1325404827, NTI33554449), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
      }
      
    }
    
  framePtr = F.prev;

  
}

function error_1325404878(parser_1325404879, matcher_1325404880, message_1325404881, unambig_1325404882) {
  var F = {procname: "parse.error", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 947;
    F.filename = "parse.nim";
    var em_1325404883 = nimCopy(null, {Field0: nimCopy(null, matcher_1325404880, NTI1325400126), Field1: nimCopy(null, message_1325404881, NTI33554449)}, NTI1325400127);
    F.line = 948;
    attachMatchers_1325404686(parser_1325404879, [nimCopy(null, em_1325404883, NTI1325400127)], [101,114,114,111,114,115], unambig_1325404882);
  framePtr = F.prev;

  
}

function setMatcherList_1325404978(errorCatcher_1325404980, list_1325404981, listName_1325404982) {
              var Temporary4;

  var F = {procname: "setMatcherList.setMatcherList", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!((errorCatcher_1325404980.flags[5] != undefined))) {
    F.line = 869;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(869, 5) `\x0Acontains(errorCatcher.flags, isErrorCatching)` "));
    }
    
    F.line = 870;
    var catcher_1325404992 = errorCatcher_1325404980;
    F.line = 872;
    switch (toJSStr(listName_1325404982)) {
    case "skip-matchers":
      if (!(((catcher_1325404992.skipList).length == 0))) {
      F.line = 874;
      failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(874, 9) `catcher.skipList.len == 0` ") || []).concat(HEX24_1325401404(catcher_1325404992) || [],[58,32,115,107,105,112,76,105,115,116,32,99,97,110,110,111,116,32,98,101,32,115,101,116,32,116,119,105,99,101,33] || []));
      }
      
      F.line = 875;
      catcher_1325404992.skipList = nimCopy(null, list_1325404981, NTI1325403076);
      break;
    case "resume-matchers":
      if (!(((catcher_1325404992.resumeList).length == 0))) {
      F.line = 877;
      failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(877, 9) `catcher.resumeList.len == 0` ") || []).concat(HEX24_1325401404(catcher_1325404992) || [],[58,32,115,107,105,112,76,105,115,116,32,99,97,110,110,111,116,32,98,101,32,115,101,116,32,116,119,105,99,101,33] || []));
      }
      
      F.line = 878;
      catcher_1325404992.resumeList = nimCopy(null, list_1325404981, NTI1325403076);
      break;
    default: 
      F.line = 880;
      raiseException({message: (makeNimstrLit("For type T = Matcher, listName must be \"skip-matchers\" or \"resume-machters\", but not \"") || []).concat(listName_1325404982 || [],[34,33] || []), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
      break;
    }
    if (!((errorCatcher_1325404980.grammarVar == GrammarPlaceholder_1325400546))) {
    Label1: {
      F.line = 884;
      var matcher_1325405017 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094631 = 0;
      F.line = 242;
      var L_520094632 = (list_1325404981).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094631 < L_520094632)) break Label3;
            F.line = 884;
            F.filename = "parse.nim";
            matcher_1325405017 = list_1325404981[chckIndx(i_520094631, 0, (list_1325404981).length - 1)];
            F.line = 884;
            switch (matcher_1325405017.kind) {
            case 3:
              F.line = 887;
              var Temporary4 = matcher_1325405017;
              if (ConstSet20[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1325400124)); }
              grammarHEX3D_1325401629(Temporary4.consumeParser, grammar_1325401580(errorCatcher_1325404980));
              break;
            default: 
              break;
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094631 = addInt(i_520094631, 1);
            if (!(((list_1325404981).length == L_520094632))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function attachMatchers_1325404898(parser_1325404900, list_1325404901, listName_1325404902, failIfAmbiguous_1325404903) {
                var Temporary8;

  var F = {procname: "attachMatchers.attachMatchers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!(contains_939524145(ErrorCatcherListNames_1325404669, listName_1325404902))) {
    F.line = 909;
    F.filename = "parse.nim";
    failedAssertImpl_268435541((makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(909, 3) `\x0Acontains(ErrorCatcherListNames, listName)` ") || []).concat(listName_1325404902 || [],[105,115,32,110,111,116,32,111,110,101,32,111,102,32] || [],nsuJoinSep(ErrorCatcherListNames_1325404669, [44,32]) || []));
    }
    
    if (!((0 < (list_1325404901).length))) {
    F.line = 911;
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(911, 3) `\x0A0 < list.len` Empty lists are not allowed"));
    }
    
    if ((parser_1325404900.flags[5] != undefined)) {
    F.line = 913;
    setMatcherList_1325404978(parser_1325404900, list_1325404901, listName_1325404902);
    }
    else {
      F.line = 916;
      var pname_1325405026 = nimCopy(null, parser_1325404900.pname, NTI33554449);
      F.line = 917;
      var ptype_1325405027 = nimCopy(null, parser_1325404900.ptype, NTI33554449);
      F.line = 918;
      var lname_1325405028 = nimCopy(null, listName_1325404902, NTI33554449);
      F.line = 919;
      Label1: {
        F.line = 919;
        var fmtRes_1325405033 = [mnewString(0)];
        F.line = 919;
        fmtRes_1325405033[0].push.apply(fmtRes_1325405033[0], [80,97,114,115,101,114,32]);;
        F.line = 919;
        formatValue_1090519211(fmtRes_1325405033, 0, pname_1325405026, []);
        F.line = 919;
        fmtRes_1325405033[0].push.apply(fmtRes_1325405033[0], [58]);;
        F.line = 919;
        formatValue_1090519211(fmtRes_1325405033, 0, ptype_1325405027, []);
        F.line = 919;
        fmtRes_1325405033[0].push.apply(fmtRes_1325405033[0], [32,99,111,110,116,97,105,110,115,32,109,111,114,101,32,116,104,97,110,32]);;
      };
      Label2: {
        F.line = 921;
        var fmtRes_1325405038 = [mnewString(0)];
        F.line = 921;
        fmtRes_1325405038[0].push.apply(fmtRes_1325405038[0], [32,117,110,99,108,101,97,114,32,116,111,32,119,104,105,99,104,32,111,102,32,116,104,101,115,101,32,116,104,101,32]);;
        F.line = 921;
        formatValue_1090519211(fmtRes_1325405038, 0, lname_1325405028, []);
        F.line = 921;
        fmtRes_1325405038[0].push.apply(fmtRes_1325405038[0], [32,115,104,111,117,108,100,32,98,101,32,97,116,116,97,99,104,101,100,33]);;
      };
      var ambigErr_1325405039 = (fmtRes_1325405033[0] || []).concat(makeNimstrLit("one error catching parser (Series or Interleave), so that it remains") || [],fmtRes_1325405038[0] || []);
      F.line = 922;
      Label3: {
        F.line = 922;
        var fmtRes_1325405044 = [mnewString(0)];
        F.line = 922;
        fmtRes_1325405044[0].push.apply(fmtRes_1325405044[0], [80,97,114,115,101,114,32]);;
        F.line = 922;
        formatValue_1090519211(fmtRes_1325405044, 0, pname_1325405026, []);
        F.line = 922;
        fmtRes_1325405044[0].push.apply(fmtRes_1325405044[0], [58]);;
        F.line = 922;
        formatValue_1090519211(fmtRes_1325405044, 0, ptype_1325405027, []);
        F.line = 922;
        fmtRes_1325405044[0].push.apply(fmtRes_1325405044[0], [32,110,101,105,116,104,101,114,32]);;
      };
      Label4: {
        F.line = 924;
        var fmtRes_1325405049 = [mnewString(0)];
        F.line = 924;
        formatValue_1090519211(fmtRes_1325405049, 0, lname_1325405028, []);
        F.line = 924;
        fmtRes_1325405049[0].push.apply(fmtRes_1325405049[0], [32,99,111,117,108,100,32,98,101,32,97,116,116,97,99,104,101,100,33]);;
      };
      var notAcatcherErr_1325405050 = (fmtRes_1325405044[0] || []).concat([99,111,110,116,97,105,110,115,32,97,110,121,32,110,111,114,32,105,115,32,105,116,115,101,108,102,32,97,110,32,101,114,114,111,114,32,99,97,116,99,104,105,110,103,32,112,97,114,115,101,114,32,116,111,32,119,104,105,99,104,32] || [],fmtRes_1325405049[0] || []);
      F.line = 925;
      var ambiguityFlag_1325405051 = false;
      Label5: {
        F.line = 926;
        var p_1325405055 = null;
        F.line = 239;
        F.filename = "iterators.nim";
        var colontmp__520094626 = [];
        F.line = 376;
        F.filename = "parse.nim";
        colontmp__520094626 = descendants_1325401536(parser_1325404900, anonSubs_1325401458);
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094627 = 0;
        F.line = 242;
        var L_520094628 = (colontmp__520094626).length;
        Label6: {
          F.line = 243;
            Label7: while (true) {
            if (!(i_520094627 < L_520094628)) break Label7;
              F.line = 376;
              F.filename = "parse.nim";
              p_1325405055 = colontmp__520094626[chckIndx(i_520094627, 0, (colontmp__520094626).length - 1)];
                if (!(p_1325405055.flags[5] != undefined)) Temporary8 = false; else {                  Temporary8 = isActive_1325404391(p_1325405055);                }              if (Temporary8) {
              if (ambiguityFlag_1325405051) {
              F.line = 929;
              raiseException({message: nimCopy(null, ambigErr_1325405039, NTI33554449), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
              }
              
              F.line = 930;
              setMatcherList_1325404978(p_1325405055, list_1325404901, listName_1325404902);
              F.line = 931;
              if (p_1325405055.referredParsers.length < 0) { for (var i = p_1325405055.referredParsers.length ; i < 0 ; ++i) p_1325405055.referredParsers.push(null); }
               else { p_1325405055.referredParsers.length = 0; };
              if (!(failIfAmbiguous_1325404903)) {
              F.line = 933;
              break Label5;
              }
              
              F.line = 934;
              ambiguityFlag_1325405051 = true;
              }
              
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094627 = addInt(i_520094627, 1);
              if (!(((colontmp__520094626).length == L_520094628))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      F.line = 378;
      F.filename = "parse.nim";
      resetTraversalTracker_1325401561(parser_1325404900);
      if (!(ambiguityFlag_1325405051)) {
      F.line = 936;
      rawEcho(name_1325401136(parser_1325404900.subParsers[chckIndx(0, 0, (parser_1325404900.subParsers).length - 1)]));
      F.line = 937;
      raiseException({message: nimCopy(null, notAcatcherErr_1325405050, NTI33554449), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");
      }
      
    }
    
  framePtr = F.prev;

  
}

function resume_1325405111(parser_1325405112, resumeMatcher_1325405113, unambig_1325405114) {
  var F = {procname: "parse.resume", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 960;
    F.filename = "parse.nim";
    attachMatchers_1325404898(parser_1325405112, [nimCopy(null, resumeMatcher_1325405113, NTI1325400126)], [114,101,115,117,109,101,45,109,97,116,99,104,101,114,115], unambig_1325405114);
  framePtr = F.prev;

  
}

function atRe_1325404221(reStr_1325404222) {
  var result_1325404223 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});

  var F = {procname: "parse.atRe", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 746;
    F.filename = "parse.nim";
    result_1325404223 = nimCopy(result_1325404223, {kind: 0, rxInfo: nimCopy(null, rx_1325400134(reStr_1325404222), NTI1325400098), cmpStr: [], findProc: null, consumeParser: null}, NTI1325400126);
  framePtr = F.prev;

  return result_1325404223;

}

function init_1124074226(node_1124074229, name_1124074230, name_1124074230_Idx, data_1124074231, attributes_1124074232) {
  var result_1124074233 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_1124074229.nameRef[0] = name_1124074230; node_1124074229.nameRef[1] = name_1124074230_Idx;
    F.line = 43;
    node_1124074229.textSlice = nimCopy(node_1124074229.textSlice, toStringSlice_1124074237(data_1124074231), NTI1291845635);
    F.line = 44;
    node_1124074229.attributesRef = attributes_1124074232;
    F.line = 45;
    node_1124074229.sourcePos = (-1);
    F.line = 46;
    result_1124074233 = node_1124074229;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1124074233;

}

function clone_1124074342(node_1124074343, newName_1124074344, newName_1124074344_Idx) {
    var Temporary1;

  var result_1124074345 = null;

  var F = {procname: "nodetree.clone", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 194;
    F.filename = "nodetree.nim";
    if (((node_1124074343.childrenSeq).length == 0)) {
    Temporary1 = init_1124074226(new_1124074179(), newName_1124074344, newName_1124074344_Idx, node_1124074343.textSlice, null);
    }
    else {
    Temporary1 = init_1124074290(new_1124074179(), newName_1124074344, newName_1124074344_Idx, node_1124074343.childrenSeq, null);
    }
    
    result_1124074345 = Temporary1;
  framePtr = F.prev;

  return result_1124074345;

}

function init_1325404092(node_1325404095, name_1325404096, name_1325404096_Idx, data_1325404097, attributes_1325404098) {
  var result_1325404099 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_1325404095.nameRef[0] = name_1325404096; node_1325404095.nameRef[1] = name_1325404096_Idx;
    if (!((data_1325404097 == null))) {
    F.line = 37;
    var nonNilData_1325404106 = data_1325404097;
    F.line = 38;
    node_1325404095.childrenSeq = nimCopy(null, [nonNilData_1325404106], NTI1325401261);
    }
    
    F.line = 40;
    node_1325404095.textSlice = nimCopy(node_1325404095.textSlice, EmptyStringSlice_1291845691, NTI1291845635);
    F.line = 44;
    node_1325404095.attributesRef = attributes_1325404098;
    F.line = 45;
    node_1325404095.sourcePos = (-1);
    F.line = 46;
    result_1325404099 = node_1325404095;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404099;

}

function init_1325404028(node_1325404031, name_1325404032, name_1325404032_Idx, data_1325404033, attributes_1325404034) {
  var result_1325404035 = null;

  var F = {procname: "init.init", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "nodetree.nim";
    node_1325404031.nameRef[0] = name_1325404032; node_1325404031.nameRef[1] = name_1325404032_Idx;
    F.line = 43;
    node_1325404031.textSlice = nimCopy(node_1325404031.textSlice, toStringSlice_1325400350(data_1325404033), NTI1291845635);
    F.line = 44;
    node_1325404031.attributesRef = attributes_1325404034;
    F.line = 45;
    node_1325404031.sourcePos = (-1);
    F.line = 46;
    result_1325404035 = node_1325404031;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404035;

}

function returnItemFlatten_1325400359(parser_1325400360, node_1325400361) {
  var result_1325404077 = null;

  var F = {procname: "parse.returnItemFlatten", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((node_1325400361 == null))) {
    if ((parser_1325400360.flags[7] != undefined)) {
    if ((parser_1325400360.flags[9] != undefined)) {
    F.line = 676;
    F.filename = "parse.nim";
    result_1325404077 = EmptyNode_1325400358;
    break BeforeRet;
    }
    
    F.line = 677;
    result_1325404077 = node_1325400361;
    break BeforeRet;
    }
    
    if ((((node_1325400361.nameRef[0][node_1325400361.nameRef[1]]).length == 0) || (node_1325400361.nameRef[0][node_1325400361.nameRef[1]][chckIndx(0, 0, (node_1325400361.nameRef[0][node_1325400361.nameRef[1]]).length - 1)] == 58))) {
    F.line = 679;
    result_1325404077 = clone_1124074342(node_1325400361, parser_1325400360.nodeName[0], parser_1325400360.nodeName[1]);
    break BeforeRet;
    }
    
    F.line = 680;
    result_1325404077 = init_1325404092(new_1124074179(), parser_1325400360.nodeName[0], parser_1325400360.nodeName[1], node_1325400361, null);
    break BeforeRet;
    }
    else {
    if ((parser_1325400360.flags[7] != undefined)) {
    F.line = 682;
    result_1325404077 = EmptyNode_1325400358;
    break BeforeRet;
    }
    }
    F.line = 683;
    result_1325404077 = init_1325404028(new_1124074179(), parser_1325400360.nodeName[0], parser_1325400360.nodeName[1], [], null);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404077;

}

function returnSeqFlatten_1325400362(parser_1325400363, nodes_1325400364) {
  var result_1325404128 = null;

  var F = {procname: "parse.returnSeqFlatten", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((parser_1325400363.flags[9] != undefined)) {
    F.line = 687;
    F.filename = "parse.nim";
    result_1325404128 = EmptyNode_1325400358;
    break BeforeRet;
    }
    
    F.line = 688;
    var N_1325404136 = (nodes_1325400364).length;
    if ((1 < N_1325404136)) {
    F.line = 690;
    var res_1325404141 = [];
    Label1: {
      F.line = 691;
      var child_1325404145 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094647 = 0;
      F.line = 242;
      var L_520094648 = (nodes_1325400364).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094647 < L_520094648)) break Label3;
            F.line = 691;
            F.filename = "parse.nim";
            child_1325404145 = nodes_1325400364[chckIndx(i_520094647, 0, (nodes_1325400364).length - 1)];
            F.line = 692;
            var anonymous_1325404146 = (((child_1325404145.nameRef[0][child_1325404145.nameRef[1]]).length == 0) || (child_1325404145.nameRef[0][child_1325404145.nameRef[1]][chckIndx(0, 0, (child_1325404145.nameRef[0][child_1325404145.nameRef[1]]).length - 1)] == 58));
            if ((!(((child_1325404145.childrenSeq).length == 0)) && anonymous_1325404146)) {
            Label4: {
              F.line = 694;
              var item_1325404153 = null;
              F.line = 241;
              F.filename = "iterators.nim";
              var i_520094644 = 0;
              F.line = 242;
              var L_520094645 = (child_1325404145.childrenSeq).length;
              Label5: {
                F.line = 243;
                  Label6: while (true) {
                  if (!(i_520094644 < L_520094645)) break Label6;
                    F.line = 694;
                    F.filename = "parse.nim";
                    item_1325404153 = child_1325404145.childrenSeq[chckIndx(i_520094644, 0, (child_1325404145.childrenSeq).length - 1)];
                    F.line = 694;
                    res_1325404141.push(item_1325404153);;
                    F.line = 245;
                    F.filename = "iterators.nim";
                    i_520094644 = addInt(i_520094644, 1);
                    if (!(((child_1325404145.childrenSeq).length == L_520094645))) {
                    F.line = 246;
                    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            else {
            if ((!((((child_1325404145.childrenSeq).length == 0) && (len_1291845761(child_1325404145.textSlice) == 0))) || !(anonymous_1325404146))) {
            F.line = 697;
            F.filename = "parse.nim";
            res_1325404141.push(child_1325404145);;
            }
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094647 = addInt(i_520094647, 1);
            if (!(((nodes_1325400364).length == L_520094648))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((0 < (res_1325404141).length) || !((parser_1325400363.flags[7] != undefined)))) {
    F.line = 699;
    F.filename = "parse.nim";
    result_1325404128 = init_1124074290(new_1124074179(), parser_1325400363.nodeName[0], parser_1325400363.nodeName[1], res_1325404141, null);
    break BeforeRet;
    }
    else {
      F.line = 701;
      result_1325404128 = EmptyNode_1325400358;
      break BeforeRet;
    }
    
    }
    else {
    if ((N_1325404136 == 1)) {
    F.line = 703;
    result_1325404128 = parser_1325400363.grammarVar.returnItem(parser_1325400363, nodes_1325400364[chckIndx(0, 0, (nodes_1325400364).length - 1)]);
    break BeforeRet;
    }
    }
    if ((parser_1325400363.flags[7] != undefined)) {
    F.line = 705;
    result_1325404128 = EmptyNode_1325400358;
    break BeforeRet;
    }
    
    F.line = 706;
    result_1325404128 = init_1325404028(new_1124074179(), parser_1325400363.nodeName[0], parser_1325400363.nodeName[1], [], null);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404128;

}

function refdSubs_1325401455(parser_1325401456) {
  var result_1325401457 = [];

  var F = {procname: "parse.refdSubs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 321;
    F.filename = "parse.nim";
    result_1325401457 = nimCopy(null, refdParsers_1325401427(parser_1325401456), NTI1325400855);
  framePtr = F.prev;

  return result_1325401457;

}

function HEX5BHEX5D_1291845734(s_1291845737, x_1291845738) {
  var result_1291845739 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_1291845741 = ((x_1291845738.a) | 0);
    F.line = 84;
    var L_1291845743 = addInt(subInt(((x_1291845738.b) | 0), a_1291845741), 1);
    F.line = 85;
    result_1291845739 = nimCopy(null, mnewString(chckRange(L_1291845743, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_1291845748 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094651 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094651 < L_1291845743)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_1291845748 = i_520094651;
            F.line = 86;
            result_1291845739[chckIndx(i_1291845748, 0, (result_1291845739).length - 1)] = s_1291845737[chckIndx(addInt(i_1291845748, a_1291845741), 0, (s_1291845737).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094651 = addInt(i_520094651, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1291845739;

}

function HEX24_1291845696(str_1291845697) {
  var result_1291845698 = [];

  var F = {procname: "strslice.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((str_1291845697.Field2 < 0)) {
    F.line = 72;
    F.filename = "strslice.nim";
    result_1291845698 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
    F.line = 73;
    result_1291845698 = nimCopy(null, HEX5BHEX5D_1291845734(str_1291845697.Field0[0][str_1291845697.Field0[1]], HEX2EHEX2E_1291845699(str_1291845697.Field1, str_1291845697.Field2)), NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845698;

}

function replace_1291846014(slice_1291846015, pattern_1291846016, replacement_1291846017) {
  var result_1291846018 = null;

  var F = {procname: "strslice.replace", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
    F.line = 259;
    F.filename = "strslice.nim";
    result_1291846018 = toJSStr(HEX24_1291845696(slice_1291846015)).replace(pattern_1291846016.Field1, toJSStr(replacement_1291846017));
  framePtr = F.prev;

  return result_1291846018;

}

function HEX28HEX29_520094268(parser_520094270, document_520094271, location_520094272) {
  var result_520094273 = {Field0: null, Field1: []};

  var F = {procname: "().()", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((parser_520094270.grammarVar == GrammarPlaceholder_1325400546)) {
    F.line = 642;
    F.filename = "parse.nim";
    grammarHEX3D_1325401629(parser_520094270, init_1325400433(new_1325400507(), [97,100,104,111,99], ConstSet21, toStringSlice_1325400350(document_520094271), returnItemFlatten_1325400359, returnSeqFlatten_1325400362));
    }
    else {
      F.line = 644;
      grammar_1325401580(parser_520094270).document = nimCopy(grammar_1325401580(parser_520094270).document, toStringSlice_1325400350(document_520094271), NTI1291845635);
      F.line = 645;
      cleanUp_1325400371(grammar_1325401580(parser_520094270));
    }
    
    F.line = 646;
    grammar_1325401580(parser_520094270).root = parser_520094270;
    Label1: {
      F.line = 647;
      var p_520094290 = null;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__520094635 = [];
      F.line = 376;
      F.filename = "parse.nim";
      colontmp__520094635 = descendants_1325401536(parser_520094270, refdSubs_1325401455);
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094636 = 0;
      F.line = 242;
      var L_520094637 = (colontmp__520094635).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094636 < L_520094637)) break Label3;
            F.line = 376;
            F.filename = "parse.nim";
            p_520094290 = colontmp__520094635[chckIndx(i_520094636, 0, (colontmp__520094635).length - 1)];
            F.line = 376;
            cleanUp_1325401040(p_520094290);
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094636 = addInt(i_520094636, 1);
            if (!(((colontmp__520094635).length == L_520094637))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 378;
    F.filename = "parse.nim";
    resetTraversalTracker_1325401561(parser_520094270);
    F.line = 649;
    var tmpTuple_520094291 = parser_520094270.call(parser_520094270, location_520094272);
    F.line = 649;
    var root_520094292 = tmpTuple_520094291["Field0"];
    F.line = 649;
    var loc_520094293 = tmpTuple_520094291["Field1"];
    if (((root_520094292 == null) || (loc_520094293 < (((document_520094271).length) | 0)))) {
    F.line = 651;
    var snippet_520094305 = cstrToNimstr(replace_1291846014(cut_1291845777(grammar_1325401580(parser_520094270).document, HEX2EHEX2E_1291845699(loc_520094293, addInt(loc_520094293, 9))), ure_1325400104([92,110]), [92,110]));
    F.line = 652;
    Label4: {
      F.line = 652;
      var fmtRes_520094310 = [mnewString(0)];
      F.line = 652;
      fmtRes_520094310[0].push.apply(fmtRes_520094310[0], [80,97,114,115,101,114,32]);;
      F.line = 652;
      formatValue_1090519211(fmtRes_520094310, 0, name_1325401136(parser_520094270), []);
      F.line = 652;
      fmtRes_520094310[0].push.apply(fmtRes_520094310[0], [32,115,116,111,112,112,101,100,32,98,101,102,111,114,101,32,101,110,100,32,97,116,32,194,187]);;
      F.line = 652;
      formatValue_1090519211(fmtRes_520094310, 0, snippet_520094305, []);
      F.line = 652;
      fmtRes_520094310[0].push.apply(fmtRes_520094310[0], [194,171]);;
    };
    var msg_520094311 = nimCopy(null, fmtRes_520094310[0], NTI33554449);
    F.line = 653;
    grammar_1325401580(parser_520094270).errors.push(init_1073741848(new_1325401735(), msg_520094311, loc_520094293, 1040, (-1), (-1), (-1), [], (-1), []));;
    }
    
    F.line = 654;
    var colontmp__520094640 = root_520094292;
    F.line = 654;
    var colontmp__520094641 = nimCopy(null, grammar_1325401580(parser_520094270).errors, NTI1325400141);
    F.line = 654;
    result_520094273 = nimCopy(result_520094273, {Field0: colontmp__520094640, Field1: nimCopy(null, colontmp__520094641, NTI1325400141)}, NTI1325400122);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094273;

}

function newSeq_503317028(len_503317030) {
  var result_503317031 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_503317031 = new Array(len_503317030); for (var i = 0 ; i < len_503317030 ; ++i) { result_503317031[i] = []; }  framePtr = F.prev;

  return result_503317031;

}

function nsuEndsWith(s_754976194, suffix_754976195) {
  var result_754976196 = false;

  var F = {procname: "strutils.endsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 65;
    F.filename = "strimpl.nim";
    var suffixLenHEX60gensym153_754976202 = (suffix_754976195).length;
    F.line = 66;
    var sLenHEX60gensym153_754976203 = (s_754976194).length;
    F.line = 67;
    var iHEX60gensym153_754976204 = 0;
    F.line = 68;
    var jHEX60gensym153_754976205 = subInt(sLenHEX60gensym153_754976203, suffixLenHEX60gensym153_754976202);
    Label1: {
      F.line = 69;
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205)) && (addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205) < sLenHEX60gensym153_754976203))) break Label2;
          if (!((s_754976194[chckIndx(addInt(iHEX60gensym153_754976204, jHEX60gensym153_754976205), 0, (s_754976194).length - 1)] == suffix_754976195[chckIndx(iHEX60gensym153_754976204, 0, (suffix_754976195).length - 1)]))) {
          F.line = 70;
          result_754976196 = false;
          break BeforeRet;
          }
          
          F.line = 71;
          iHEX60gensym153_754976204 = addInt(iHEX60gensym153_754976204, 1);
        }
    };
    if ((suffixLenHEX60gensym153_754976202 <= iHEX60gensym153_754976204)) {
    F.line = 72;
    result_754976196 = true;
    break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_754976196;

}

function nsuStartsWith(s_754976174, prefix_754976175) {
  var result_754976176 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "strimpl.nim";
    var prefixLenHEX60gensym146_754976181 = (prefix_754976175).length;
    F.line = 57;
    var sLenHEX60gensym146_754976182 = (s_754976174).length;
    F.line = 58;
    var iHEX60gensym146_754976183 = 0;
    Label1: {
      F.line = 1624;
      F.filename = "strutils.nim";
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_754976181 <= iHEX60gensym146_754976183)) {
          F.line = 60;
          F.filename = "strimpl.nim";
          result_754976176 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_754976182 <= iHEX60gensym146_754976183) || !((s_754976174[chckIndx(iHEX60gensym146_754976183, 0, (s_754976174).length - 1)] == prefix_754976175[chckIndx(iHEX60gensym146_754976183, 0, (prefix_754976175).length - 1)])))) {
          F.line = 61;
          result_754976176 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym146_754976183 = addInt(iHEX60gensym146_754976183, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_754976176;

}

function substr_33558078(s_33558079, first_33558080, last_33558081) {
  var result_33558082 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2658;
    F.filename = "system.nim";
    var first_33558083 = nimMax(first_33558080, 0);
    F.line = 2659;
    var L_33558084 = nimMax(addInt(subInt(nimMin(last_33558081, (s_33558079).length - 1), first_33558083), 1), 0);
    F.line = 2660;
    result_33558082 = nimCopy(null, mnewString(chckRange(L_33558084, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2661;
      var i_33558089 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520094676 = 0;
      F.line = 2661;
      F.filename = "system.nim";
      colontmp__520094676 = subInt(L_33558084, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520094677 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520094677 <= colontmp__520094676)) break Label3;
            F.line = 2661;
            F.filename = "system.nim";
            i_33558089 = res_520094677;
            F.line = 2661;
            result_33558082[chckIndx(i_33558089, 0, (result_33558082).length - 1)] = s_33558079[chckIndx(addInt(i_33558089, first_33558083), 0, (s_33558079).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520094677 = addInt(res_520094677, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558082;

}

function nsuIndent(s_754975948, count_754975949, padding_754975950) {
            var Temporary6;

  var result_754975951 = [];

  var F = {procname: "strutils.indent", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1463;
    F.filename = "strutils.nim";
    result_754975951 = nimCopy(null, [], NTI33554449);
    F.line = 1464;
    var i_754975952 = 0;
    Label1: {
      F.line = 1465;
      var line_754975953 = [];
      F.line = 669;
      var first_520094670 = 0;
      F.line = 670;
      var last_520094671 = 0;
      F.line = 671;
      var eolpos_520094672 = 0;
      Label2: {
        F.line = 672;
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
              F.line = 673;
                Label5: while (true) {
                if (!((last_520094671 < (s_754975948).length) && !((ConstSet22[s_754975948[chckIndx(last_520094671, 0, (s_754975948).length - 1)]] != undefined)))) break Label5;
                  F.line = 673;
                  last_520094671 = addInt(last_520094671, 1);
                }
            };
            F.line = 675;
            eolpos_520094672 = last_520094671;
            if ((last_520094671 < (s_754975948).length)) {
            if ((s_754975948[chckIndx(last_520094671, 0, (s_754975948).length - 1)] == 10)) {
            F.line = 677;
            last_520094671 = addInt(last_520094671, 1);
            }
            else {
            if ((s_754975948[chckIndx(last_520094671, 0, (s_754975948).length - 1)] == 13)) {
            F.line = 679;
            last_520094671 = addInt(last_520094671, 1);
            if (((last_520094671 < (s_754975948).length) && (s_754975948[chckIndx(last_520094671, 0, (s_754975948).length - 1)] == 10))) {
            F.line = 680;
            last_520094671 = addInt(last_520094671, 1);
            }
            
            }
            }
            }
            
            F.line = 1465;
            if (false) {
            Temporary6 = subInt(last_520094671, 1);
            }
            else {
            Temporary6 = subInt(eolpos_520094672, 1);
            }
            
            line_754975953 = substr_33558078(s_754975948, first_520094670, Temporary6);
            if (!((i_754975952 == 0))) {
            F.line = 1467;
            result_754975951.push.apply(result_754975951, [10]);;
            }
            
            Label7: {
              F.line = 1468;
              var j_754975958 = 0;
              F.line = 75;
              F.filename = "iterators_1.nim";
              var colontmp__520094665 = 0;
              F.line = 1468;
              F.filename = "strutils.nim";
              colontmp__520094665 = count_754975949;
              F.line = 90;
              F.filename = "iterators_1.nim";
              var res_520094666 = 1;
              Label8: {
                F.line = 91;
                  Label9: while (true) {
                  if (!(res_520094666 <= colontmp__520094665)) break Label9;
                    F.line = 1468;
                    F.filename = "strutils.nim";
                    j_754975958 = res_520094666;
                    F.line = 1468;
                    result_754975951.push.apply(result_754975951, padding_754975950);;
                    F.line = 93;
                    F.filename = "iterators_1.nim";
                    res_520094666 = addInt(res_520094666, 1);
                  }
              };
            };
            F.line = 1465;
            F.filename = "strutils.nim";
            result_754975951.push.apply(result_754975951, line_754975953);;
            F.line = 1465;
            i_754975952 = addInt(i_754975952, 1);
            if ((eolpos_520094672 == last_520094671)) {
            F.line = 686;
            break Label2;
            }
            
            F.line = 688;
            first_520094670 = last_520094671;
          }
      };
    };
  framePtr = F.prev;

  return result_754975951;

}

function HEX5BHEX5D_1124074488(s_1124074490, i_1124074491) {
  var result_1124074492 = null;
  var result_1124074492_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_1124074492 = s_1124074490; result_1124074492_Idx = chckIndx(subInt((s_1124074490).length, i_1124074491), 0, (s_1124074490).length - 1);
  framePtr = F.prev;

  return [result_1124074492, result_1124074492_Idx];

}

function delete_1124074512(x_1124074514, x_1124074514_Idx, i_1124074515) {
  var F = {procname: "delete.delete", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1966;
    F.filename = "system.nim";
    x_1124074514[x_1124074514_Idx].splice(i_1124074515, 1);
  framePtr = F.prev;

  
}

function concat_1124074543(seqs_1124074545) {
  var result_1124074546 = [];

  var F = {procname: "concat.concat", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "sequtils.nim";
    var L_1124074547 = 0;
    Label1: {
      F.line = 135;
      var seqitm_1124074561 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_520094686 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_520094686 < (seqs_1124074545).length)) break Label3;
            F.line = 135;
            F.filename = "sequtils.nim";
            seqitm_1124074561 = seqs_1124074545[chckIndx(i_520094686, 0, (seqs_1124074545).length - 1)];
            F.line = 135;
            L_1124074547 = addInt(L_1124074547, (seqitm_1124074561).length);
            F.line = 16;
            F.filename = "iterators.nim";
            i_520094686 = addInt(i_520094686, 1);
          }
      };
    };
    F.line = 136;
    F.filename = "sequtils.nim";
    result_1124074546 = new Array(chckRange(L_1124074547, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1124074547, 0, 2147483647) ; ++i) { result_1124074546[i] = []; }    F.line = 137;
    var i_1124074574 = 0;
    Label4: {
      F.line = 138;
      var s_1124074578 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_520094694 = 0;
      Label5: {
        F.line = 14;
          Label6: while (true) {
          if (!(i_520094694 < (seqs_1124074545).length)) break Label6;
            F.line = 138;
            F.filename = "sequtils.nim";
            s_1124074578 = seqs_1124074545[chckIndx(i_520094694, 0, (seqs_1124074545).length - 1)];
            Label7: {
              F.line = 139;
              var itm_1124074600 = [];
              F.line = 241;
              F.filename = "iterators.nim";
              var i_520094691 = 0;
              F.line = 242;
              var L_520094692 = (s_1124074578).length;
              Label8: {
                F.line = 243;
                  Label9: while (true) {
                  if (!(i_520094691 < L_520094692)) break Label9;
                    F.line = 139;
                    F.filename = "sequtils.nim";
                    itm_1124074600 = s_1124074578[chckIndx(i_520094691, 0, (s_1124074578).length - 1)];
                    F.line = 140;
                    result_1124074546[chckIndx(i_1124074574, 0, (result_1124074546).length - 1)] = nimCopy(null, itm_1124074600, NTI33554449);
                    F.line = 139;
                    i_1124074574 = addInt(i_1124074574, 1);
                    F.line = 245;
                    F.filename = "iterators.nim";
                    i_520094691 = addInt(i_520094691, 1);
                    if (!(((s_1124074578).length == L_520094692))) {
                    F.line = 246;
                    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            F.line = 16;
            i_520094694 = addInt(i_520094694, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1124074546;

}

function serialize_1124074370(node_1124074371, opening_1124074374, closing_1124074375, leafdata_1124074378, ind_1124074379) {
    var Temporary1;
    var Temporary3;
      var Temporary8;
      var Temporary12;
        var Temporary14;

  var result_1124074380 = [];

  var F = {procname: "nodetree.serialize", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 204;
    F.filename = "nodetree.nim";
    result_1124074380 = nimCopy(null, newSeq_503317028(0), NTI503316800);
    F.line = 205;
    var open_1124074388 = opening_1124074374(node_1124074371);
    F.line = 206;
    var close_1124074389 = closing_1124074375(node_1124074371);
    F.line = 207;
    var openLF_1124074390 = nsuEndsWith(open_1124074388, [10]);
    F.line = 208;
    var closeLF_1124074391 = nsuStartsWith(close_1124074389, [10]);
    if ((0 < ind_1124074379)) {
    F.line = 210;
    if (openLF_1124074390) {
    Temporary1 = nsuIndent(HEX5BHEX5D_754976027(open_1124074388, HEX2EHEX2E_939524200(0, 2)), chckRange(ind_1124074379, 0, 2147483647), [32]);
    }
    else {
    Temporary1 = nsuIndent(open_1124074388, chckRange(ind_1124074379, 0, 2147483647), [32]);
    }
    
    open_1124074388 = nimCopy(null, Temporary1, NTI33554449);
    if (closeLF_1124074391) {
    F.line = 211;
    close_1124074389 = nimCopy(null, nsuIndent(HEX5BHEX5D_754976027(close_1124074389, HEX2EHEX2E_939524200(1, 1)), chckRange(ind_1124074379, 0, 2147483647), [32]), NTI33554449);
    }
    
    }
    else {
      if (openLF_1124074390) {
      F.line = 213;
      open_1124074388 = nimCopy(null, HEX5BHEX5D_754976027(open_1124074388, HEX2EHEX2E_939524200(0, 2)), NTI33554449);
      }
      
      if (closeLF_1124074391) {
      F.line = 214;
      close_1124074389 = nimCopy(null, HEX5BHEX5D_754976027(close_1124074389, HEX2EHEX2E_939524200(1, 1)), NTI33554449);
      }
      
    }
    
    F.line = 215;
    var Temporary2 = nimCopy(null, open_1124074388, NTI33554449);
    result_1124074380.push(Temporary2);;
    if (((node_1124074371.childrenSeq).length == 0)) {
    F.line = 218;
    var lines_1124074484 = [leafdata_1124074378(node_1124074371)];
    if ((!(openLF_1124074390) && (0 < (lines_1124074484[0]).length))) {
    F.line = 220;
    (Temporary3 = HEX5BHEX5D_1124074488(result_1124074380, 1), Temporary3)[0][Temporary3[1]].push.apply(Temporary3[0][Temporary3[1]], lines_1124074484[0][chckIndx(0, 0, (lines_1124074484[0]).length - 1)]);;
    F.line = 221;
    delete_1124074512(lines_1124074484, 0, 0);
    }
    
    Label4: {
      F.line = 222;
      var i_1124074542 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__520094654 = 0;
      F.line = 222;
      F.filename = "nodetree.nim";
      colontmp__520094654 = subInt((lines_1124074484[0]).length, 1);
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_520094655 = 0;
      Label5: {
        F.line = 66;
          Label6: while (true) {
          if (!(res_520094655 <= colontmp__520094654)) break Label6;
            F.line = 222;
            F.filename = "nodetree.nim";
            i_1124074542 = res_520094655;
            F.line = 222;
            lines_1124074484[0][chckIndx(i_1124074542, 0, (lines_1124074484[0]).length - 1)] = nimCopy(null, nsuIndent(lines_1124074484[0][chckIndx(i_1124074542, 0, (lines_1124074484[0]).length - 1)], chckRange(addInt(ind_1124074379, 2), 0, 2147483647), [32]), NTI33554449);
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_520094655 = addInt(res_520094655, 1);
          }
      };
    };
    F.line = 224;
    F.filename = "nodetree.nim";
    result_1124074380 = nimCopy(null, concat_1124074543([nimCopy(null, result_1124074380, NTI1124074171), nimCopy(null, lines_1124074484[0], NTI1124074176)]), NTI1124074182);
    if (closeLF_1124074391) {
    F.line = 226;
    var Temporary7 = nimCopy(null, close_1124074389, NTI33554449);
    result_1124074380.push(Temporary7);;
    }
    else {
      F.line = 228;
    (Temporary8 = HEX5BHEX5D_1124074488(result_1124074380, 1), Temporary8)[0][Temporary8[1]].push.apply(Temporary8[0][Temporary8[1]], close_1124074389);;
    }
    
    }
    else {
      F.line = 231;
      F.line = 231;
      var collectResult_1124074634 = [];
      Label9: {
        F.line = 232;
        var child_1124074668 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094658 = 0;
        F.line = 242;
        var L_520094659 = (node_1124074371.childrenSeq).length;
        Label10: {
          F.line = 243;
            Label11: while (true) {
            if (!(i_520094658 < L_520094659)) break Label11;
              F.line = 232;
              F.filename = "nodetree.nim";
              child_1124074668 = node_1124074371.childrenSeq[chckIndx(i_520094658, 0, (node_1124074371.childrenSeq).length - 1)];
              F.line = 232;
              collectResult_1124074634.push(serialize_1124074370(child_1124074668, opening_1124074374, closing_1124074375, leafdata_1124074378, addInt(ind_1124074379, 2)));;
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094658 = addInt(i_520094658, 1);
              if (!(((node_1124074371.childrenSeq).length == L_520094659))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var childBlocks_1124074673 = [nimCopy(null, collectResult_1124074634, NTI1124074259)];
      if ((!(openLF_1124074390) && (0 < (childBlocks_1124074673[0][chckIndx(0, 0, (childBlocks_1124074673[0]).length - 1)][chckIndx(0, 0, (childBlocks_1124074673[0][chckIndx(0, 0, (childBlocks_1124074673[0]).length - 1)]).length - 1)]).length))) {
      F.line = 235;
      F.filename = "nodetree.nim";
      (Temporary12 = HEX5BHEX5D_1124074488(result_1124074380, 1), Temporary12)[0][Temporary12[1]].push.apply(Temporary12[0][Temporary12[1]], childBlocks_1124074673[0][chckIndx(0, 0, (childBlocks_1124074673[0]).length - 1)][chckIndx(0, 0, (childBlocks_1124074673[0][chckIndx(0, 0, (childBlocks_1124074673[0]).length - 1)]).length - 1)]);;
      F.line = 236;
      delete_1124074512(childBlocks_1124074673[0], chckIndx(0, 0, (childBlocks_1124074673[0]).length - 1), 0);
      }
      
      F.line = 237;
      result_1124074380 = nimCopy(null, concat_1124074543([nimCopy(null, result_1124074380, NTI1124074283), concat_1124074543(childBlocks_1124074673[0])]), NTI1124074182);
      if (closeLF_1124074391) {
      F.line = 239;
      var Temporary13 = nimCopy(null, close_1124074389, NTI33554449);
      result_1124074380.push(Temporary13);;
      }
      else {
        F.line = 241;
      (Temporary14 = HEX5BHEX5D_1124074488(result_1124074380, 1), Temporary14)[0][Temporary14[1]].push.apply(Temporary14[0][Temporary14[1]], close_1124074389);;
      }
      
    }
    
  framePtr = F.prev;

  return result_1124074380;

}

function len_1124074800(t_1124074803) {
  var result_1124074804 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1513;
    F.filename = "tables.nim";
    result_1124074804 = t_1124074803.counter;
  framePtr = F.prev;

  return result_1124074804;

}

function attr_1124073660(node_1124073661) {
  var result_1124073662 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "nodetree.attr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((node_1124073661.attributesRef == null)) {
    F.line = 125;
    F.filename = "nodetree.nim";
    node_1124073661.attributesRef = ({data: [], counter: 0, first: 0, last: 0});
    }
    
    F.line = 126;
    result_1124073662 = node_1124073661.attributesRef;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1124073662;

}

function content_1124073534(node_1124073535) {
  var result_1124073536 = [];

  var F = {procname: "nodetree.content", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((node_1124073535.childrenSeq).length == 0)) {
    F.line = 77;
    F.filename = "nodetree.nim";
    result_1124073536 = nimCopy(null, HEX24_1291845696(node_1124073535.textSlice), NTI33554449);
    break BeforeRet;
    }
    else {
      F.line = 79;
      result_1124073536 = nimCopy(null, [], NTI33554449);
      Label1: {
        F.line = 80;
        var child_1124073562 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094710 = 0;
        F.line = 242;
        var L_520094711 = (node_1124073535.childrenSeq).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_520094710 < L_520094711)) break Label3;
              F.line = 80;
              F.filename = "nodetree.nim";
              child_1124073562 = node_1124073535.childrenSeq[chckIndx(i_520094710, 0, (node_1124073535.childrenSeq).length - 1)];
              F.line = 80;
              result_1124073536.push.apply(result_1124073536, content_1124073534(child_1124073562));;
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094710 = addInt(i_520094710, 1);
              if (!(((node_1124073535.childrenSeq).length == L_520094711))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };
  framePtr = F.prev;

  return result_1124073536;

}

function substr_33558090(s_33558091, first_33558092) {
  var result_33558093 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2665;
    F.filename = "system.nim";
    result_33558093 = nimCopy(null, substr_33558078(s_33558091, first_33558092, (s_33558091).length - 1), NTI33554449);
  framePtr = F.prev;

  return result_33558093;

}

function nsuReplaceStr(s_754976592, sub_754976593, by_754976594) {
  var result_754976595 = [];

  var F = {procname: "strutils.replace", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2180;
    F.filename = "strutils.nim";
    result_754976595 = nimCopy(null, [], NTI33554449);
    F.line = 2181;
    var subLen_754976596 = (sub_754976593).length;
    if ((subLen_754976596 == 0)) {
    F.line = 2183;
    result_754976595 = nimCopy(null, s_754976592, NTI33554449);
    }
    else {
    if ((subLen_754976596 == 1)) {
    F.line = 2187;
    var c_754976597 = sub_754976593[chckIndx(0, 0, (sub_754976593).length - 1)];
    F.line = 2188;
    var last_754976598 = (s_754976592).length - 1;
    F.line = 2189;
    var i_754976599 = 0;
    Label1: {
      F.line = 2190;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 2191;
          var j_754976600 = nsuFindChar(s_754976592, c_754976597, chckRange(i_754976599, 0, 2147483647), last_754976598);
          if ((j_754976600 < 0)) {
          F.line = 2192;
          break Label1;
          }
          
          F.line = 2193;
          result_754976595.push.apply(result_754976595, substr_33558078(s_754976592, i_754976599, subInt(j_754976600, 1)));;
          F.line = 2194;
          result_754976595.push.apply(result_754976595, by_754976594);;
          F.line = 2195;
          i_754976599 = addInt(j_754976600, subLen_754976596);
        }
    };
    F.line = 2197;
    result_754976595.push.apply(result_754976595, substr_33558090(s_754976592, i_754976599));;
    }
    else {
      F.line = 2199;
      var a_754976601 = nsuInitNewSkipTable(sub_754976593);
      F.line = 2200;
      var last_754976602 = (s_754976592).length - 1;
      F.line = 2201;
      var i_754976603 = 0;
      Label3: {
        F.line = 2202;
          Label4: while (true) {
          if (!true) break Label4;
            F.line = 2203;
            var j_754976604 = nsuFindStrA(a_754976601, s_754976592, sub_754976593, chckRange(i_754976603, 0, 2147483647), last_754976602);
            if ((j_754976604 < 0)) {
            F.line = 2204;
            break Label3;
            }
            
            F.line = 2205;
            result_754976595.push.apply(result_754976595, substr_33558078(s_754976592, i_754976603, subInt(j_754976604, 1)));;
            F.line = 2206;
            result_754976595.push.apply(result_754976595, by_754976594);;
            F.line = 2207;
            i_754976603 = addInt(j_754976604, subLen_754976596);
          }
      };
      F.line = 2209;
      result_754976595.push.apply(result_754976595, substr_33558090(s_754976592, i_754976603));;
    }
    }
  framePtr = F.prev;

  return result_754976595;

}

function asSxpr_1124074057(node_1124074058) {

function renderAttrs_1124074746(node_1124074747) {
  var result_1124074748 = [];

  var F = {procname: "asSxpr.renderAttrs", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
    F.line = 247;
    F.filename = "nodetree.nim";
    F.line = 247;
    var attrStrs_1124074805 = newSeq_503317028(chckRange(len_1124074800(attr_1124073660(node_1124074747)), 0, 2147483647));
    Label1: {
      F.line = 249;
      var i_1124074823 = (-1);
      Label2: {
        F.line = 248;
        var attr_1124075144 = [];
        F.line = 248;
        var value_1124075145 = [];
        F.line = 1695;
        F.filename = "tables.nim";
        var colontmp__520094702 = ({data: [], counter: 0, first: 0, last: 0});
        F.line = 248;
        F.filename = "nodetree.nim";
        colontmp__520094702 = nimCopy(colontmp__520094702, attr_1124073660(node_1124074747), NTI1124073487);
        F.line = 1721;
        F.filename = "tables.nim";
        var L_520094704 = len_1124074800(colontmp__520094702);
        if ((0 < colontmp__520094702.counter)) {
        F.line = 1303;
        var h_520094705 = colontmp__520094702.first;
        Label3: {
          F.line = 1304;
            Label4: while (true) {
            if (!(0 <= h_520094705)) break Label4;
              F.line = 1305;
              var nxt_520094707 = colontmp__520094702.data[chckIndx(h_520094705, 0, (colontmp__520094702.data).length - 1)].Field1;
              if (isFilled_1207959583(colontmp__520094702.data[chckIndx(h_520094705, 0, (colontmp__520094702.data).length - 1)].Field0)) {
              F.line = 249;
              F.filename = "nodetree.nim";
              attr_1124075144 = colontmp__520094702.data[chckIndx(h_520094705, 0, (colontmp__520094702.data).length - 1)].Field2;
              F.line = 249;
              value_1124075145 = colontmp__520094702.data[chckIndx(h_520094705, 0, (colontmp__520094702.data).length - 1)].Field3;
              F.line = 249;
              i_1124074823 = addInt(i_1124074823, 1);
              F.line = 249;
              Label5: {
                F.line = 249;
                var fmtRes_1124075155 = [mnewString(0)];
                F.line = 249;
                fmtRes_1124075155[0].push.apply(fmtRes_1124075155[0], [96,40]);;
                F.line = 249;
                formatValue_1090519211(fmtRes_1124075155, 0, attr_1124075144, []);
                F.line = 249;
                fmtRes_1124075155[0].push.apply(fmtRes_1124075155[0], [32,34]);;
                F.line = 249;
                formatValue_1090519211(fmtRes_1124075155, 0, value_1124075145, []);
                F.line = 249;
                fmtRes_1124075155[0].push.apply(fmtRes_1124075155[0], [34,41]);;
              };
              attrStrs_1124074805[chckIndx(i_1124074823, 0, (attrStrs_1124074805).length - 1)] = nimCopy(null, fmtRes_1124075155[0], NTI33554449);
              if (!((len_1124074800(colontmp__520094702) == L_520094704))) {
              F.line = 1724;
              F.filename = "tables.nim";
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim(1724, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1308;
              h_520094705 = nxt_520094707;
            }
        };
        }
        
      };
    };
    result_1124074748 = nimCopy(null, nsuJoinSep(attrStrs_1124074805, [32]), NTI33554449);
  framePtr = F.prev;

  return result_1124074748;

}
      
function opening_1124075156(node_1124075157) {
          var Temporary1;
          var Temporary2;

        var result_1124075158 = [];

        var F = {procname: "asSxpr.opening", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
        framePtr = F;
          F.line = 253;
          F.filename = "nodetree.nim";
          if ((len_1124074800(attr_1124073660(node_1124075157)) == 0)) {
          if ((((node_1124075157.childrenSeq).length == 0) && (runeLen_1124074031(node_1124075157) < 60))) {
          Label3: {
            F.line = 255;
            var fmtRes_1124075214 = [mnewString(0)];
            F.line = 255;
            fmtRes_1124075214[0].push.apply(fmtRes_1124075214[0], [40]);;
            F.line = 255;
            formatValue_1090519211(fmtRes_1124075214, 0, node_1124075157.nameRef[0][node_1124075157.nameRef[1]], []);
            F.line = 255;
            fmtRes_1124075214[0].push.apply(fmtRes_1124075214[0], [32]);;
          };
          Temporary2 = fmtRes_1124075214[0];
          }
          else {
            Label4: {
              F.line = 257;
              var fmtRes_1124075219 = [mnewString(0)];
              F.line = 257;
              fmtRes_1124075219[0].push.apply(fmtRes_1124075219[0], [40]);;
              F.line = 257;
              formatValue_1090519211(fmtRes_1124075219, 0, node_1124075157.nameRef[0][node_1124075157.nameRef[1]], []);
              F.line = 649;
              F.filename = "strformat.nim";
              addChar(fmtRes_1124075219[0], 10);;
            };
          Temporary2 = fmtRes_1124075219[0];
          }
          
          Temporary1 = Temporary2;
          }
          else {
            Label5: {
              F.line = 259;
              F.filename = "nodetree.nim";
              var fmtRes_1124075224 = [mnewString(0)];
              F.line = 259;
              fmtRes_1124075224[0].push.apply(fmtRes_1124075224[0], [40]);;
              F.line = 259;
              formatValue_1090519211(fmtRes_1124075224, 0, node_1124075157.nameRef[0][node_1124075157.nameRef[1]], []);
              F.line = 259;
              fmtRes_1124075224[0].push.apply(fmtRes_1124075224[0], [32]);;
              F.line = 259;
              formatValue_1090519211(fmtRes_1124075224, 0, renderAttrs_1124074746(node_1124075157), []);
              F.line = 649;
              F.filename = "strformat.nim";
              addChar(fmtRes_1124075224[0], 10);;
            };
          Temporary1 = fmtRes_1124075224[0];
          }
          
          result_1124075158 = nimCopy(null, Temporary1, NTI33554449);
        framePtr = F.prev;

        return result_1124075158;

      }
      
function closing_1124075225(node_1124075226) {
        var result_1124075227 = [];

        var F = {procname: "asSxpr.closing", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
        framePtr = F;
          F.line = 261;
          F.filename = "nodetree.nim";
          result_1124075227 = nimCopy(null, [41], NTI33554449);
        framePtr = F.prev;

        return result_1124075227;

      }
      
function leafdata_1124075228(node_1124075229) {
                var Temporary3;
                
function esc_1124075231(s_1124075232) {
                  var result_1124075233 = [];

                  var F = {procname: "leafdata.esc", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
                  framePtr = F;
                    F.line = 265;
                    F.filename = "nodetree.nim";
                    result_1124075233 = nimCopy(null, nsuReplaceStr(nsuReplaceStr(s_1124075232, [92], [92,92]), [34], [92,34]), NTI33554449);
                  framePtr = F.prev;

                  return result_1124075233;

                }

        var result_1124075230 = [];

        var F = {procname: "asSxpr.leafdata", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
        framePtr = F;
        BeforeRet: {
          if (!(((node_1124075229.childrenSeq).length == 0))) {
          F.line = 267;
          F.filename = "nodetree.nim";
          failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim(267, 5) `node.isLeaf` "));
          }
          
          F.line = 268;
          var L_1124075242 = runeLen_1124074031(node_1124075229);
          if ((60 <= L_1124075242)) {
          F.line = 270;
          var s_1124075243 = content_1124073534(node_1124075229);
          F.line = 272;
          var lines_1124075248 = [];
          F.line = 273;
          var i_1124075249 = 0;
          F.line = 274;
          var k_1124075250 = 0;
          Label1: {
            F.line = 275;
              Label2: while (true) {
              if (!(0 < L_1124075242)) break Label2;
                F.line = 276;
                if ((L_1124075242 < 60)) {
                Temporary3 = L_1124075242;
                }
                else {
                Temporary3 = 60;
                }
                
                k_1124075250 = runeOffset_973085892(s_1124075243, chckRange(addInt(((i_1124075249) | 0), Temporary3), 0, 2147483647), chckRange(i_1124075249, 0, 2147483647));
                if ((k_1124075250 <= i_1124075249)) {
                F.line = 277;
                break Label1;
                }
                
                F.line = 278;
                lines_1124075248.push([34].concat(esc_1124075231(HEX5BHEX5D_754975999(s_1124075243, HEX2EHEX2E_989855792(i_1124075249, subInt(k_1124075250, 1)))) || [],[34]));;
                F.line = 279;
                i_1124075249 = k_1124075250;
                F.line = 280;
                L_1124075242 = subInt(L_1124075242, 60);
              }
          };
          F.line = 281;
          result_1124075230 = nimCopy(null, lines_1124075248, NTI1124074628);
          break BeforeRet;
          }
          else {
            F.line = 283;
            result_1124075230 = nimCopy(null, [[34].concat(esc_1124075231(content_1124073534(node_1124075229)) || [],[34])], NTI1124074669);
            break BeforeRet;
          }
          
        };
        framePtr = F.prev;

        return result_1124075230;

      }

  var result_1124074745 = [];

  var F = {procname: "nodetree.asSxpr", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/nodetree.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((node_1124074058 == null)) {
    F.line = 286;
    F.filename = "nodetree.nim";
    result_1124074745 = nimCopy(null, [110,105,108], NTI33554449);
    break BeforeRet;
    }
    else {
      F.line = 288;
      result_1124074745 = nimCopy(null, nsuJoinSep(serialize_1124074370(node_1124074058, opening_1124075156, closing_1124075225, leafdata_1124075228, 0), [10]), NTI33554449);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1124074745;

}
var F = {procname: "module XMLParser", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/examples/XMLParser.nim", line: 0};
framePtr = F;
F.line = 15;
F.filename = "XMLParser.nim";
var BOM_520093703 = assignName_1325401207([66,79,77], RegExp_1325405586([91,92,117,102,101,102,102,93,124,91,92,117,102,102,102,101,93,124,91,92,117,48,48,48,48,93,91,92,117,102,101,102,102,93,124,91,92,117,102,102,102,101,93,91,92,117,48,48,48,48,93]));
F.line = 20;
var VersionNum_520093705 = assignName_1325401207([86,101,114,115,105,111,110,78,117,109], RegExp_1325405586([91,48,45,57,93,43,92,46,91,48,45,57,93,43]));
F.line = 105;
var WS_520093707 = assignName_1325401207([58,87,83], Drop_1325405125(Whitespace_1325405705([92,115,42], [])));
F.line = 19;
var VersionInfo_520093767 = assignName_1325401207([86,101,114,115,105,111,110,73,110,102,111], HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406769(WS_520093707, init_1325405152(new_520093708(), [118,101,114,115,105,111,110])), WS_520093707), init_1325405152(new_520093708(), [61])), WS_520093707), init_1325406057(new_1325406146(), [HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [39]), VersionNum_520093705), init_1325405152(new_520093708(), [39])), HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [34]), VersionNum_520093705), init_1325405152(new_520093708(), [34]))])));
F.line = 23;
var EncName_520093769 = assignName_1325401207([69,110,99,78,97,109,101], RegExp_1325405586([91,65,45,90,97,45,122,93,91,65,45,90,97,45,122,48,45,57,46,95,92,45,93,42]));
F.line = 22;
var EncodingDecl_520093792 = assignName_1325401207([69,110,99,111,100,105,110,103,68,101,99,108], HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406769(WS_520093707, init_1325405152(new_520093708(), [101,110,99,111,100,105,110,103])), WS_520093707), init_1325405152(new_520093708(), [61])), WS_520093707), init_1325406057(new_1325406146(), [HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [39]), EncName_520093769), init_1325405152(new_520093708(), [39])), HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [34]), EncName_520093769), init_1325405152(new_520093708(), [34]))])));
F.line = 25;
var SDDecl_520093833 = assignName_1325401207([83,68,68,101,99,108], HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406769(WS_520093707, init_1325405152(new_520093708(), [115,116,97,110,100,97,108,111,110,101])), WS_520093707), init_1325405152(new_520093708(), [61])), WS_520093707), init_1325406057(new_1325406146(), [HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [39]), init_1325406057(new_1325406146(), [init_1325405152(new_520093708(), [121,101,115]), init_1325405152(new_520093708(), [110,111])])), init_1325405152(new_520093708(), [39])), HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [34]), init_1325406057(new_1325406146(), [init_1325405152(new_520093708(), [121,101,115]), init_1325405152(new_520093708(), [110,111])])), init_1325405152(new_520093708(), [34]))])));
F.line = 17;
var XMLDecl_520093881 = assignName_1325401207([88,77,76,68,101,99,108], HEX26_1325406750(init_1325405152(new_520093708(), [60,63,120,109,108]), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(VersionInfo_520093767, init_1325405843(new_520093837(), EncodingDecl_520093792, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), init_1325405843(new_520093837(), SDDecl_520093833, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), WS_520093707), init_1325405152(new_520093708(), [63,62])))));
F.line = 57;
var SystemLiteral_520093898 = assignName_1325401207([83,121,115,116,101,109,76,105,116,101,114,97,108], init_1325406057(new_1325406146(), [HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [34]), RegExp_1325405586([91,94,34,93,42])), init_1325405152(new_520093708(), [34])), HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [39]), RegExp_1325405586([91,94,39,93,42])), init_1325405152(new_520093708(), [39]))]));
F.line = 93;
var PubidCharsSingleQuoted_520093900 = assignName_1325401207([80,117,98,105,100,67,104,97,114,115,83,105,110,103,108,101,81,117,111,116,101,100], RegExp_1325405586([40,63,58,92,120,50,48,124,92,120,48,68,124,92,120,48,65,124,91,97,45,122,65,45,90,48,45,57,93,124,91,45,40,41,43,44,46,92,47,58,61,63,59,33,42,35,64,36,95,37,93,41,43]));
F.line = 94;
var PubidChars_520093902 = assignName_1325401207([80,117,98,105,100,67,104,97,114,115], RegExp_1325405586([40,63,58,92,120,50,48,124,92,120,48,68,124,92,120,48,65,124,91,97,45,122,65,45,90,48,45,57,93,124,91,45,39,40,41,43,44,46,92,47,58,61,63,59,33,42,35,64,36,95,37,93,41,43]));
F.line = 58;
var PubidLiteral_520093922 = assignName_1325401207([80,117,98,105,100,76,105,116,101,114,97,108], init_1325406057(new_1325406146(), [HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [34]), init_1325405843(new_520093837(), PubidChars_520093902, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), init_1325405152(new_520093708(), [34])), HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [39]), PubidCharsSingleQuoted_520093900), init_1325405152(new_520093708(), [39]))]));
F.line = 31;
var ExternalID_520093933 = assignName_1325401207([69,120,116,101,114,110,97,108,73,68], init_1325406057(new_1325406146(), [HEX26_1325406750(init_1325405152(new_520093708(), [83,89,83,84,69,77]), HEXC2HEXA7_1325406402(HEX26_1325406769(WS_520093707, SystemLiteral_520093898))), HEX26_1325406750(init_1325405152(new_520093708(), [80,105,98,108,105,99]), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406739(HEX26_1325406769(WS_520093707, PubidLiteral_520093922), WS_520093707), SystemLiteral_520093898)))]));
F.line = 69;
var NameStartChar_520093935 = assignName_1325401207([78,97,109,101,83,116,97,114,116,67,104,97,114], RegExp_1325405586(makeNimstrLit("_|:|[A-Z]|[a-z]\x0A                                               |[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]\x0A                                               |[\\u0370-\\u037D]|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]\x0A                                               |[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]|[\\u3001-\\uD7FF]\x0A                                               |[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]\x0A                                               |[\\U00010000-\\U000EFFFF]")));
F.line = 75;
var NameChars_520093937 = assignName_1325401207([78,97,109,101,67,104,97,114,115], RegExp_1325405586(makeNimstrLit("(?:_|:|-|\\.|[A-Z]|[a-z]|[0-9]\x0A                                            |\\u00B7|[\\u0300-\\u036F]|[\\u203F-\\u2040]\x0A                                            |[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]\x0A                                            |[\\u0370-\\u037D]|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]\x0A                                            |[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]|[\\u3001-\\uD7FF]\x0A                                            |[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]\x0A                                            |[\\U00010000-\\U000EFFFF])+")));
F.line = 68;
var Name_520093942 = assignName_1325401207([78,97,109,101], HEX26_1325406769(NameStartChar_520093935, init_1325405843(new_520093837(), NameChars_520093937, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])));
F.line = 30;
var doctypedecl_520093953 = assignName_1325401207([100,111,99,116,121,112,101,100,101,99,108], HEX26_1325406728(HEX26_1325406769(init_1325405152(new_520093708(), [60,33,68,79,67,84,89,80,69]), WS_520093707), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(Name_520093942, init_1325405843(new_520093837(), HEX26_1325406769(WS_520093707, ExternalID_520093933), {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), WS_520093707), init_1325405152(new_520093708(), [62])))));
F.line = 100;
var CommentChars_520093955 = assignName_1325401207([67,111,109,109,101,110,116,67,104,97,114,115], RegExp_1325405586(makeNimstrLit("(?:(?!-)(?:\\x09|\\x0A|\\x0D|[\\u0020-\\uD7FF]|[\\uE000-\\uFFFD]|[\\U00010000-\\U0010FFFF]))+")));
F.line = 86;
var Comment_520093969 = assignName_1325401207([67,111,109,109,101,110,116], HEX26_1325406739(HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [60,33,45,45]), init_1325405843(new_520093837(), init_1325406057(new_1325406146(), [CommentChars_520093955, RegExp_1325405586([45,40,63,33,45,41])]), {Field0: 0, Field1: 1073741824}, [58,90,101,114,111,79,114,77,111,114,101])), WS_520093707), init_1325405152(new_520093708(), [45,45,62])));
F.line = 88;
var PITarget_520093971 = assignName_1325401207([80,73,84,97,114,103,101,116], HEX26_1325406750(HEX3EHEX3EHEX21_1325406855(RegExp_1325405586([88,124,120,77,124,109,76,124,108])), Name_520093942));
F.line = 99;
var PIChars_520093973 = assignName_1325401207([80,73,67,104,97,114,115], RegExp_1325405586(makeNimstrLit("(?:(?!\\?>)(?:\\x09|\\x0A|\\x0D|[\\u0020-\\uD7FF]|[\\uE000-\\uFFFD]|[\\U00010000-\\U0010FFFF]))+")));
F.line = 87;
var PI_520093984 = assignName_1325401207([80,73], HEX26_1325406739(HEX26_1325406739(HEX26_1325406750(init_1325405152(new_520093708(), [60,63]), PITarget_520093971), init_1325405843(new_520093837(), HEX26_1325406769(WS_520093707, PIChars_520093973), {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), init_1325405152(new_520093708(), [63,62])));
F.line = 104;
var S_520093986 = assignName_1325401207([83], RegExp_1325405586([92,115,43]));
F.line = 85;
var Misc_520093994 = assignName_1325401207([77,105,115,99], init_1325405843(new_520093837(), HEX7C_1325406254(init_1325406057(new_1325406146(), [Comment_520093969, PI_520093984]), S_520093986), {Field0: 1, Field1: 1073741824}, [58,79,110,101,79,114,77,111,114,101]));
F.line = 16;
var prolog_520094008 = assignName_1325401207([112,114,111,108,111,103], HEX26_1325406739(HEX26_1325406769(init_1325405843(new_520093837(), HEX26_1325406750(WS_520093707, XMLDecl_520093881), {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110]), init_1325405843(new_520093837(), Misc_520093994, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), init_1325405843(new_520093837(), HEX26_1325406739(doctypedecl_520093953, init_1325405843(new_520093837(), Misc_520093994, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])));
F.line = 36;
var element_520094047 = assignName_1325401207([101,108,101,109,101,110,116], init_1325409497(new_520094009()));
F.line = 106;
var EOF_520094049 = assignName_1325401207([69,79,70], HEX3EHEX3EHEX21_1325406855(RegExp_1325405586([46])));
F.line = 14;
var document_520094057 = assignName_1325401207([100,111,99,117,109,101,110,116], HEX26_1325406728(HEX26_1325406750(init_1325405843(new_520093837(), BOM_520093703, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110]), prolog_520094008), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406769(element_520094047, init_1325405843(new_520093837(), Misc_520093994, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), EOF_520094049))));
F.line = 63;
var EntityRef_520094065 = assignName_1325401207([69,110,116,105,116,121,82,101,102], HEX26_1325406739(HEX26_1325406750(init_1325405152(new_520093708(), [38]), Name_520093942), init_1325405152(new_520093708(), [59])));
F.line = 102;
var CharRef_520094082 = assignName_1325401207([67,104,97,114,82,101,102], init_1325406057(new_1325406146(), [HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [38,35]), RegExp_1325405586([91,48,45,57,93,43])), init_1325405152(new_520093708(), [59])), HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [38,35,120]), RegExp_1325405586([91,48,45,57,97,45,102,65,45,70,93,43])), init_1325405152(new_520093708(), [59]))]));
F.line = 62;
var Reference_520094084 = assignName_1325401207([82,101,102,101,114,101,110,99,101], HEX7C_1325406265(EntityRef_520094065, CharRef_520094082));
F.line = 53;
var AttValue_520094110 = assignName_1325401207([65,116,116,86,97,108,117,101], HEX7C_1325406254(init_1325406057(new_1325406146(), [HEX26_1325406750(init_1325405152(new_520093708(), [34]), HEXC2HEXA7_1325406402(HEX26_1325406769(init_1325405843(new_520093837(), HEX7C_1325406265(RegExp_1325405586([91,94,60,38,34,93,43]), Reference_520094084), {Field0: 0, Field1: 1073741824}, [58,90,101,114,111,79,114,77,111,114,101]), init_1325405152(new_520093708(), [34])))), HEX26_1325406750(init_1325405152(new_520093708(), [39]), HEXC2HEXA7_1325406402(HEX26_1325406769(init_1325405843(new_520093837(), HEX7C_1325406265(RegExp_1325405586([91,94,60,38,39,93,43]), Reference_520094084), {Field0: 0, Field1: 1073741824}, [58,90,101,114,111,79,114,77,111,114,101]), init_1325405152(new_520093708(), [39]))))]), init_1325405843(new_520093837(), HEX7C_1325406265(RegExp_1325405586([91,94,60,38,39,62,92,115,93,43]), Reference_520094084), {Field0: 0, Field1: 1073741824}, [58,90,101,114,111,79,114,77,111,114,101])));
F.line = 45;
var Attribute_520094115 = assignName_1325401207([65,116,116,114,105,98,117,116,101], HEX26_1325406728(HEX26_1325406739(Name_520093942, WS_520093707), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [61]), WS_520093707), AttValue_520094110))));
F.line = 42;
var tagContent_520094129 = assignName_1325401207([116,97,103,67,111,110,116,101,110,116], HEX26_1325406750(HEX3EHEX3EHEX21_1325406855(RegExp_1325405586([91,92,47,33,63,93])), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406739(HEX26_1325406739(Name_520093942, init_1325405843(new_520093837(), HEX26_1325406750(WS_520093707, Attribute_520094115), {Field0: 0, Field1: 1073741824}, [58,90,101,114,111,79,114,77,111,114,101])), WS_520093707), HEX3EHEX3E_1325406849(init_1325406057(new_1325406146(), [init_1325405152(new_520093708(), [62]), init_1325405152(new_520093708(), [47,62])]))))));
F.line = 37;
var emptyElement_520094137 = assignName_1325401207([101,109,112,116,121,69,108,101,109,101,110,116], HEX26_1325406739(HEX26_1325406750(init_1325405152(new_520093708(), [60]), tagContent_520094129), init_1325405152(new_520093708(), [47,62])));
F.line = 38;
var voidElement_520094223 = assignName_1325401207([118,111,105,100,69,108,101,109,101,110,116], HEX26_1325406739(HEX26_1325406728(HEX26_1325406769(init_1325405152(new_520093708(), [60]), HEX3EHEX3E_1325406849(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(init_1325406057(new_1325406146(), [init_1325405456(new_520094141(), [97,114,101,97]), init_1325405456(new_520094141(), [98,97,115,101])]), init_1325405456(new_520094141(), [98,114])), init_1325405456(new_520094141(), [99,111,108])), init_1325405456(new_520094141(), [101,109,98,101,100])), init_1325405456(new_520094141(), [104,114])), init_1325405456(new_520094141(), [105,109,103])), init_1325405456(new_520094141(), [105,110,112,117])), init_1325405456(new_520094141(), [108,105,110,107])), init_1325405456(new_520094141(), [109,101,116,97])), init_1325405456(new_520094141(), [112,97,114,97,109])), init_1325405456(new_520094141(), [115,111,117,114,99,101])), init_1325405456(new_520094141(), [116,114,97,99,107])), init_1325405456(new_520094141(), [119,98,114])))), tagContent_520094129), init_1325405152(new_520093708(), [62])));
F.line = 41;
var STag_520094231 = assignName_1325401207([83,84,97,103], HEX26_1325406739(HEX26_1325406750(init_1325405152(new_520093708(), [60]), tagContent_520094129), init_1325405152(new_520093708(), [62])));
F.line = 43;
var ETag_520094239 = assignName_1325401207([69,84,97,103], HEX26_1325406750(init_1325405152(new_520093708(), [60,47]), HEXC2HEXA7_1325406402(HEX26_1325406739(HEX26_1325406739(Name_520093942, WS_520093707), init_1325405152(new_520093708(), [62])))));
F.line = 97;
var CData_520094241 = assignName_1325401207([67,68,97,116,97], RegExp_1325405586(makeNimstrLit("(?:(?!\\]\\]>)(?:\\x09|\\x0A|\\x0D|[\\u0020-\\uD7FF]|[\\uE000-\\uFFFD]|[\\U00010000-\\U0010FFFF]))+")));
F.line = 89;
var CDSect_520094249 = assignName_1325401207([67,68,83,101,99,116], HEX26_1325406739(HEX26_1325406769(init_1325405152(new_520093708(), [60,33,91,67,68,65,84,65,91]), CData_520094241), init_1325405152(new_520093708(), [93,93,62])));
F.line = 96;
var CharData_520094251 = assignName_1325401207([67,104,97,114,68,97,116,97], RegExp_1325405586([40,63,58,40,63,33,92,93,92,93,62,41,91,94,60,38,93,41,43]));
F.line = 47;
var content_520094262 = assignName_1325401207([67,111,110,116,101,110,116], HEX26_1325406769(init_1325405843(new_520093837(), CharData_520094251, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110]), init_1325405843(new_520093837(), HEX26_1325406769(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406254(HEX7C_1325406265(element_520094047, Reference_520094084), CDSect_520094249), PI_520093984), Comment_520093969), init_1325405843(new_520093837(), CharData_520094251, {Field0: 0, Field1: 1}, [58,79,112,116,105,111,110])), {Field0: 0, Field1: 1073741824}, [58,90,101,114,111,79,114,77,111,114,101])));
F.line = 48;
set_1325409533(element_520094047, HEX7C_1325406254(init_1325406057(new_1325406146(), [emptyElement_520094137, voidElement_520094223]), HEX26_1325406728(HEX26_1325406728(STag_520094231, content_520094262), HEXC2HEXA7_1325406402(ETag_520094239))));
F.line = 108;
DropStrings_1325405133(document_520094057);
F.line = 110;
error_1325404878(tagContent_520094129, anyPassage_1325404220, [115,121,110,116,97,120,32,101,114,114,111,114,32,105,110,32,116,97,103,45,110,97,109,101,32,111,102,32,111,112,101,110,105,110,103,32,111,114,32,101,109,112,116,121,32,116,97,103,58,32,32,123,49,125], true);
F.line = 111;
resume_1325405111(tagContent_520094129, atRe_1325404221([40,63,61,62,124,92,47,62,41]), true);
F.line = 112;
error_1325404878(ETag_520094239, anyPassage_1325404220, [115,121,110,116,97,120,32,101,114,114,111,114,32,105,110,32,116,97,103,45,110,97,109,101,32,111,102,32,99,108,111,115,105,110,103,32,116,97,103,58,32,32,123,49,125], true);
F.line = 113;
resume_1325405111(ETag_520094239, atRe_1325404221([40,63,61,62,41]), true);
F.line = 114;
error_1325404878(Attribute_520094115, anyPassage_1325404220, [115,121,110,116,97,120,32,101,114,114,111,114,32,105,110,32,97,116,116,114,105,98,117,116,101,32,100,101,102,105,110,105,116,105,111,110,58,32,32,123,49,125], true);
F.line = 115;
resume_1325405111(Attribute_520094115, atRe_1325404221([40,63,61,62,124,92,47,62,41]), true);
F.line = 126;
rawEcho([112,114,111,98,97,98,108,121,32,97,114,109]);
F.line = 130;
var source_520094267 = makeNimstrLit("<html>\x0A\x0A<head>\x0A<meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\x0A<meta name=Generator content=\"Microsoft Word 15 (filtered)\">\x0A<style>\x0A<!--\x0A /* Font Definitions */\x0A @font-face\x0A\x09{font-family:Helvetica;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Courier;\x0A\x09panose-1:2 7 3 9 2 2 5 2 4 4;}\x0A@font-face\x0A\x09{font-family:\"Tms Rmn\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Helv;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"New York\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:System;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Wingdings;\x0A\x09panose-1:5 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MS Mincho\";\x0A\x09panose-1:2 2 6 9 4 2 5 8 3 4;}\x0A@font-face\x0A\x09{font-family:Batang;\x0A\x09panose-1:2 3 6 0 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:SimSun;\x0A\x09panose-1:2 1 6 0 3 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:PMingLiU;\x0A\x09panose-1:2 2 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MS Gothic\";\x0A\x09panose-1:2 11 6 9 7 2 5 8 2 4;}\x0A@font-face\x0A\x09{font-family:Dotum;\x0A\x09panose-1:2 11 6 0 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:SimHei;\x0A\x09panose-1:2 1 6 9 6 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:MingLiU;\x0A\x09panose-1:2 2 5 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Mincho;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Gulim;\x0A\x09panose-1:2 11 6 0 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Century;\x0A\x09panose-1:2 4 6 4 5 5 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Angsana New\";\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Cordia New\";\x0A\x09panose-1:2 11 3 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Mangal;\x0A\x09panose-1:2 4 5 3 5 2 3 3 2 2;}\x0A@font-face\x0A\x09{font-family:Latha;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Sylfaen;\x0A\x09panose-1:1 10 5 2 5 3 6 3 3 3;}\x0A@font-face\x0A\x09{font-family:Vrinda;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Raavi;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Shruti;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Sendnya;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Gautami;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Tunga;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Estrangelo Edessa\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Cambria Math\";\x0A\x09panose-1:2 4 5 3 5 4 6 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:DengXian;\x0A\x09panose-1:2 1 6 0 3 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Calibri;\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Calibri Light\";\x0A\x09panose-1:2 15 3 2 2 2 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Palatino Linotype\";\x0A\x09panose-1:2 4 5 2 5 5 5 3 3 4;}\x0A@font-face\x0A\x09{font-family:Verdana;\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Arial Unicode MS\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:StplGaramond;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:StplGaramondAkzente;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"StempelGaramond RomanSC\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:NewCenturySchlbk;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:PiEdit-K;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Garamond Antiqua\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Bookman Old Style\";\x0A\x09panose-1:2 5 6 4 5 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:Ahorus;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Tahoma;\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:Consolas;\x0A\x09panose-1:2 11 6 9 2 2 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:OldGreekSerif;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Cambria;\x0A\x09panose-1:2 4 5 3 5 4 6 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Stpl Garamond Akzente\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Stpl_ Garamond_ Akzente\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:HumboldtFraktur;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:StempelGaramond;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:StplGaramondAkzente-Italic;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:StplGaramondAkzente-Roman;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"ACADEMY ENGRAVED LET PLAIN\\:1\\.0\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Al Bayan Plain\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Al Bayan\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Al Tarikh\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"American Typewriter Light\";\x0A\x09panose-1:2 9 3 4 2 0 4 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"American Typewriter Condensed L\";\x0A\x09panose-1:2 9 3 6 2 0 4 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"American Typewriter\";\x0A\x09panose-1:2 9 6 4 2 0 4 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"American Typewriter Condensed\";\x0A\x09panose-1:2 9 6 6 2 0 4 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"AMERICAN TYPEWRITER SEMIBOLD\";\x0A\x09panose-1:2 9 6 4 2 0 4 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Andale Mono\";\x0A\x09panose-1:2 11 5 9 0 0 0 0 0 4;}\x0A@font-face\x0A\x09{font-family:\"Apple Chancery\";\x0A\x09panose-1:3 2 7 2 4 5 6 6 5 4;}\x0A@font-face\x0A\x09{font-family:\"Apple Braille\";\x0A\x09panose-1:5 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple Braille Outline 6 Dot\";\x0A\x09panose-1:5 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple Braille Outline 8 Dot\";\x0A\x09panose-1:5 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple Braille Pinpoint 6 Dot\";\x0A\x09panose-1:5 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple Braille Pinpoint 8 Dot\";\x0A\x09panose-1:5 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple Color Emoji\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:AppleGothic;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:AppleMyungjo;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple SD Gothic Neo Thin\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple SD Gothic Neo UltraLight\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple SD Gothic Neo Light\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple SD Gothic Neo\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple SD Gothic Neo Medium\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"APPLE SD GOTHIC NEO SEMIBOLD\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"APPLE SD GOTHIC NEO EXTRABOLD\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"APPLE SD GOTHIC NEO HEAVY\";\x0A\x09panose-1:2 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Apple Symbols\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Arial Hebrew Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Arial Hebrew\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Arial Hebrew Scholar Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Arial Hebrew Scholar\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Arial Narrow\";\x0A\x09panose-1:2 11 6 6 2 2 2 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Light\";\x0A\x09panose-1:2 11 4 2 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"AVENIR LIGHT OBLIQUE\";\x0A\x09panose-1:2 11 4 2 2 2 3 9 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Book\";\x0A\x09panose-1:2 0 5 3 2 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:Avenir;\x0A\x09panose-1:2 0 5 3 2 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"AVENIR BOOK OBLIQUE\";\x0A\x09panose-1:2 0 5 3 2 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"AVENIR OBLIQUE\";\x0A\x09panose-1:2 11 5 3 2 2 3 9 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Medium\";\x0A\x09panose-1:2 0 6 3 2 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"AVENIR MEDIUM OBLIQUE\";\x0A\x09panose-1:2 0 6 3 2 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Avenir Black\";\x0A\x09panose-1:2 11 8 3 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Black Oblique\";\x0A\x09panose-1:2 11 8 3 2 2 3 9 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Heavy\";\x0A\x09panose-1:2 11 7 3 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"AVENIR HEAVY OBLIQUE\";\x0A\x09panose-1:2 11 7 3 2 2 3 9 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Ultra Light\";\x0A\x09panose-1:2 11 2 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next\";\x0A\x09panose-1:2 11 5 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Medium\";\x0A\x09panose-1:2 11 6 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Demi Bold\";\x0A\x09panose-1:2 11 7 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Heavy\";\x0A\x09panose-1:2 11 9 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Condensed Ultra Lig\";\x0A\x09panose-1:2 11 2 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Condensed\";\x0A\x09panose-1:2 11 5 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Condensed Medium\";\x0A\x09panose-1:2 11 6 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Condensed Demi Bold\";\x0A\x09panose-1:2 11 7 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next Condensed Heavy\";\x0A\x09panose-1:2 11 9 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Ayuthaya;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Baghdad;\x0A\x09panose-1:1 0 5 0 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Bangla MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bangla Sangam MN\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Baskerville;\x0A\x09panose-1:2 2 5 2 7 4 1 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"BASKERVILLE SEMIBOLD\";\x0A\x09panose-1:2 2 7 2 7 4 0 2 2 3;}\x0A@font-face\x0A\x09{font-family:Beirut;\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Big Caslon Medium\";\x0A\x09panose-1:2 0 6 3 9 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Bodoni Ornaments\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bodoni 72 Book\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bodoni 72\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bodoni 72 Oldstyle Book\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bodoni 72 Oldstyle\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bodoni 72 Smallcaps Book\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bradley Hand\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Brush Script MT\";\x0A\x09panose-1:3 6 8 2 4 4 6 7 3 4;}\x0A@font-face\x0A\x09{font-family:Chalkboard;\x0A\x09panose-1:3 5 6 2 4 2 2 2 2 5;}\x0A@font-face\x0A\x09{font-family:\"Chalkboard SE Light\";\x0A\x09panose-1:3 5 6 2 4 2 2 2 2 5;}\x0A@font-face\x0A\x09{font-family:\"Chalkboard SE\";\x0A\x09panose-1:3 5 6 2 4 2 2 2 2 5;}\x0A@font-face\x0A\x09{font-family:Chalkduster;\x0A\x09panose-1:3 5 6 2 4 2 2 2 2 5;}\x0A@font-face\x0A\x09{font-family:\"Charter Roman\";\x0A\x09panose-1:2 4 5 3 5 5 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:Charter;\x0A\x09panose-1:2 4 5 3 5 5 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Charter Black\";\x0A\x09panose-1:2 4 8 3 5 5 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:Cochin;\x0A\x09panose-1:2 0 6 3 2 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Comic Sans MS\";\x0A\x09panose-1:3 15 7 2 3 3 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Copperplate Light\";\x0A\x09panose-1:2 0 6 4 3 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Copperplate;\x0A\x09panose-1:2 0 5 4 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Corsiva Hebrew\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"DIN Alternate\";\x0A\x09panose-1:2 11 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"DIN Condensed\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"DecoType Naskh\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Devanagari MT\";\x0A\x09panose-1:2 0 5 0 2 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Devanagari Sangam MN\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Didot;\x0A\x09panose-1:2 0 5 3 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Diwan Kufi\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mishafi Gold\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Diwan Thuluth\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Euphemia UCAS\";\x0A\x09panose-1:2 11 5 3 4 1 2 2 1 4;}\x0A@font-face\x0A\x09{font-family:Farisi;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Futura Medium\";\x0A\x09panose-1:2 11 6 2 2 2 4 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Futura Condensed Medium\";\x0A\x09panose-1:2 11 5 6 2 2 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:Futura;\x0A\x09panose-1:2 11 6 2 2 2 4 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"FUTURA CONDENSED EXTRABOLD\";\x0A\x09panose-1:2 11 8 6 2 2 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:Galvji;\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"GALVJI OBLIQUE\";\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:GALVJI-BOLDOBLIQUE;\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Geeza Pro\";\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Geneva;\x0A\x09panose-1:2 11 5 3 3 4 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:Georgia;\x0A\x09panose-1:2 4 5 2 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Light\";\x0A\x09panose-1:2 11 3 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans\";\x0A\x09panose-1:2 11 5 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"GILL SANS SEMIBOLD\";\x0A\x09panose-1:2 11 7 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Tamil Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Grantha Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Gujarati MT\";\x0A\x09panose-1:0 0 5 0 7 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Gujarati Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Gurmukhi MN\";\x0A\x09panose-1:2 2 6 0 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Gurmukhi Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Helvetica Light\";\x0A\x09panose-1:2 11 4 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"HELVETICA LIGHT OBLIQUE\";\x0A\x09panose-1:2 11 4 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"HELVETICA OBLIQUE\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"HELVETICA BOLD OBLIQUE\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Helvetica Neue UltraLight\";\x0A\x09panose-1:2 0 2 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Helvetica Neue Thin\";\x0A\x09panose-1:2 11 4 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Helvetica Neue Light\";\x0A\x09panose-1:2 0 4 3 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Helvetica Neue\";\x0A\x09panose-1:2 0 5 3 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Helvetica Neue Medium\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"HELVETICA NEUE CONDENSED\";\x0A\x09panose-1:2 0 8 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"HELVETICA NEUE CONDENSED BLACK\";\x0A\x09panose-1:2 0 10 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Herculanum;\x0A\x09panose-1:2 0 5 5 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Maru Gothic Pro W4\";\x0A\x09panose-1:2 15 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Maru Gothic ProN W4\";\x0A\x09panose-1:2 15 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Mincho ProN W3\";\x0A\x09panose-1:2 2 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Mincho ProN W6\";\x0A\x09panose-1:2 2 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Mincho Pro W3\";\x0A\x09panose-1:2 2 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Mincho Pro W6\";\x0A\x09panose-1:2 2 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W0\";\x0A\x09panose-1:2 11 2 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W1\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W2\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W3\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W4\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W5\";\x0A\x09panose-1:2 11 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W6\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W7\";\x0A\x09panose-1:2 11 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W8\";\x0A\x09panose-1:2 11 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans W9\";\x0A\x09panose-1:2 11 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Kaku Gothic ProN W3\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Kaku Gothic ProN W6\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Kaku Gothic Pro W3\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Kaku Gothic Pro W6\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Kaku Gothic Std W8\";\x0A\x09panose-1:2 11 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Kaku Gothic StdN W8\";\x0A\x09panose-1:2 11 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans GB W3\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hiragino Sans GB W6\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hoefler Text\";\x0A\x09panose-1:2 3 6 2 5 5 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Hoefler Text Ornaments\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"HOEFLER TEXT BLACK\";\x0A\x09panose-1:2 3 8 2 6 7 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:ITFDEVANAGARI-LIGHT;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:ITFDEVANAGARI-BOOK;\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:ITFDEVANAGARI-MEDIUM;\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:ITFDEVANAGARI-DEMI;\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"ITF Devanagari\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"ITFDEVANAGARI MARATHI LIGHT\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"ITFDEVANAGARI MARATHI-BOOK\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"ITF Devanagari Marathi Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"ITFDEVANAGARI MARATHI-DEMI\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"ITF Devanagari Marathi\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Impact;\x0A\x09panose-1:2 11 8 6 3 9 2 5 2 4;}\x0A@font-face\x0A\x09{font-family:InaiMathi;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Kailasa;\x0A\x09panose-1:2 0 5 0 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Kannada MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kannada Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Kefa;\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Khmer MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Khmer Sangam MN\";\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Bangla Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Bangla\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Bangla Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"KOHINOOR BANGLA SEMIBOLD\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Devanagari Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Devanagari\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Devanagari Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"KOHINOOR DEVANAGARI SEMIBOLD\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Gujarati Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Gujarati\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Gujarati Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"KOHINOOR GUJARATI SEMIBOLD\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Telugu Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Telugu\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kohinoor Telugu Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"KOHINOOR TELUGU SEMIBOLD\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Kokonor;\x0A\x09panose-1:1 0 5 0 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:Krungthep;\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:KufiStandardGK;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lao MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lao Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Keyboard\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Math\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Mono\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Sans\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Serif\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Serif Semibold\";\x0A\x09panose-1:2 0 7 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Serif Display\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libertinus Serif Initials\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Linux Biolinum O\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Linux Biolinum Keyboard O\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Linux Libertine Display O\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"LINUX LIBERTINE INITIALS O\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"LINUX LIBERTINE MONO O\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Linux Libertine O\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"LINUX LIBERTINE O SEMIBOLD\";\x0A\x09panose-1:2 0 7 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lucida Grande\";\x0A\x09panose-1:2 11 6 0 4 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Luminari;\x0A\x09panose-1:2 0 5 5 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Malayalam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Malayalam Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Marker Felt Thin\";\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MARKER FELT WIDE\";\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Menlo;\x0A\x09panose-1:2 11 6 9 3 8 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft Sans Serif\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Monaco;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Gurmukhi MT\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Mshtakan;\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MSHTAKAN OBLIQUE\";\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MSHTAKAN BOLDOBLIQUE\";\x0A\x09panose-1:2 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee ExtraLight\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee Light\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee Regular\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee Medium\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee SemiBold\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee Bold\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MuktaMahee ExtraBold\";\x0A\x09panose-1:2 11 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Muna;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MUNA BLACK\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Nadeem;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"New Peninim MT\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"NEW PENINIM MT INCLINED\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"NEW PENINIM MT BOLD INCLINED\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noteworthy Light\";\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Noteworthy;\x0A\x09panose-1:2 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Nastaliq Urdu\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Batak\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada ExtraLight\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada SemiBold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada ExtraBold\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kannada Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar ExtLt\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar Med\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar SemBd\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar ExtBd\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar Blk\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi ExtLt\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi Med\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi SemBd\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi ExtBd\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zawgyi Blk\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans NKo\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Oriya\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tagalog\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar Thin\";\x0A\x09panose-1:2 2 2 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar ExtLt\";\x0A\x09panose-1:2 2 3 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar Light\";\x0A\x09panose-1:2 2 4 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar\";\x0A\x09panose-1:2 2 5 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar Med\";\x0A\x09panose-1:2 2 6 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar SemBd\";\x0A\x09panose-1:2 2 7 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar ExtBd\";\x0A\x09panose-1:2 2 9 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Myanmar Blk\";\x0A\x09panose-1:2 2 10 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:Optima;\x0A\x09panose-1:2 0 5 3 6 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"OPTIMA EXTRABLACK\";\x0A\x09panose-1:2 0 11 3 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Oriya MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Oriya Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PT Mono\";\x0A\x09panose-1:2 6 5 9 2 2 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"PT Sans\";\x0A\x09panose-1:2 11 5 3 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"PT Sans Narrow\";\x0A\x09panose-1:2 11 5 6 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"PT Sans Caption\";\x0A\x09panose-1:2 11 6 3 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"PT Serif\";\x0A\x09panose-1:2 10 6 3 4 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"PT Serif Caption\";\x0A\x09panose-1:2 6 6 3 5 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:Palatino;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Papyrus;\x0A\x09panose-1:2 11 6 2 4 2 0 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Papyrus Condensed\";\x0A\x09panose-1:2 11 6 2 4 2 0 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Party LET Plain\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Phosphate Inline\";\x0A\x09panose-1:2 0 5 6 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Phosphate Solid\";\x0A\x09panose-1:2 0 5 6 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"PingFang HK Ultralight\";\x0A\x09panose-1:2 11 1 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang HK Thin\";\x0A\x09panose-1:2 11 2 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang HK Light\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang HK\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang HK Medium\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PINGFANG HK SEMIBOLD\";\x0A\x09panose-1:2 11 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang TC Ultralight\";\x0A\x09panose-1:2 11 1 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang TC Thin\";\x0A\x09panose-1:2 11 2 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang TC Light\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang TC\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang TC Medium\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PINGFANG TC SEMIBOLD\";\x0A\x09panose-1:2 11 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang SC Ultralight\";\x0A\x09panose-1:2 11 1 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang SC Thin\";\x0A\x09panose-1:2 11 2 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang SC Light\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang SC\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PingFang SC Medium\";\x0A\x09panose-1:2 11 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"PINGFANG SC SEMIBOLD\";\x0A\x09panose-1:2 11 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Plantagenet Cherokee\";\x0A\x09panose-1:2 2 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Raanana;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heiti TC Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heiti TC Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heiti SC Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heiti SC Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"STIX Two Math\";\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"STIX Two Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"STIX Two Text Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"STIX Two Text SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Songti SC Light\";\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Songti SC\";\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"SONGTI SC BLACK\";\x0A\x09panose-1:2 1 8 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Songti TC Light\";\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Songti TC\";\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STSong;\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Sana;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Sathu;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"SAVOYE LET PLAIN\\:1\\.0\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Shree Devanagari 714\";\x0A\x09panose-1:2 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:SignPainter-HouseScript;\x0A\x09panose-1:2 0 0 6 7 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"SIGNPAINTER-HOUSESCRIPT SEMIBOL\";\x0A\x09panose-1:2 0 0 6 7 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Silom;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sinhala MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sinhala Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Skia;\x0A\x09panose-1:2 13 5 2 2 2 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Snell Roundhand\";\x0A\x09panose-1:2 0 6 3 8 0 0 9 0 4;}\x0A@font-face\x0A\x09{font-family:\"SNELL ROUNDHAND BLACK\";\x0A\x09panose-1:2 0 10 4 9 0 0 9 0 4;}\x0A@font-face\x0A\x09{font-family:SUKHUMVITSET-THIN;\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:SUKHUMVITSET-LIGHT;\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:SUKHUMVITSET-TEXT;\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:SUKHUMVITSET-MEDIUM;\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:SUKHUMVITSET-SEMIBOLD;\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Sukhumvit Set\";\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Tamil MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Telugu MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Telugu Sangam MN\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Trattatello;\x0A\x09panose-1:2 15 4 3 2 2 0 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Trebuchet MS\";\x0A\x09panose-1:2 11 6 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Waseem Light\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Waseem;\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Zapfino;\x0A\x09panose-1:3 3 3 0 4 7 7 7 12 3;}\x0A@font-face\x0A\x09{font-family:\"Abadi MT Condensed Light\";\x0A\x09panose-1:2 11 3 6 3 1 1 1 1 3;}\x0A@font-face\x0A\x09{font-family:\"Abadi MT Condensed Extra Bold\";\x0A\x09panose-1:2 11 10 6 3 1 1 1 1 3;}\x0A@font-face\x0A\x09{font-family:\"Aptos Light\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Aptos;\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos SemiBold\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos ExtraBold\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos Black\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos Narrow\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Arial Black\";\x0A\x09panose-1:2 11 10 4 2 1 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Arial Rounded MT Bold\";\x0A\x09panose-1:2 15 7 4 3 5 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Baskerville Old Face\";\x0A\x09panose-1:2 2 6 2 8 5 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:BatangChe;\x0A\x09panose-1:2 3 6 9 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Gungsuh;\x0A\x09panose-1:2 3 6 0 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:GungsuhChe;\x0A\x09panose-1:2 3 6 9 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Bauhaus 93\";\x0A\x09panose-1:4 3 9 5 2 11 2 2 12 2;}\x0A@font-face\x0A\x09{font-family:\"Bell MT\";\x0A\x09panose-1:2 2 5 3 6 3 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Bernard MT Condensed\";\x0A\x09panose-1:2 5 8 6 6 9 5 2 4 4;}\x0A@font-face\x0A\x09{font-family:\"Book Antiqua\";\x0A\x09panose-1:2 4 6 2 5 3 5 3 3 4;}\x0A@font-face\x0A\x09{font-family:\"Bookshelf Symbol 7\";\x0A\x09panose-1:5 1 1 1 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Braggadocio;\x0A\x09panose-1:4 3 11 7 13 11 2 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Britannic Bold\";\x0A\x09panose-1:2 11 9 3 6 7 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Calisto MT\";\x0A\x09panose-1:2 4 6 3 5 5 5 3 3 4;}\x0A@font-face\x0A\x09{font-family:Candara;\x0A\x09panose-1:2 14 5 2 3 3 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Century Gothic\";\x0A\x09panose-1:2 11 5 2 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Century Schoolbook\";\x0A\x09panose-1:2 4 6 4 5 5 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Colonna MT\";\x0A\x09panose-1:4 2 8 5 6 2 2 3 2 3;}\x0A@font-face\x0A\x09{font-family:Constantia;\x0A\x09panose-1:2 3 6 2 5 3 6 3 3 3;}\x0A@font-face\x0A\x09{font-family:\"Cooper Black\";\x0A\x09panose-1:2 8 9 4 4 3 11 2 4 4;}\x0A@font-face\x0A\x09{font-family:\"Copperplate Gothic Bold\";\x0A\x09panose-1:2 14 7 5 2 2 6 2 4 4;}\x0A@font-face\x0A\x09{font-family:Corbel;\x0A\x09panose-1:2 11 5 3 2 2 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:CordiaUPC;\x0A\x09panose-1:2 11 3 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Curlz MT\";\x0A\x09panose-1:4 4 4 4 5 7 2 2 2 2;}\x0A@font-face\x0A\x09{font-family:David;\x0A\x09panose-1:2 14 5 2 6 4 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"DengXian Light\";\x0A\x09panose-1:2 1 6 0 3 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Desdemona;\x0A\x09panose-1:4 2 5 5 2 14 3 4 5 4;}\x0A@font-face\x0A\x09{font-family:\"Dubai Light\";\x0A\x09panose-1:2 11 3 3 3 4 3 3 2 4;}\x0A@font-face\x0A\x09{font-family:Dubai;\x0A\x09panose-1:2 11 5 3 3 4 3 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Dubai Medium\";\x0A\x09panose-1:2 11 6 3 3 4 3 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Edwardian Script ITC\";\x0A\x09panose-1:3 3 3 2 4 7 7 13 8 4;}\x0A@font-face\x0A\x09{font-family:\"Engravers MT\";\x0A\x09panose-1:2 9 7 7 8 5 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:Eurostile;\x0A\x09panose-1:2 11 5 4 2 2 2 5 2 4;}\x0A@font-face\x0A\x09{font-family:FangSong;\x0A\x09panose-1:2 1 6 9 6 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Footlight MT Light\";\x0A\x09panose-1:2 4 6 2 6 3 10 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Franklin Gothic Book\";\x0A\x09panose-1:2 11 5 3 2 1 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Franklin Gothic Medium\";\x0A\x09panose-1:2 11 6 3 2 1 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Franklin Gothic Medium Cond\";\x0A\x09panose-1:2 11 6 6 3 4 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Franklin Gothic Demi\";\x0A\x09panose-1:2 11 7 3 2 1 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Franklin Gothic Demi Cond\";\x0A\x09panose-1:2 11 7 6 3 4 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Franklin Gothic Heavy\";\x0A\x09panose-1:2 11 9 3 2 1 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Gabriola;\x0A\x09panose-1:4 4 6 5 5 16 2 2 13 2;}\x0A@font-face\x0A\x09{font-family:Garamond;\x0A\x09panose-1:2 2 4 4 3 3 1 1 8 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans MT\";\x0A\x09panose-1:2 11 5 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans MT Condensed\";\x0A\x09panose-1:2 11 5 6 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans MT Ext Condensed Bold\";\x0A\x09panose-1:2 11 9 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Ultra Bold\";\x0A\x09panose-1:2 11 10 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gloucester MT Extra Condensed\";\x0A\x09panose-1:2 3 8 8 2 6 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Goudy Old Style\";\x0A\x09panose-1:2 2 5 2 5 3 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:GulimChe;\x0A\x09panose-1:2 11 6 9 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:DotumChe;\x0A\x09panose-1:2 11 6 9 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Haettenschweiler;\x0A\x09panose-1:2 11 7 6 4 9 2 6 2 4;}\x0A@font-face\x0A\x09{font-family:Harrington;\x0A\x09panose-1:4 4 5 5 5 10 2 2 7 2;}\x0A@font-face\x0A\x09{font-family:HGGothicE;\x0A\x09panose-1:2 11 9 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGPGothicE;\x0A\x09panose-1:2 11 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGSGothicE;\x0A\x09panose-1:2 11 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGMinchoE;\x0A\x09panose-1:2 2 9 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGPMinchoE;\x0A\x09panose-1:2 2 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGSMinchoE;\x0A\x09panose-1:2 2 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGSoeiKakugothicUB;\x0A\x09panose-1:2 11 9 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGPSoeiKakugothicUB;\x0A\x09panose-1:2 11 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGSSoeiKakugothicUB;\x0A\x09panose-1:2 11 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:HGMaruGothicMPRO;\x0A\x09panose-1:2 15 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Microsoft Himalaya\";\x0A\x09panose-1:1 1 1 0 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Imprint MT Shadow\";\x0A\x09panose-1:4 2 6 5 6 3 3 3 2 2;}\x0A@font-face\x0A\x09{font-family:KaiTi;\x0A\x09panose-1:2 1 6 9 6 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Kartika;\x0A\x09panose-1:2 2 5 3 3 4 4 6 2 3;}\x0A@font-face\x0A\x09{font-family:\"Kino MT\";\x0A\x09panose-1:4 3 7 5 13 12 2 2 7 3;}\x0A@font-face\x0A\x09{font-family:\"Lucida Console\";\x0A\x09panose-1:2 11 6 9 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Lucida Sans\";\x0A\x09panose-1:2 11 6 2 3 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Lucida Sans Unicode\";\x0A\x09panose-1:2 11 6 2 3 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Lucida Blackletter\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lucida Bright\";\x0A\x09panose-1:2 4 6 2 5 5 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Lucida Calligraphy\";\x0A\x09panose-1:3 1 1 1 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Lucida Fax\";\x0A\x09panose-1:2 6 6 2 5 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Lucida Handwriting\";\x0A\x09panose-1:3 1 1 1 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Lucida Sans Typewriter\";\x0A\x09panose-1:2 11 5 9 3 5 4 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Malgun Gothic Semilight\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Malgun Gothic\";\x0A\x09panose-1:2 11 5 3 2 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Marlett;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Matura MT Script Capitals\";\x0A\x09panose-1:3 2 8 2 6 6 2 7 2 2;}\x0A@font-face\x0A\x09{font-family:Meiryo;\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Meiryo UI\";\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:MingLiU_HKSCS;\x0A\x09panose-1:2 2 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:MingLiU-ExtB;\x0A\x09panose-1:2 2 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:PMingLiU-ExtB;\x0A\x09panose-1:2 2 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:MingLiU_HKSCS-ExtB;\x0A\x09panose-1:2 2 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Mistral;\x0A\x09panose-1:3 9 7 2 3 4 7 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Myanmar Text\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Modern No\\. 20\";\x0A\x09panose-1:2 7 7 4 7 5 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Mongolian Baiti\";\x0A\x09panose-1:3 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Monotype Corsiva\";\x0A\x09panose-1:3 1 1 1 1 2 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Monotype Sorts\";\x0A\x09panose-1:1 1 6 1 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"MS Reference Sans Serif\";\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"MS Reference Specialty\";\x0A\x09panose-1:5 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MS UI Gothic\";\x0A\x09panose-1:2 11 6 0 7 2 5 8 2 4;}\x0A@font-face\x0A\x09{font-family:\"MS PGothic\";\x0A\x09panose-1:2 11 6 0 7 2 5 8 2 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft JhengHei\";\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"MS PMincho\";\x0A\x09panose-1:2 2 6 0 4 2 5 8 3 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft YaHei Light\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Microsoft YaHei\";\x0A\x09panose-1:2 11 5 3 2 2 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft YaHei UI Light\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Microsoft YaHei UI\";\x0A\x09panose-1:2 11 5 3 2 2 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft Yi Baiti\";\x0A\x09panose-1:3 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MT Extra\";\x0A\x09panose-1:5 5 1 2 1 2 5 2 2 2;}\x0A@font-face\x0A\x09{font-family:\"News Gothic MT\";\x0A\x09panose-1:2 11 5 3 2 1 3 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Microsoft New Tai Lue\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Nyala;\x0A\x09panose-1:2 0 5 4 7 3 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:Onyx;\x0A\x09panose-1:4 5 6 2 8 7 2 2 2 3;}\x0A@font-face\x0A\x09{font-family:Perpetua;\x0A\x09panose-1:2 2 5 2 6 4 1 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Perpetua Titling MT\";\x0A\x09panose-1:2 2 5 2 6 5 5 2 8 4;}\x0A@font-face\x0A\x09{font-family:Rockwell;\x0A\x09panose-1:2 6 6 3 2 2 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Condensed\";\x0A\x09panose-1:2 6 6 3 5 4 5 2 1 4;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Extra Bold\";\x0A\x09panose-1:2 6 9 3 4 5 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Print\";\x0A\x09panose-1:2 0 8 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Script\";\x0A\x09panose-1:3 11 8 4 2 0 0 0 0 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Historic\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Symbol\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:NSimSun;\x0A\x09panose-1:2 1 6 9 3 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:SimSun-ExtB;\x0A\x09panose-1:2 1 6 9 6 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:Stencil;\x0A\x09panose-1:4 4 9 5 13 8 2 2 4 4;}\x0A@font-face\x0A\x09{font-family:STHupo;\x0A\x09panose-1:2 1 8 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STLiti;\x0A\x09panose-1:2 1 8 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STXingkai;\x0A\x09panose-1:2 1 8 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STXinwei;\x0A\x09panose-1:2 1 8 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STZhongsong;\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Microsoft Tai Le\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"TH SarabunPSK\";\x0A\x09panose-1:2 11 5 0 4 2 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Tw Cen MT\";\x0A\x09panose-1:2 11 6 2 2 1 4 2 6 3;}\x0A@font-face\x0A\x09{font-family:\"Tw Cen MT Condensed\";\x0A\x09panose-1:2 11 6 6 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Tw Cen MT Condensed Extra Bold\";\x0A\x09panose-1:2 11 8 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Webdings;\x0A\x09panose-1:5 3 1 2 1 5 9 6 7 3;}\x0A@font-face\x0A\x09{font-family:\"Wide Latin\";\x0A\x09panose-1:2 10 10 7 5 5 5 2 4 4;}\x0A@font-face\x0A\x09{font-family:\"Wingdings 2\";\x0A\x09panose-1:5 2 1 2 1 5 7 7 7 7;}\x0A@font-face\x0A\x09{font-family:\"Wingdings 3\";\x0A\x09panose-1:5 4 1 2 1 8 7 7 7 7;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic Light\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic Medium\";\x0A\x09panose-1:2 11 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic UI Light\";\x0A\x09panose-1:2 11 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic UI Semilight\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic UI\";\x0A\x09panose-1:2 11 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Gothic UI Semibold\";\x0A\x09panose-1:2 11 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Mincho Light\";\x0A\x09panose-1:2 2 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Mincho\";\x0A\x09panose-1:2 2 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Yu Mincho Demibold\";\x0A\x09panose-1:2 2 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Abadi Extra Light\";\x0A\x09panose-1:2 11 2 4 2 1 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:Abadi;\x0A\x09panose-1:2 11 6 4 2 1 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:Abel;\x0A\x09panose-1:2 0 5 6 3 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Abril Fatface\";\x0A\x09panose-1:2 0 5 3 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"ADLaM Display\";\x0A\x09panose-1:2 1 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Agency FB\";\x0A\x09panose-1:2 11 5 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Aharoni;\x0A\x09panose-1:2 1 8 3 2 1 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Al Fresco\";\x0A\x09panose-1:2 0 5 7 7 0 0 2 0 2;}\x0A@font-face\x0A\x09{font-family:\"Alasassy Caps\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Aldhabi;\x0A\x09panose-1:1 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Alef;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Aleo Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Aleo;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Algerian;\x0A\x09panose-1:4 2 7 5 4 10 2 6 7 2;}\x0A@font-face\x0A\x09{font-family:\"Amasis MT Pro Light\";\x0A\x09panose-1:2 4 3 4 5 0 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Amasis MT Pro\";\x0A\x09panose-1:2 4 5 4 5 0 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Amasis MT Pro Medium\";\x0A\x09panose-1:2 4 6 4 5 0 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Amasis MT Pro Black\";\x0A\x09panose-1:2 4 10 4 5 0 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Amatic SC\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:AngsanaUPC;\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:Anton;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Aparajita;\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos Display\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos Mono\";\x0A\x09panose-1:2 11 0 9 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Aptos Serif\";\x0A\x09panose-1:2 2 6 4 7 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Arabic Typesetting\";\x0A\x09panose-1:3 2 4 2 4 4 6 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Aref Ruqaa\";\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Arial Nova Cond Light\";\x0A\x09panose-1:2 11 3 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Arial Nova Light\";\x0A\x09panose-1:2 11 3 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Arial Nova Cond\";\x0A\x09panose-1:2 11 5 6 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Arial Nova\";\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Assistant ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Assistant Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Assistant;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Assistant SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Assistant ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Athiti ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Athiti Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Athiti;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Athiti Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Athiti SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next LT Pro Light\";\x0A\x09panose-1:2 11 3 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next LT Pro\";\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Avenir Next LT Pro Demi\";\x0A\x09panose-1:2 11 7 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Baguet Script\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift Light Condensed\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift Light SemiCondensed\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift Light\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift SemiLight Condensed\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift SemiLight\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift Condensed\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift SemiCondensed\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Bahnschrift;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift SemiBold Condensed\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bahnschrift SemiBold\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed Thin\";\x0A\x09panose-1:0 0 3 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed Thin\";\x0A\x09panose-1:0 0 3 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Thin\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed ExtraLight\";\x0A\x09panose-1:0 0 3 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed ExLight\";\x0A\x09panose-1:0 0 3 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed Light\";\x0A\x09panose-1:0 0 4 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed Light\";\x0A\x09panose-1:0 0 4 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed\";\x0A\x09panose-1:0 0 5 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed\";\x0A\x09panose-1:0 0 5 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Barlow;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed Medium\";\x0A\x09panose-1:0 0 6 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed Medium\";\x0A\x09panose-1:0 0 6 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed SemiBold\";\x0A\x09panose-1:0 0 7 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed SemiBold\";\x0A\x09panose-1:0 0 7 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed ExtraBold\";\x0A\x09panose-1:0 0 9 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed ExtraBold\";\x0A\x09panose-1:0 0 9 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow ExtraBold\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Condensed Black\";\x0A\x09panose-1:0 0 10 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Semi Condensed Black\";\x0A\x09panose-1:0 0 10 6 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Barlow Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Bebas Neue\";\x0A\x09panose-1:2 11 6 6 2 2 2 5 2 1;}\x0A@font-face\x0A\x09{font-family:Bembo;\x0A\x09panose-1:2 2 5 2 5 2 1 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Berlin Sans FB\";\x0A\x09panose-1:2 14 6 2 2 5 2 2 3 6;}\x0A@font-face\x0A\x09{font-family:\"Berlin Sans FB Demi\";\x0A\x09panose-1:2 14 8 2 2 5 2 2 3 6;}\x0A@font-face\x0A\x09{font-family:Bierstadt;\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Bierstadt Display\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:BierstadtAlt;\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"BierstadtAlt2 Cond\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"BierstadtAlt3 Cond\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"BierstadtAlt4 Cond\";\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:BierstadtAlt5;\x0A\x09panose-1:2 11 0 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Cond;\x0A\x09panose-1:2 11 0 4 2 2 2 9 2 4;}\x0A@font-face\x0A\x09{font-family:\"Biome Light\";\x0A\x09panose-1:2 11 3 3 3 2 4 2 8 4;}\x0A@font-face\x0A\x09{font-family:Biome;\x0A\x09panose-1:2 11 5 3 3 2 4 2 8 4;}\x0A@font-face\x0A\x09{font-family:\"Blackadder ITC\";\x0A\x09panose-1:4 2 5 5 5 0 7 2 13 2;}\x0A@font-face\x0A\x09{font-family:\"Bodoni MT Condensed\";\x0A\x09panose-1:2 7 6 6 8 6 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bodoni MT\";\x0A\x09panose-1:2 7 6 3 8 6 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bodoni MT Black\";\x0A\x09panose-1:2 7 10 3 8 6 6 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Bodoni MT Poster Compressed\";\x0A\x09panose-1:2 7 7 6 8 6 1 5 2 4;}\x0A@font-face\x0A\x09{font-family:\"Boucherie Block\";\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Boucherie Sans\";\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Bradley Hand ITC\";\x0A\x09panose-1:3 7 4 2 5 3 2 3 2 3;}\x0A@font-face\x0A\x09{font-family:Broadway;\x0A\x09panose-1:4 4 9 5 8 0 2 2 5 2;}\x0A@font-face\x0A\x09{font-family:\"Browallia New\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:BrowalliaUPC;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Buxton Sketch\";\x0A\x09panose-1:3 8 5 0 0 5 0 0 0 4;}\x0A@font-face\x0A\x09{font-family:\"Californian FB\";\x0A\x09panose-1:2 7 4 3 6 8 11 3 2 4;}\x0A@font-face\x0A\x09{font-family:Castellar;\x0A\x09panose-1:2 10 4 2 6 4 6 1 3 1;}\x0A@font-face\x0A\x09{font-family:\"Caveat Brush\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Cavolini;\x0A\x09panose-1:3 0 5 2 4 3 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Centaur;\x0A\x09panose-1:2 3 5 4 5 2 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Chamberi Super Display\";\x0A\x09panose-1:2 4 5 3 8 5 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:Charmonman;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Chilgok Gwon Anja\";\x0A\x09panose-1:2 2 6 3 2 1 1 2 1 1;}\x0A@font-face\x0A\x09{font-family:\"Chilgok Kim Yeongbun\";\x0A\x09panose-1:2 2 6 3 2 1 1 2 1 1;}\x0A@font-face\x0A\x09{font-family:\"Chilgok Lee Jonghui\";\x0A\x09panose-1:2 2 6 3 2 1 1 2 1 1;}\x0A@font-face\x0A\x09{font-family:\"Chilgok Lee Wonsun\";\x0A\x09panose-1:2 2 6 3 2 1 1 2 1 1;}\x0A@font-face\x0A\x09{font-family:Chiller;\x0A\x09panose-1:4 2 4 4 3 16 7 2 6 2;}\x0A@font-face\x0A\x09{font-family:Chonburi;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Cochocib Script Latin Pro\";\x0A\x09panose-1:2 0 5 3 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Concert One\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Congenial UltraLight\";\x0A\x09panose-1:2 0 5 3 4 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Congenial Light\";\x0A\x09panose-1:2 0 5 3 4 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Congenial;\x0A\x09panose-1:2 0 5 3 4 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Congenial SemiBold\";\x0A\x09panose-1:2 0 5 3 4 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Congenial Black\";\x0A\x09panose-1:2 0 5 3 4 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Convection Condensed\";\x0A\x09panose-1:2 11 6 4 4 5 1 4 2 3;}\x0A@font-face\x0A\x09{font-family:Convection;\x0A\x09panose-1:2 11 6 4 4 5 1 4 2 3;}\x0A@font-face\x0A\x09{font-family:\"Convection Extra Bold\";\x0A\x09panose-1:2 11 9 4 4 5 1 4 2 3;}\x0A@font-face\x0A\x09{font-family:\"Convection Symbol\";\x0A\x09panose-1:5 1 1 1 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Convection UI\";\x0A\x09panose-1:2 11 6 4 4 5 1 4 2 3;}\x0A@font-face\x0A\x09{font-family:Dante;\x0A\x09panose-1:2 2 5 2 5 2 0 2 2 3;}\x0A@font-face\x0A\x09{font-family:DaunPenh;\x0A\x09panose-1:1 1 1 1 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Daytona Condensed Light\";\x0A\x09panose-1:2 11 3 6 3 5 3 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Daytona Light\";\x0A\x09panose-1:2 11 3 4 3 5 3 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Daytona Condensed\";\x0A\x09panose-1:2 11 5 6 3 5 3 4 2 4;}\x0A@font-face\x0A\x09{font-family:Daytona;\x0A\x09panose-1:2 11 6 4 3 5 0 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Didact Gothic\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:DilleniaUPC;\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"DM Mono Light\";\x0A\x09panose-1:2 11 3 9 4 2 1 4 1 3;}\x0A@font-face\x0A\x09{font-family:\"DM Mono\";\x0A\x09panose-1:2 11 5 9 4 2 1 4 1 3;}\x0A@font-face\x0A\x09{font-family:\"DM Mono Medium\";\x0A\x09panose-1:2 11 6 9 4 2 1 4 1 3;}\x0A@font-face\x0A\x09{font-family:\"DM Sans\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"DM Sans Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"DM Serif Display\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"DM Serif Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:DokChampa;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Dosis ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Dosis Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Dosis;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Dosis Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Dosis SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Dosis ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Dreaming Outloud Pro\";\x0A\x09panose-1:3 5 5 2 4 3 2 3 5 4;}\x0A@font-face\x0A\x09{font-family:\"Dreaming Outloud Script Pro\";\x0A\x09panose-1:3 5 5 2 4 3 4 5 7 4;}\x0A@font-face\x0A\x09{font-family:\"EB Garamond\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"EB Garamond Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"EB Garamond SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"EB Garamond ExtraBold\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Ebrima;\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Elephant;\x0A\x09panose-1:2 2 9 4 9 5 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Elephant Pro\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Eras Light ITC\";\x0A\x09panose-1:2 11 4 2 3 5 4 2 8 4;}\x0A@font-face\x0A\x09{font-family:\"Eras Medium ITC\";\x0A\x09panose-1:2 11 6 2 3 5 4 2 8 4;}\x0A@font-face\x0A\x09{font-family:\"Eras Demi ITC\";\x0A\x09panose-1:2 11 8 5 3 5 4 2 8 4;}\x0A@font-face\x0A\x09{font-family:\"Eras Bold ITC\";\x0A\x09panose-1:2 11 9 7 3 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:EucrosiaUPC;\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:Euphemia;\x0A\x09panose-1:2 11 5 3 4 1 2 2 1 4;}\x0A@font-face\x0A\x09{font-family:\"Fahkwang ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Fahkwang Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Fahkwang;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Fahkwang Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Fahkwang SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Fairwater Script Light\";\x0A\x09panose-1:2 0 5 7 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Fairwater Script\";\x0A\x09panose-1:2 0 5 7 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Fave Script Bold Pro\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Felix Titling\";\x0A\x09panose-1:4 6 5 5 6 2 2 2 10 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Code Light\";\x0A\x09panose-1:2 11 8 9 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Code\";\x0A\x09panose-1:2 11 8 9 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Code Medium\";\x0A\x09panose-1:2 11 8 9 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Code Retina\";\x0A\x09panose-1:2 11 8 9 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Mono\";\x0A\x09panose-1:2 11 5 9 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Mono Medium\";\x0A\x09panose-1:2 11 6 9 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Extra Condensed Thin\";\x0A\x09panose-1:2 11 3 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed Thin\";\x0A\x09panose-1:2 11 3 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Thin\";\x0A\x09panose-1:2 11 3 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed ExtraLight\";\x0A\x09panose-1:2 11 4 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans ExtraLight\";\x0A\x09panose-1:2 11 4 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Extra Condensed Light\";\x0A\x09panose-1:2 11 4 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed Light\";\x0A\x09panose-1:2 11 4 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Light\";\x0A\x09panose-1:2 11 4 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Extra Condensed\";\x0A\x09panose-1:2 11 5 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed\";\x0A\x09panose-1:2 11 5 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans\";\x0A\x09panose-1:2 11 5 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed Medium\";\x0A\x09panose-1:2 11 6 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Medium\";\x0A\x09panose-1:2 11 6 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed SemiBold\";\x0A\x09panose-1:2 11 6 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans SemiBold\";\x0A\x09panose-1:2 11 6 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed ExtraBold\";\x0A\x09panose-1:2 11 9 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans ExtraBold\";\x0A\x09panose-1:2 11 9 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Extra Condensed Black\";\x0A\x09panose-1:2 11 10 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Condensed Black\";\x0A\x09panose-1:2 11 10 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fira Sans Black\";\x0A\x09panose-1:2 11 10 3 5 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Fjalla One\";\x0A\x09panose-1:2 0 5 6 4 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Forte;\x0A\x09panose-1:3 6 9 2 4 5 2 7 2 3;}\x0A@font-face\x0A\x09{font-family:\"Forte Forward\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Frank Ruhl Libre Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Frank Ruhl Libre\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Frank Ruhl Libre Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Frank Ruhl Libre Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:FrankRuehl;\x0A\x09panose-1:2 14 5 3 6 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Fredoka One\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:FreesiaUPC;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Freestyle Script\";\x0A\x09panose-1:3 8 4 2 3 2 5 11 4 4;}\x0A@font-face\x0A\x09{font-family:\"French Script MT\";\x0A\x09panose-1:3 2 4 2 4 6 7 4 6 5;}\x0A@font-face\x0A\x09{font-family:Gabriela;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Gadugi;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gaegu Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Gaegu;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Cond Light\";\x0A\x09panose-1:2 4 3 6 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Light\";\x0A\x09panose-1:2 4 3 2 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Cond\";\x0A\x09panose-1:2 4 5 6 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro\";\x0A\x09panose-1:2 4 5 2 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Cond Semibold\";\x0A\x09panose-1:2 4 7 6 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Semibold\";\x0A\x09panose-1:2 4 7 2 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Cond Black\";\x0A\x09panose-1:2 4 10 6 5 4 5 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Georgia Pro Black\";\x0A\x09panose-1:2 4 10 2 5 4 5 2 2 3;}\x0A@font-face\x0A\x09{font-family:Gigi;\x0A\x09panose-1:4 4 5 4 6 0 7 2 13 2;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova Cond Lt\";\x0A\x09panose-1:2 11 3 6 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova Light\";\x0A\x09panose-1:2 11 3 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova Cond\";\x0A\x09panose-1:2 11 6 6 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova\";\x0A\x09panose-1:2 11 6 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova Cond XBd\";\x0A\x09panose-1:2 11 10 6 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova Cond Ultra Bold\";\x0A\x09panose-1:2 11 11 4 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Gill Sans Nova Ultra Bold\";\x0A\x09panose-1:2 11 11 2 2 1 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Gisha;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Goudy Stout\";\x0A\x09panose-1:2 2 9 4 7 3 11 2 4 1;}\x0A@font-face\x0A\x09{font-family:\"Goudy Type\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Grandview;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Grandview Display\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Grotesque Light\";\x0A\x09panose-1:2 11 3 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Grotesque;\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Hadassah Friedlaender\";\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Hammersmith One\";\x0A\x09panose-1:2 1 7 3 3 5 1 6 5 4;}\x0A@font-face\x0A\x09{font-family:\"Heebo Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heebo Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Heebo;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heebo Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heebo ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Heebo Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"High Tower Text\";\x0A\x09panose-1:2 4 5 2 5 5 6 3 3 3;}\x0A@font-face\x0A\x09{font-family:\"Hind Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Hind;\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Colombo Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Colombo\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Colombo Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Colombo SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Guntur Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Guntur\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Guntur Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Guntur SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Jalandhar Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Jalandhar\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Jalandhar Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Jalandhar SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Kochi Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Kochi\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Kochi Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Kochi SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Madurai Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Madurai\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Madurai Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Madurai SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Mysuru Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Mysuru\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Mysuru Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Mysuru SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Siliguri Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Siliguri\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Siliguri Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Siliguri SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Vadodara Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Vadodara\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Vadodara Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Hind Vadodara SemiBold\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Mono Thin\";\x0A\x09panose-1:2 11 3 9 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Mono ExtraLight\";\x0A\x09panose-1:2 11 3 9 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Mono Light\";\x0A\x09panose-1:2 11 4 9 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Mono\";\x0A\x09panose-1:2 11 5 9 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Mono Medium\";\x0A\x09panose-1:2 11 6 9 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Mono SemiBold\";\x0A\x09panose-1:2 11 7 9 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Condensed Thin\";\x0A\x09panose-1:2 11 2 6 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Thin\";\x0A\x09panose-1:2 11 2 3 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans ExtraLight\";\x0A\x09panose-1:2 11 3 3 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Condensed Light\";\x0A\x09panose-1:2 11 4 6 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Light\";\x0A\x09panose-1:2 11 4 3 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Condensed\";\x0A\x09panose-1:2 11 5 6 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans\";\x0A\x09panose-1:2 11 5 3 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Condensed Medium\";\x0A\x09panose-1:2 11 6 6 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans Medium\";\x0A\x09panose-1:2 11 6 3 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Sans SemiBold\";\x0A\x09panose-1:2 11 7 3 5 2 3 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Serif Thin\";\x0A\x09panose-1:2 6 2 3 5 4 6 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Serif ExtraLight\";\x0A\x09panose-1:2 6 3 3 5 4 6 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Serif Light\";\x0A\x09panose-1:2 6 4 3 5 4 6 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Serif\";\x0A\x09panose-1:2 6 5 3 5 4 6 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Serif Medium\";\x0A\x09panose-1:2 6 6 3 5 4 6 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"IBM Plex Serif SemiBold\";\x0A\x09panose-1:2 6 7 3 5 4 6 0 2 3;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiCondensed Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiExpanded Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraExpanded Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata UltraExpanded Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata UltraCondensed\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraCondensed\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiCondensed\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Inconsolata;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiExpanded\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraExpanded\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata UltraExpanded\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiExpanded Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata UltraCondensed Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraCondensed Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiCondensed Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiExpanded Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraExpanded Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata UltraExpanded Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Condensed Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiCondensed Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata SemiExpanded Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata Expanded Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata ExtraExpanded Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Inconsolata UltraExpanded Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Ink Free\";\x0A\x09panose-1:3 8 4 2 0 5 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:IrisUPC;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Iskoola Pota\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Italianno;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:JasmineUPC;\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Javanese Text\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Jokerman;\x0A\x09panose-1:4 9 6 5 6 0 6 2 7 2;}\x0A@font-face\x0A\x09{font-family:\"Josefin Sans Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Sans Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Sans\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Sans SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Sans Bold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Slab Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Slab Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Slab\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Josefin Slab SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Juice ITC\";\x0A\x09panose-1:4 4 4 3 4 0 2 2 2 2;}\x0A@font-face\x0A\x09{font-family:Jumble;\x0A\x09panose-1:2 0 5 3 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:Kalinga;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Karla ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Karla Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Karla;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Karla Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Karla ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Karla Tamil Inclined\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Karla Tamil Upright\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kermit Thin Condensed\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Thin\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Thin Expanded\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Extralight Condensed\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Extralight\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Extralight Expanded\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Light Condensed\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Light\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Light Expanded\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Condensed\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:Kermit;\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Expanded\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Semibold Condensed\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Semibold\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Semibold Expanded\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Extrabold Condensed\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Extrabold\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Kermit Extrabold Expanded\";\x0A\x09panose-1:2 15 5 3 4 0 0 6 0 3;}\x0A@font-face\x0A\x09{font-family:\"Khmer UI\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Kigelia Light\";\x0A\x09panose-1:2 11 3 3 2 2 2 2 2 3;}\x0A@font-face\x0A\x09{font-family:Kigelia;\x0A\x09panose-1:2 11 5 3 4 5 2 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Kigelia Arabic Light\";\x0A\x09panose-1:2 11 3 3 2 2 2 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Kigelia Arabic\";\x0A\x09panose-1:2 11 5 3 4 5 2 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Klee One\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Klee One SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:KodchiangUPC;\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:Kokila;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Kristen ITC\";\x0A\x09panose-1:3 5 5 2 4 2 2 3 2 2;}\x0A@font-face\x0A\x09{font-family:\"Krub ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Krub Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Krub;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Krub Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Krub SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Kunstler Script\";\x0A\x09panose-1:3 3 4 2 2 6 7 13 13 6;}\x0A@font-face\x0A\x09{font-family:Lalezar;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lao UI\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato Thin\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato ExtraLight\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato Light\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:Lato;\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato Medium\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato SemiBold\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato ExtraBold\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:\"Lato Black\";\x0A\x09panose-1:2 15 5 2 2 2 4 3 2 3;}\x0A@font-face\x0A\x09{font-family:Leelawadee;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Leelawadee UI Semilight\";\x0A\x09panose-1:2 11 4 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Leelawadee UI\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Levenim MT\";\x0A\x09panose-1:2 1 5 2 6 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode 128\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode 128 Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode 39\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode 39 Extended\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode 39 Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode 39 Extended Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Barcode EAN13 Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Baskerville\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Libre Franklin Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Ligconsolata;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:LilyUPC;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Livvic Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Livvic ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Livvic Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Livvic;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Livvic Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Livvic SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Livvic Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Lobster;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lobster Two\";\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:Lora;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Lora Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Magneto;\x0A\x09panose-1:4 3 8 5 5 8 2 2 13 2;}\x0A@font-face\x0A\x09{font-family:\"Maiandra GD\";\x0A\x09panose-1:2 14 5 2 3 3 8 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Mangal Pro\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Meddon;\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Merriweather Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Merriweather;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Merriweather Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Merriweather Sans Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Merriweather Sans\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Merriweather Sans ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Microsoft GothicNeo Light\";\x0A\x09panose-1:2 11 3 0 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Microsoft GothicNeo\";\x0A\x09panose-1:2 11 5 0 0 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Microsoft JhengHei UI Light\";\x0A\x09panose-1:2 11 3 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft JhengHei UI\";\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Microsoft PhagsPa\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Microsoft Uighur\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Miriam;\x0A\x09panose-1:2 11 5 2 5 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Miriam Fixed\";\x0A\x09panose-1:2 11 5 9 5 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Miriam Libre\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mitr ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mitr Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Mitr;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mitr Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mitr SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Modern Love\";\x0A\x09panose-1:4 9 8 5 8 16 5 2 6 1;}\x0A@font-face\x0A\x09{font-family:\"Modern Love Caps\";\x0A\x09panose-1:4 7 8 5 8 16 1 2 10 1;}\x0A@font-face\x0A\x09{font-family:\"Modern Love Grunge\";\x0A\x09panose-1:4 7 8 5 8 16 5 2 6 1;}\x0A@font-face\x0A\x09{font-family:\"Montserrat Thin\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Montserrat ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Montserrat Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Montserrat;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Montserrat Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Montserrat SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Montserrat ExtraBold\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Montserrat Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:MoolBoran;\x0A\x09panose-1:2 11 1 0 1 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Mr Gabe\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MS Outlook\";\x0A\x09panose-1:5 1 1 0 1 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"MV Boli\";\x0A\x09panose-1:2 0 5 0 3 2 0 9 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mystical Woods Rough Script\";\x0A\x09panose-1:2 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Mystical Woods Smooth Script\";\x0A\x09panose-1:2 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nanum Brush Script\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nanum Pen\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:NanumGothic;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:NanumGothicExtraBold;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:NanumGothicCoding;\x0A\x09panose-1:2 13 0 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:NanumMyeongjo;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:NanumMyeongjoExtraBold;\x0A\x09panose-1:2 2 6 3 2 1 1 2 1 1;}\x0A@font-face\x0A\x09{font-family:Narkisim;\x0A\x09panose-1:2 14 5 2 5 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Neue Haas Grotesk Text Pro\";\x0A\x09panose-1:2 11 5 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Niagara Engraved\";\x0A\x09panose-1:4 2 5 2 7 7 3 3 2 2;}\x0A@font-face\x0A\x09{font-family:\"Niagara Solid\";\x0A\x09panose-1:4 2 5 2 7 7 2 2 2 2;}\x0A@font-face\x0A\x09{font-family:Nina;\x0A\x09panose-1:2 11 6 6 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Nirmala Text Semilight\";\x0A\x09panose-1:2 11 4 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Nirmala Text\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Nirmala UI Semilight\";\x0A\x09panose-1:2 11 4 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Nirmala UI\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Nordique Inline\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Music\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans AnatoHiero\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Avestan\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Bassa Vah\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Bhaiksuki\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Brahmi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Buginese\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Buhid\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Carian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans CaucAlban\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Chakma\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Coptic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Cuneiform\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Cypriot\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Deseret\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari ExtraLight\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari SemiBold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari ExtraBold\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari UI Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari UI Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari UI\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari UI Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Devanagari UI Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Duployan\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans EgyptHiero\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Elbasan\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Elymaic\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Glagolitic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gothic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Grantha\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati ExtraLight\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati SemiBold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati ExtraBold\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI SemiBold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI ExtraBold\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gujarati UI Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Gunjala Gondi\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Hanunoo\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Hatran\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans ImpAramaic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Indic Siyaq Numbers\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans InsPahlavi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans InsParthi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Javanese\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kaithi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Kharoshthi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Khojki\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Khudawadi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Lepcha\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Limbu\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Linear A\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Linear B\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Lycian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Lydian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Mahajani\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Mandaic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Manichaean\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Marchen\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Masaram Gondi\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Math\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Mayan Numerals\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Mende Kikakui\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Meroitic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Miao\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Modi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Mongolian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Mro\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Multani\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI ExtraLight\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI SemiBold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI ExtraBold\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Myanmar UI Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Nabataean\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans NewTaiLue\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Newa\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Nushu\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Ogham\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans OldHung\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Old Italic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans OldNorArab\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Old Permic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans OldPersian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans OldSogdian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans OldSouArab\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Old Turkic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Oriya UI Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Oriya UI\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Oriya UI Blk\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Osage\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Osmanya\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Pahawh Hmong\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Palmyrene\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans PauCinHau\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans PhagsPa\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Phoenician\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans PsaPahlavi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Rejang\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Runic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Samaritan\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Saurashtra\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Sharada\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Shavian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Siddham\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Sogdian\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Soyombo\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Syloti Nagri\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Symbols2\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Syriac Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Syriac\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Syriac Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tagbanwa\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tai Le\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tai Viet\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Takri\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tamil Supplement\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Thin\";\x0A\x09panose-1:2 11 2 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped ExtLight\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Light\";\x0A\x09panose-1:2 11 4 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Regular\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Medium\";\x0A\x09panose-1:2 11 6 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Semibold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Bold\";\x0A\x09panose-1:2 11 8 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Extrabold\";\x0A\x09panose-1:2 11 9 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Thai Looped Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tifinagh\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Tirhuta\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Ugaritic\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Vai\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Wancho\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans WarangCiti\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Yi\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Sans Zanabazar\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif\";\x0A\x09panose-1:2 2 6 0 6 5 0 2 2 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Ahom\";\x0A\x09panose-1:2 2 5 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Balinese\";\x0A\x09panose-1:2 2 5 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Dogra\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Grantha\";\x0A\x09panose-1:2 2 5 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Serif Tangut\";\x0A\x09panose-1:2 2 5 2 6 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Noto Traditional Nushu\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Nunito;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Sans ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Sans Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Sans\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Sans SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Sans ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Nunito Sans Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:OCRB;\x0A\x09panose-1:2 11 6 9 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Old English Text MT\";\x0A\x09panose-1:3 4 9 2 4 5 8 3 8 6;}\x0A@font-face\x0A\x09{font-family:\"Open Sans Light\";\x0A\x09panose-1:2 11 3 6 3 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Open Sans\";\x0A\x09panose-1:2 11 6 6 3 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Open Sans SemiBold\";\x0A\x09panose-1:2 11 7 6 3 8 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Open Sans ExtraBold\";\x0A\x09panose-1:2 11 9 6 3 8 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:Oranienbaum;\x0A\x09panose-1:2 0 5 6 8 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Oswald ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Oswald Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Oswald;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Oswald Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Oswald SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Oxygen Light\";\x0A\x09panose-1:2 0 3 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Oxygen;\x0A\x09panose-1:2 0 5 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Oxygen Mono\";\x0A\x09panose-1:2 0 5 9 3 0 0 9 0 4;}\x0A@font-face\x0A\x09{font-family:Pacifico;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Palace Script MT\";\x0A\x09panose-1:3 3 3 2 2 6 7 12 11 5;}\x0A@font-face\x0A\x09{font-family:\"Palanquin Thin\";\x0A\x09panose-1:2 11 0 4 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Palanquin ExtraLight\";\x0A\x09panose-1:2 11 0 4 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Palanquin Light\";\x0A\x09panose-1:2 11 0 4 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:Palanquin;\x0A\x09panose-1:2 11 0 4 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Palanquin Medium\";\x0A\x09panose-1:2 11 0 4 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Palanquin SemiBold\";\x0A\x09panose-1:2 11 0 4 2 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:Parchment;\x0A\x09panose-1:3 4 6 2 4 7 8 4 8 4;}\x0A@font-face\x0A\x09{font-family:\"Patrick Hand\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Patrick Hand SC\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Petit Formal Script\";\x0A\x09panose-1:3 2 6 2 4 8 7 8 11 6;}\x0A@font-face\x0A\x09{font-family:Playbill;\x0A\x09panose-1:4 5 6 3 0 6 2 2 2 2;}\x0A@font-face\x0A\x09{font-family:\"Playfair Display\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Playfair Display Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Playfair Display SC\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Playfair Display SC Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poiret One\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poor Richard\";\x0A\x09panose-1:2 8 5 2 5 5 5 2 7 2;}\x0A@font-face\x0A\x09{font-family:\"Poppins Thin\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poppins ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poppins Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Poppins;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poppins Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poppins SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poppins ExtraBold\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Poppins Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Posterama;\x0A\x09panose-1:2 11 5 4 2 2 0 2 0 0;}\x0A@font-face\x0A\x09{font-family:\"Pridi ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Pridi Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Pridi;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Pridi Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Pridi SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Pristina;\x0A\x09panose-1:3 6 4 2 4 4 6 8 2 4;}\x0A@font-face\x0A\x09{font-family:\"Prompt Thin\";\x0A\x09panose-1:0 0 2 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Prompt ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Prompt Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Prompt;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Prompt Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Prompt SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Prompt ExtraBold\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Prompt Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Quattrocento;\x0A\x09panose-1:2 2 5 2 3 0 0 0 4 4;}\x0A@font-face\x0A\x09{font-family:\"Quattrocento Sans\";\x0A\x09panose-1:2 11 5 2 5 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:Questrial;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Quire Sans Light\";\x0A\x09panose-1:2 11 3 2 4 4 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Quire Sans\";\x0A\x09panose-1:2 11 5 2 4 4 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Quire Sans Pro Light\";\x0A\x09panose-1:2 11 3 2 4 4 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:\"Rage Italic\";\x0A\x09panose-1:3 7 5 2 4 5 7 7 3 4;}\x0A@font-face\x0A\x09{font-family:\"Raleway Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Raleway ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Raleway Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Raleway;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Raleway Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Raleway SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Raleway ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Raleway Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Rastanty Cortez\";\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 3;}\x0A@font-face\x0A\x09{font-family:Ravie;\x0A\x09panose-1:4 4 8 5 5 8 9 2 6 2;}\x0A@font-face\x0A\x09{font-family:\"Reem Kufi\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Thin\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Condensed Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Light\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Condensed\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Roboto;\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Condensed Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Medium\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Black\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Mono Thin\";\x0A\x09panose-1:0 0 0 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Mono Light\";\x0A\x09panose-1:0 0 0 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Mono\";\x0A\x09panose-1:0 0 0 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Mono Medium\";\x0A\x09panose-1:0 0 0 9 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Serif 20pt Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Roboto Slab Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Nova Cond Light\";\x0A\x09panose-1:2 6 3 6 2 2 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Nova Light\";\x0A\x09panose-1:2 6 3 3 2 2 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Nova Cond\";\x0A\x09panose-1:2 6 5 6 2 2 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Nova\";\x0A\x09panose-1:2 6 5 3 2 2 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:\"Rockwell Nova Extra Bold\";\x0A\x09panose-1:2 6 9 3 2 2 5 2 4 3;}\x0A@font-face\x0A\x09{font-family:Rod;\x0A\x09panose-1:2 3 5 9 5 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Sabon Next LT\";\x0A\x09panose-1:2 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Sacramento;\x0A\x09panose-1:2 0 5 7 0 0 0 2 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sagona ExtraLight\";\x0A\x09panose-1:2 2 3 3 5 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:Sagona;\x0A\x09panose-1:2 1 0 4 4 1 1 1 1 3;}\x0A@font-face\x0A\x09{font-family:\"Sagona Book\";\x0A\x09panose-1:2 2 5 3 5 5 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Sakkal Majalla\";\x0A\x09panose-1:2 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sans Serif Collection\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Sanskrit Text\";\x0A\x09panose-1:2 2 5 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Script MT Bold\";\x0A\x09panose-1:3 4 6 2 4 6 7 8 9 4;}\x0A@font-face\x0A\x09{font-family:Seaford;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Seaford Display\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Secular One\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Marker\";\x0A\x09panose-1:3 8 6 2 4 3 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Light\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Cond\";\x0A\x09panose-1:2 11 5 6 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Semibold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Black\";\x0A\x09panose-1:2 11 10 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Display Light\";\x0A\x09panose-1:2 11 3 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Display\";\x0A\x09panose-1:2 11 5 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Display Semibold\";\x0A\x09panose-1:2 11 7 2 4 5 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro Display SemiLight\";\x0A\x09panose-1:2 11 4 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Pro SemiLight\";\x0A\x09panose-1:2 11 4 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display Hairline\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display Semilight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Display Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small Hairline\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small Semilight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Small Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text Hairline\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text Semilight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Sans Text Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Banner Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Banner Semilight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Banner\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Banner Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Display Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Display Semilight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Display\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Display Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Text Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Text Semilight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Serif Text Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Light\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Semilight\";\x0A\x09panose-1:2 11 4 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Semibold\";\x0A\x09panose-1:2 11 7 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Black\";\x0A\x09panose-1:2 11 10 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Emoji\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Emoji L\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Variable Display Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Variable Display\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Variable Small Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Variable Small\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Variable Text Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe UI Variable Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Segoe Xbox Symbol\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Selawik Light\";\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:Selawik;\x0A\x09panose-1:2 11 5 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Selawik Semibold\";\x0A\x09panose-1:2 11 7 2 4 2 4 2 2 3;}\x0A@font-face\x0A\x09{font-family:\"Shadows Into Light Two\";\x0A\x09panose-1:2 0 5 6 0 0 0 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Shonar Bangla\";\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Showcard Gothic\";\x0A\x09panose-1:4 2 9 4 2 1 2 2 6 4;}\x0A@font-face\x0A\x09{font-family:\"Simplified Arabic\";\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Simplified Arabic Fixed\";\x0A\x09panose-1:2 7 3 9 2 2 5 2 4 4;}\x0A@font-face\x0A\x09{font-family:\"Sitka Banner\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Banner Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Display\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Display Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Heading\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Heading Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Small\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Small Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Subheading\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Subheading Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Text\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Sitka Text Semibold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Skeena;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Skeena Display\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Snap ITC\";\x0A\x09panose-1:4 4 10 7 6 10 2 2 2 2;}\x0A@font-face\x0A\x09{font-family:\"Source Code Pro ExtraLight\";\x0A\x09panose-1:2 11 3 9 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Code Pro Light\";\x0A\x09panose-1:2 11 4 9 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Code Pro\";\x0A\x09panose-1:2 11 5 9 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Code Pro Medium\";\x0A\x09panose-1:2 11 5 9 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Code Pro Semibold\";\x0A\x09panose-1:2 11 6 9 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Code Pro Black\";\x0A\x09panose-1:2 11 8 9 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Sans Pro ExtraLight\";\x0A\x09panose-1:2 11 3 3 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Sans Pro Light\";\x0A\x09panose-1:2 11 4 3 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Sans Pro\";\x0A\x09panose-1:2 11 5 3 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Sans Pro SemiBold\";\x0A\x09panose-1:2 11 6 3 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Sans Pro Black\";\x0A\x09panose-1:2 11 8 3 3 4 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Serif Pro ExtraLight\";\x0A\x09panose-1:2 4 2 3 5 4 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Serif Pro Light\";\x0A\x09panose-1:2 4 3 3 5 4 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Serif Pro\";\x0A\x09panose-1:2 4 6 3 5 4 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Serif Pro SemiBold\";\x0A\x09panose-1:2 4 7 3 5 4 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Source Serif Pro Black\";\x0A\x09panose-1:2 4 9 3 5 4 5 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Speak Pro Light\";\x0A\x09panose-1:2 11 3 4 2 1 1 2 1 2;}\x0A@font-face\x0A\x09{font-family:\"Speak Pro\";\x0A\x09panose-1:2 11 5 4 2 1 1 2 1 2;}\x0A@font-face\x0A\x09{font-family:Staatliches;\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:STCaiyun;\x0A\x09panose-1:2 1 8 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STFangsong;\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STKaiti;\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:STXihei;\x0A\x09panose-1:2 1 6 0 4 1 1 1 1 1;}\x0A@font-face\x0A\x09{font-family:\"Suez One\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Tempus Sans ITC\";\x0A\x09panose-1:4 2 4 4 3 0 7 2 2 2;}\x0A@font-face\x0A\x09{font-family:Tenorite;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Tenorite Display\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"The Hand Light\";\x0A\x09panose-1:3 7 3 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Hand\";\x0A\x09panose-1:3 7 5 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Hand Black\";\x0A\x09panose-1:3 7 9 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Hand Extrablack\";\x0A\x09panose-1:3 7 10 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Serif Hand Light\";\x0A\x09panose-1:3 7 3 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Serif Hand\";\x0A\x09panose-1:3 7 5 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Serif Hand Black\";\x0A\x09panose-1:3 7 9 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"The Serif Hand Extrablack\";\x0A\x09panose-1:3 7 11 2 3 5 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Tisa Offc Serif Pro Thin\";\x0A\x09panose-1:2 1 4 4 3 1 1 1 1 2;}\x0A@font-face\x0A\x09{font-family:\"Tisa Offc Serif Pro\";\x0A\x09panose-1:2 1 5 4 3 1 1 2 1 2;}\x0A@font-face\x0A\x09{font-family:\"Titillium Web ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Titillium Web Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Titillium Web\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Titillium Web SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Titillium Web Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Inline\";\x0A\x09panose-1:2 11 5 4 3 2 3 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Next Light\";\x0A\x09panose-1:2 11 4 3 4 3 3 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Next Cond\";\x0A\x09panose-1:2 11 5 6 4 3 3 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Next\";\x0A\x09panose-1:2 11 5 3 4 3 3 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Next HvyCd\";\x0A\x09panose-1:2 11 9 6 4 3 3 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Next Heavy\";\x0A\x09panose-1:2 11 9 3 4 3 3 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Trade Gothic Next Rounded\";\x0A\x09panose-1:2 15 5 3 4 3 3 2 0 4;}\x0A@font-face\x0A\x09{font-family:\"Traditional Arabic\";\x0A\x09panose-1:2 2 6 3 5 4 5 2 3 4;}\x0A@font-face\x0A\x09{font-family:\"Trirong Thin\";\x0A\x09panose-1:0 0 2 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trirong ExtraLight\";\x0A\x09panose-1:0 0 3 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trirong Light\";\x0A\x09panose-1:0 0 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Trirong;\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trirong Medium\";\x0A\x09panose-1:0 0 6 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trirong SemiBold\";\x0A\x09panose-1:0 0 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trirong ExtraBold\";\x0A\x09panose-1:0 0 9 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Trirong Black\";\x0A\x09panose-1:0 0 10 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Ubuntu Light\";\x0A\x09panose-1:2 11 3 4 3 6 2 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Ubuntu Condensed\";\x0A\x09panose-1:2 11 5 6 3 6 2 3 2 4;}\x0A@font-face\x0A\x09{font-family:Ubuntu;\x0A\x09panose-1:2 11 5 4 3 6 2 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Ubuntu Medium\";\x0A\x09panose-1:2 11 6 4 3 6 2 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"Ubuntu Mono\";\x0A\x09panose-1:2 11 5 9 3 6 2 3 2 4;}\x0A@font-face\x0A\x09{font-family:\"UD Digi Kyokasho N-B\";\x0A\x09panose-1:2 2 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"UD Digi Kyokasho N-R\";\x0A\x09panose-1:2 2 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"UD Digi Kyokasho NK-B\";\x0A\x09panose-1:2 2 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"UD Digi Kyokasho NK-R\";\x0A\x09panose-1:2 2 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"UD Digi Kyokasho NP-B\";\x0A\x09panose-1:2 2 7 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"UD Digi Kyokasho NP-R\";\x0A\x09panose-1:2 2 4 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Univers Condensed Light\";\x0A\x09panose-1:2 11 3 6 2 2 2 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Univers Light\";\x0A\x09panose-1:2 11 4 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Univers Condensed\";\x0A\x09panose-1:2 11 5 6 2 2 2 5 2 4;}\x0A@font-face\x0A\x09{font-family:Univers;\x0A\x09panose-1:2 11 5 3 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Urdu Typesetting\";\x0A\x09panose-1:3 2 4 2 4 4 6 3 2 3;}\x0A@font-face\x0A\x09{font-family:Utsaah;\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:Vani;\x0A\x09panose-1:2 4 5 2 5 4 5 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Varela Round\";\x0A\x09panose-1:0 0 5 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Cond Light\";\x0A\x09panose-1:2 11 3 6 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Light\";\x0A\x09panose-1:2 11 3 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Cond\";\x0A\x09panose-1:2 11 6 6 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro\";\x0A\x09panose-1:2 11 6 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Cond Semibold\";\x0A\x09panose-1:2 11 7 6 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Semibold\";\x0A\x09panose-1:2 11 7 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Cond Black\";\x0A\x09panose-1:2 11 10 6 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:\"Verdana Pro Black\";\x0A\x09panose-1:2 11 10 4 3 5 4 4 2 4;}\x0A@font-face\x0A\x09{font-family:Vijaya;\x0A\x09panose-1:2 2 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"Viner Hand ITC\";\x0A\x09panose-1:3 7 5 2 3 5 2 2 2 3;}\x0A@font-face\x0A\x09{font-family:Vivaldi;\x0A\x09panose-1:3 2 6 2 5 5 6 9 8 4;}\x0A@font-face\x0A\x09{font-family:\"Vladimir Script\";\x0A\x09panose-1:3 5 4 2 4 4 7 7 3 5;}\x0A@font-face\x0A\x09{font-family:\"Walbaum Display Light\";\x0A\x09panose-1:2 7 3 3 9 7 3 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Walbaum Display\";\x0A\x09panose-1:2 7 5 3 9 7 3 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Walbaum Display SemiBold\";\x0A\x09panose-1:2 7 7 3 9 7 3 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Walbaum Display Heavy\";\x0A\x09panose-1:2 7 10 3 9 7 3 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Walbaum Heading\";\x0A\x09panose-1:2 7 3 3 9 7 3 2 3 3;}\x0A@font-face\x0A\x09{font-family:\"Walbaum Text\";\x0A\x09panose-1:2 7 5 3 8 7 3 2 3 3;}\x0A@font-face\x0A\x09{font-family:Wandohope;\x0A\x09panose-1:2 3 6 3 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans Thin\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans ExtraLight\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans Light\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans Medium\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans SemiBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans ExtraBold\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:\"Work Sans Black\";\x0A\x09panose-1:0 0 0 0 0 0 0 0 0 0;}\x0A@font-face\x0A\x09{font-family:Yesteryear;\x0A\x09panose-1:3 2 8 2 4 6 7 7 8 2;}\x0A@font-face\x0A\x09{font-family:\"OldGreekSerif Normal\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"StplGaramondAkzente Normal\";\x0A\x09panose-1:2 11 6 4 2 2 2 2 2 4;}\x0A@font-face\x0A\x09{font-family:\"\\@Yu Gothic\";\x0A\x09panose-1:2 11 4 0 0 0 0 0 0 0;}\x0A /* Style Definitions */\x0A p.MsoNormal, li.MsoNormal, div.MsoNormal\x0A\x09{margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ah1\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:35.4pt;\x0A\x09text-align:center;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:11.6pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ah2\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:70.8pt;\x0A\x09text-align:center;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:10.6pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:9.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ah3\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:106.2pt;\x0A\x09text-align:center;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:9.6pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:9.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ah4\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:141.6pt;\x0A\x09text-align:center;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:8.6pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:7.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ah5\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:177.0pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ah6\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:212.4pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-weight:normal;\x0A\x09text-decoration:underline;}\x0Ap.MsoHeading7, li.MsoHeading7, div.MsoHeading7\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:247.8pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-style:italic;}\x0Ap.MsoHeading8, li.MsoHeading8, div.MsoHeading8\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:283.2pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-style:italic;}\x0Ap.MsoHeading9, li.MsoHeading9, div.MsoHeading9\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:318.6pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-35.4pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-style:italic;}\x0Ap.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:35.4pt;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText\x0A\x09{margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:7.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:7.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.MsoCommentText, li.MsoCommentText, div.MsoCommentText\x0A\x09{margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.MsoHeader, li.MsoHeader, div.MsoHeader\x0A\x09{margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.MsoFooter, li.MsoFooter, div.MsoFooter\x0A\x09{margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Aspan.MsoFootnoteReference\x0A\x09{position:relative;\x0A\x09top:-3.0pt;}\x0Ap.MsoListBullet, li.MsoListBullet, div.MsoListBullet\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:18.0pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-18.0pt;\x0A\x09line-height:-73%;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.MsoBodyText, li.MsoBodyText, div.MsoBodyText\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:6.0pt;\x0A\x09margin-left:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent\x0A\x09{margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:6.0pt;\x0A\x09margin-left:14.15pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Aa:link, span.MsoHyperlink\x0A\x09{color:blue;\x0A\x09text-decoration:underline;}\x0Aa:visited, span.MsoHyperlinkFollowed\x0A\x09{color:#954F72;\x0A\x09text-decoration:underline;}\x0Ap.HalbeLeerzeile, li.HalbeLeerzeile, div.HalbeLeerzeile\x0A\x09{mso-style-name:HalbeLeerzeile;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:5.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.Bogennorm, li.Bogennorm, div.Bogennorm\x0A\x09{mso-style-name:Bogennorm;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:7.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:6.5pt;\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:white;\x0A\x09letter-spacing:.5pt;}\x0Ap.bogenzahl, li.bogenzahl, div.bogenzahl\x0A\x09{mso-style-name:bogenzahl;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:6.5pt;\x0A\x09font-family:\"StplGaramondAkzente\",serif;\x0A\x09color:white;}\x0Ap.Funotenlinie, li.Funotenlinie, div.Funotenlinie\x0A\x09{mso-style-name:Fu\xC3\x9Fnotenlinie;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:7.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:7.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.koltitel, li.koltitel, div.koltitel\x0A\x09{mso-style-name:koltitel;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.0pt;\x0A\x09font-family:\"StempelGaramond RomanSC\",serif;\x0A\x09color:white;}\x0Ap.Autorfu, li.Autorfu, div.Autorfu\x0A\x09{mso-style-name:Autorfu\xC3\x9F;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:6.0pt;\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:white;\x0A\x09font-style:italic;}\x0Ap.Artikeltext, li.Artikeltext, div.Artikeltext\x0A\x09{mso-style-name:Artikeltext;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.6pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.0pt;\x0A\x09font-family:\"NewCenturySchlbk\",serif;}\x0Ap.artikel, li.artikel, div.artikel\x0A\x09{mso-style-name:artikel;\x0A\x09margin:0cm;\x0A\x09line-height:8.4pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.0pt;\x0A\x09font-family:\"NewCenturySchlbk\",serif;}\x0Ap.jokol, li.jokol, div.jokol\x0A\x09{mso-style-name:jokol;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:4.0pt;\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:white;\x0A\x09letter-spacing:-1.5pt;}\x0Ap.jofu, li.jofu, div.jofu\x0A\x09{mso-style-name:jofu\xC3\x9F;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:4.0pt;\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:white;\x0A\x09letter-spacing:-1.5pt;}\x0Aspan.lemma\x0A\x09{mso-style-name:lemma;\x0A\x09font-weight:bold;}\x0Aspan.lemmawiederholung\x0A\x09{mso-style-name:lemmawiederholung;\x0A\x09font-family:PiEdit-K;\x0A\x09color:white;}\x0Aspan.jofu2\x0A\x09{mso-style-name:jofu\xC3\x9F2;\x0A\x09font-family:PiEdit-K;\x0A\x09color:white;\x0A\x09letter-spacing:-2.0pt;}\x0Ap.j, li.j, div.j\x0A\x09{mso-style-name:j;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09text-indent:6.5pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.Vorrede, li.Vorrede, div.Vorrede\x0A\x09{mso-style-name:Vorrede;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09text-indent:21.25pt;\x0A\x09line-height:12.8pt;\x0A\x09background:white;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.Regest, li.Regest, div.Regest\x0A\x09{mso-style-name:Regest;\x0A\x09margin-top:18.5pt;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:5.5pt;\x0A\x09margin-left:29.75pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-21.25pt;\x0A\x09line-height:15.5pt;\x0A\x09background:white;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.5pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-style:italic;}\x0Aspan.FormatvorlageTimesNewRoman\x0A\x09{mso-style-name:\"Formatvorlage Times New Roman\";\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.Funotenrnd5, li.Funotenrnd5, div.Funotenrnd5\x0A\x09{mso-style-name:Fu\xC3\x80\xC3\x80notenrnd5;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;\x0A\x09letter-spacing:-.15pt;}\x0Aspan.FormatInh8\x0A\x09{mso-style-name:\"FormatInh\\[8\\]\";}\x0Aspan.FormatInh5\x0A\x09{mso-style-name:\"FormatInh\\[5\\]\";}\x0Aspan.FormatInh6\x0A\x09{mso-style-name:\"FormatInh\\[6\\]\";}\x0Aspan.FormatInh2\x0A\x09{mso-style-name:\"FormatInh\\[2\\]\";\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh7\x0A\x09{mso-style-name:\"FormatInh\\[7\\]\";}\x0Ap.AbsNrRech1, li.AbsNrRech1, div.AbsNrRech1\x0A\x09{mso-style-name:\"AbsNrRech\\[1\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech2, li.AbsNrRech2, div.AbsNrRech2\x0A\x09{mso-style-name:\"AbsNrRech\\[2\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:72.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh3\x0A\x09{mso-style-name:\"FormatInh\\[3\\]\";\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech3, li.AbsNrRech3, div.AbsNrRech3\x0A\x09{mso-style-name:\"AbsNrRech\\[3\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:108.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech4, li.AbsNrRech4, div.AbsNrRech4\x0A\x09{mso-style-name:\"AbsNrRech\\[4\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:144.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech5, li.AbsNrRech5, div.AbsNrRech5\x0A\x09{mso-style-name:\"AbsNrRech\\[5\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:180.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech6, li.AbsNrRech6, div.AbsNrRech6\x0A\x09{mso-style-name:\"AbsNrRech\\[6\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:216.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech7, li.AbsNrRech7, div.AbsNrRech7\x0A\x09{mso-style-name:\"AbsNrRech\\[7\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:252.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRech8, li.AbsNrRech8, div.AbsNrRech8\x0A\x09{mso-style-name:\"AbsNrRech\\[8\\]\";\x0A\x09margin:0cm;\x0A\x09text-indent:288.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.FormatInh1, li.FormatInh1, div.FormatInh1\x0A\x09{mso-style-name:\"FormatInh\\[1\\]\";\x0A\x09margin:0cm;\x0A\x09page-break-after:avoid;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh4\x0A\x09{mso-style-name:\"FormatInh\\[4\\]\";\x0A\x09font-weight:bold;\x0A\x09font-style:italic;}\x0Aspan.Bblgraphie\x0A\x09{mso-style-name:Bblgraphie;}\x0Aspan.MarkInhalt\x0A\x09{mso-style-name:MarkInhalt;}\x0Ap.Document1, li.Document1, div.Document1\x0A\x09{mso-style-name:\"Document 1\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document2, li.Document2, div.Document2\x0A\x09{mso-style-name:\"Document 2\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document3, li.Document3, div.Document3\x0A\x09{mso-style-name:\"Document 3\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document4, li.Document4, div.Document4\x0A\x09{mso-style-name:\"Document 4\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document5, li.Document5, div.Document5\x0A\x09{mso-style-name:\"Document 5\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document6, li.Document6, div.Document6\x0A\x09{mso-style-name:\"Document 6\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document7, li.Document7, div.Document7\x0A\x09{mso-style-name:\"Document 7\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document8, li.Document8, div.Document8\x0A\x09{mso-style-name:\"Document 8\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh80\x0A\x09{mso-style-name:\"FormatInh 8\";}\x0Aspan.FormatInh50\x0A\x09{mso-style-name:\"FormatInh 5\";}\x0Aspan.FormatInh60\x0A\x09{mso-style-name:\"FormatInh 6\";}\x0Aspan.FormatInh20\x0A\x09{mso-style-name:\"FormatInh 2\";\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh70\x0A\x09{mso-style-name:\"FormatInh 7\";}\x0Ap.AbsNrRechts1, li.AbsNrRechts1, div.AbsNrRechts1\x0A\x09{mso-style-name:\"AbsNrRechts 1\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09text-indent:-9.25pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts2, li.AbsNrRechts2, div.AbsNrRechts2\x0A\x09{mso-style-name:\"AbsNrRechts 2\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:72.0pt;\x0A\x09text-indent:-13.1pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh30\x0A\x09{mso-style-name:\"FormatInh 3\";\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts3, li.AbsNrRechts3, div.AbsNrRechts3\x0A\x09{mso-style-name:\"AbsNrRechts 3\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:108.0pt;\x0A\x09text-indent:-10.85pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts4, li.AbsNrRechts4, div.AbsNrRechts4\x0A\x09{mso-style-name:\"AbsNrRechts 4\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:144.0pt;\x0A\x09text-indent:-10.3pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts5, li.AbsNrRechts5, div.AbsNrRechts5\x0A\x09{mso-style-name:\"AbsNrRechts 5\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:180.0pt;\x0A\x09text-indent:-15.05pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts6, li.AbsNrRechts6, div.AbsNrRechts6\x0A\x09{mso-style-name:\"AbsNrRechts 6\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:216.0pt;\x0A\x09text-indent:-14.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts7, li.AbsNrRechts7, div.AbsNrRechts7\x0A\x09{mso-style-name:\"AbsNrRechts 7\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:252.0pt;\x0A\x09text-indent:-9.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.AbsNrRechts8, li.AbsNrRechts8, div.AbsNrRechts8\x0A\x09{mso-style-name:\"AbsNrRechts 8\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:288.0pt;\x0A\x09text-indent:-11.15pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.FormatInh10, li.FormatInh10, div.FormatInh10\x0A\x09{mso-style-name:\"FormatInh 1\";\x0A\x09margin:0cm;\x0A\x09page-break-after:avoid;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.FormatInh40\x0A\x09{mso-style-name:\"FormatInh 4\";\x0A\x09font-weight:bold;\x0A\x09font-style:italic;}\x0Aspan.Funoten\x0A\x09{mso-style-name:Fu\xC3\x80\xC3\x80noten;\x0A\x09font-family:\"Courier New\";}\x0Ap.Document10, li.Document10, div.Document10\x0A\x09{mso-style-name:\"Document\\[1\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document20, li.Document20, div.Document20\x0A\x09{mso-style-name:\"Document\\[2\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:72.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document30, li.Document30, div.Document30\x0A\x09{mso-style-name:\"Document\\[3\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:108.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document40, li.Document40, div.Document40\x0A\x09{mso-style-name:\"Document\\[4\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:144.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document50, li.Document50, div.Document50\x0A\x09{mso-style-name:\"Document\\[5\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:180.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document60, li.Document60, div.Document60\x0A\x09{mso-style-name:\"Document\\[6\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:216.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document70, li.Document70, div.Document70\x0A\x09{mso-style-name:\"Document\\[7\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:252.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.Document80, li.Document80, div.Document80\x0A\x09{mso-style-name:\"Document\\[8\\]\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:288.0pt;\x0A\x09text-indent:-36.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Ap.footnotetex, li.footnotetex, div.footnotetex\x0A\x09{mso-style-name:\"footnote tex\";\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09letter-spacing:-.1pt;}\x0Aspan.footnoteref\x0A\x09{mso-style-name:\"footnote ref\";\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09vertical-align:super;}\x0Ap.toa, li.toa, div.toa\x0A\x09{mso-style-name:toa;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Garamond Antiqua\",serif;}\x0Aspan.EquationCaption\x0A\x09{mso-style-name:\"_Equation Caption\";}\x0Aspan.Typewriter\x0A\x09{mso-style-name:Typewriter;\x0A\x09font-family:\"Courier New\";}\x0Ap.DefinitionTerm, li.DefinitionTerm, div.DefinitionTerm\x0A\x09{mso-style-name:\"Definition Term\";\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.DefinitionList, li.DefinitionList, div.DefinitionList\x0A\x09{mso-style-name:\"Definition List\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:18.0pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Aspan.CODE\x0A\x09{mso-style-name:CODE;\x0A\x09font-family:\"Courier New\";}\x0Ap.Preformatted, li.Preformatted, div.Preformatted\x0A\x09{mso-style-name:Preformatted;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Courier New\";}\x0Aspan.Max\x0A\x09{mso-style-name:\"Max\\.\";\x0A\x09font-weight:bold;}\x0Ap.H4, li.H4, div.H4\x0A\x09{mso-style-name:H4;\x0A\x09margin-top:5.0pt;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:5.0pt;\x0A\x09margin-left:0cm;\x0A\x09page-break-after:avoid;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-weight:bold;}\x0Ap.coltit, li.coltit, div.coltit\x0A\x09{mso-style-name:coltit;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StempelGaramond RomanSC\",serif;\x0A\x09color:white;\x0A\x09letter-spacing:.5pt;}\x0Ap.H2, li.H2, div.H2\x0A\x09{mso-style-name:H2;\x0A\x09margin-top:5.0pt;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:5.0pt;\x0A\x09margin-left:0cm;\x0A\x09page-break-after:avoid;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:18.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-weight:bold;}\x0Ap.Address, li.Address, div.Address\x0A\x09{mso-style-name:Address;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-style:italic;}\x0Ap.abstand, li.abstand, div.abstand\x0A\x09{mso-style-name:abstand;\x0A\x09margin-top:6.0pt;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09letter-spacing:1.5pt;}\x0Ap.Normale, li.Normale, div.Normale\x0A\x09{mso-style-name:Normale;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.z-BottomofForm, li.z-BottomofForm, div.z-BottomofForm\x0A\x09{mso-style-name:\"z-Bottom of Form\";\x0A\x09margin:0cm;\x0A\x09text-align:center;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09border:none;\x0A\x09padding:0cm;\x0A\x09font-size:8.0pt;\x0A\x09font-family:\"Arial\",sans-serif;\x0A\x09display:none;}\x0Ap.H3, li.H3, div.H3\x0A\x09{mso-style-name:H3;\x0A\x09margin-top:5.0pt;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:5.0pt;\x0A\x09margin-left:0cm;\x0A\x09page-break-after:avoid;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:14.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-weight:bold;}\x0Ap.Kopf, li.Kopf, div.Kopf\x0A\x09{mso-style-name:Kopf;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.Text, li.Text, div.Text\x0A\x09{mso-style-name:Text;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09text-indent:21.25pt;\x0A\x09line-height:12.8pt;\x0A\x09background:white;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:9.5pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.Formatvorlage, li.Formatvorlage, div.Formatvorlage\x0A\x09{mso-style-name:Formatvorlage;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Aspan.Betonung\x0A\x09{mso-style-name:Betonung;\x0A\x09font-style:italic;}\x0Aspan.Hervorhebung1\x0A\x09{mso-style-name:Hervorhebung1;\x0A\x09font-style:italic;}\x0Aspan.CharacterStyle4\x0A\x09{mso-style-name:\"Character Style 4\";\x0A\x09font-family:\"Bookman Old Style\",serif;}\x0Ap.Style1, li.Style1, div.Style1\x0A\x09{mso-style-name:\"Style 1\";\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Aspan.CharacterStyle3\x0A\x09{mso-style-name:\"Character Style 3\";\x0A\x09font-family:\"Bookman Old Style\",serif;}\x0Aspan.CharacterStyle2\x0A\x09{mso-style-name:\"Character Style 2\";\x0A\x09font-family:\"Bookman Old Style\",serif;}\x0Ap.Style3, li.Style3, div.Style3\x0A\x09{mso-style-name:\"Style 3\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:14.4pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Ap.Corpodeltesto3, li.Corpodeltesto3, div.Corpodeltesto3\x0A\x09{mso-style-name:\"Corpo del testo 3\";\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:18.0pt;\x0A\x09font-family:\"Arial\",sans-serif;}\x0Ap.Style6, li.Style6, div.Style6\x0A\x09{mso-style-name:\"Style 6\";\x0A\x09margin:0cm;\x0A\x09line-height:117%;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Bookman Old Style\",serif;}\x0Ap.Formatvorlage2, li.Formatvorlage2, div.Formatvorlage2\x0A\x09{mso-style-name:Formatvorlage2;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:Ahorus;\x0A\x09text-decoration:line-through;}\x0Ap.Formatvorlage1, li.Formatvorlage1, div.Formatvorlage1\x0A\x09{mso-style-name:Formatvorlage1;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:Ahorus;}\x0Ap.Textkrper-Erstzeileneinzug1, li.Textkrper-Erstzeileneinzug1, div.Textkrper-Erstzeileneinzug1\x0A\x09{mso-style-name:Textk\xC3\xB6rper-Erstzeileneinzug1;\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:6.0pt;\x0A\x09margin-left:0cm;\x0A\x09text-indent:10.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.Textkrper-Erstzeileneinzug21, li.Textkrper-Erstzeileneinzug21, div.Textkrper-Erstzeileneinzug21\x0A\x09{mso-style-name:\"Textk\xC3\xB6rper-Erstzeileneinzug 21\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:6.0pt;\x0A\x09margin-left:14.15pt;\x0A\x09text-indent:10.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Ap.Default, li.Default, div.Default\x0A\x09{mso-style-name:Default;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09color:black;}\x0Aspan.fliesstext\x0A\x09{mso-style-name:fliesstext;}\x0Ap.Sprechblasentext1, li.Sprechblasentext1, div.Sprechblasentext1\x0A\x09{mso-style-name:Sprechblasentext1;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.0pt;\x0A\x09font-family:\"Tahoma\",sans-serif;}\x0Ap.Textkrper21, li.Textkrper21, div.Textkrper21\x0A\x09{mso-style-name:\"Textk\xC3\xB6rper 21\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:6.0pt;\x0A\x09margin-left:14.15pt;\x0A\x09text-align:justify;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;\x0A\x09letter-spacing:.25pt;}\x0Aspan.n0x958f808x0x9584608\x0A\x09{mso-style-name:n0x958f808x0x9584608;}\x0Aspan.ital\x0A\x09{mso-style-name:ital;}\x0Aspan.bold\x0A\x09{mso-style-name:bold;}\x0Ap.Style19, li.Style19, div.Style19\x0A\x09{mso-style-name:\"Style 19\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:36.0pt;\x0A\x09line-height:113%;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:9.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-style:italic;}\x0Ap.Style5, li.Style5, div.Style5\x0A\x09{mso-style-name:\"Style 5\";\x0A\x09margin-top:0cm;\x0A\x09margin-right:36.0pt;\x0A\x09margin-bottom:0cm;\x0A\x09margin-left:7.2pt;\x0A\x09text-align:justify;\x0A\x09text-indent:-7.2pt;\x0A\x09line-height:125%;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.0pt;\x0A\x09font-family:\"Bookman Old Style\",serif;}\x0Ap.Style2, li.Style2, div.Style2\x0A\x09{mso-style-name:\"Style 2\";\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Aspan.StrongFettMLW\x0A\x09{mso-style-name:\"Strong\\.FettMLW\";\x0A\x09font-weight:bold;}\x0Aspan.lmlsenserectebase\x0A\x09{mso-style-name:lmlsenserectebase;}\x0Aspan.lmlsenseboldbase\x0A\x09{mso-style-name:lmlsenseboldbase;}\x0Aspan.Unterpungiert\x0A\x09{mso-style-name:Unterpungiert;\x0A\x09text-decoration:underline;}\x0Aspan.StandardMLW\x0A\x09{mso-style-name:StandardMLW;\x0A\x09text-decoration:none;\x0A\x09vertical-align:baseline;}\x0Aspan.SprechblasentextZchn\x0A\x09{mso-style-name:\"Sprechblasentext Zchn\";\x0A\x09font-family:\"Tahoma\",sans-serif;\x0A\x09color:black;}\x0Ap.Dokumentstruktur1, li.Dokumentstruktur1, div.Dokumentstruktur1\x0A\x09{mso-style-name:Dokumentstruktur1;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09text-indent:6.5pt;\x0A\x09line-height:-73%;\x0A\x09background:navy;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Tahoma\",sans-serif;\x0A\x09color:black;}\x0Ap.NurText1, li.NurText1, div.NurText1\x0A\x09{mso-style-name:\"Nur Text1\";\x0A\x09margin:0cm;\x0A\x09text-indent:6.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Courier New\";}\x0Aspan.berschrift1Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 1 Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;\x0A\x09font-weight:bold;}\x0Aspan.berschrift2Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 2 Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;\x0A\x09font-weight:bold;}\x0Aspan.berschrift3Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 3 Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;\x0A\x09font-weight:bold;}\x0Aspan.berschrift4Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 4 Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;\x0A\x09font-weight:bold;}\x0Aspan.berschrift5Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 5 Zchn\";\x0A\x09color:black;\x0A\x09font-weight:bold;}\x0Aspan.berschrift6Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 6 Zchn\";\x0A\x09color:black;\x0A\x09text-decoration:underline;}\x0Aspan.berschrift7Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 7 Zchn\";\x0A\x09color:black;\x0A\x09font-style:italic;}\x0Aspan.berschrift8Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 8 Zchn\";\x0A\x09color:black;\x0A\x09font-style:italic;}\x0Aspan.berschrift9Zchn\x0A\x09{mso-style-name:\"\xC3\x9Cberschrift 9 Zchn\";\x0A\x09color:black;\x0A\x09font-style:italic;}\x0Aspan.FuzeileZchn\x0A\x09{mso-style-name:\"Fu\xC3\x9Fzeile Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;}\x0Aspan.KopfzeileZchn\x0A\x09{mso-style-name:\"Kopfzeile Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;}\x0Aspan.FunotentextZchn\x0A\x09{mso-style-name:\"Fu\xC3\x9Fnotentext Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;}\x0Aspan.DokumentstrukturZchn\x0A\x09{mso-style-name:\"Dokumentstruktur Zchn\";\x0A\x09font-family:\"Tahoma\",sans-serif;\x0A\x09color:black;}\x0Ap.NurText2, li.NurText2, div.NurText2\x0A\x09{mso-style-name:\"Nur Text2\";\x0A\x09margin:0cm;\x0A\x09text-indent:6.5pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Courier New\";}\x0Aspan.Fett1\x0A\x09{mso-style-name:Fett1;\x0A\x09font-weight:bold;}\x0Aspan.CharacterStyle1\x0A\x09{mso-style-name:\"Character Style 1\";\x0A\x09font-family:\"Bookman Old Style\",serif;}\x0Aspan.expital\x0A\x09{mso-style-name:\"exp ital\";}\x0Ap.Kommentarthema1, li.Kommentarthema1, div.Kommentarthema1\x0A\x09{mso-style-name:Kommentarthema1;\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;\x0A\x09font-weight:bold;}\x0Ap.PlainText1, li.PlainText1, div.PlainText1\x0A\x09{mso-style-name:\"Plain Text1\";\x0A\x09margin:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:10.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Aspan.BesuchterLink1\x0A\x09{mso-style-name:BesuchterLink1;\x0A\x09color:olive;\x0A\x09text-decoration:underline;}\x0Aspan.KommentartextZchn\x0A\x09{mso-style-name:\"Kommentartext Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;}\x0Aspan.KommentarthemaZchn\x0A\x09{mso-style-name:\"Kommentarthema Zchn\";\x0A\x09font-family:\"StplGaramond\",serif;\x0A\x09color:black;\x0A\x09font-weight:bold;}\x0Aspan.exp\x0A\x09{mso-style-name:exp;}\x0Ap.StandardWeb1, li.StandardWeb1, div.StandardWeb1\x0A\x09{mso-style-name:\"Standard \\(Web\\)1\";\x0A\x09margin-top:5.0pt;\x0A\x09margin-right:0cm;\x0A\x09margin-bottom:5.0pt;\x0A\x09margin-left:0cm;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:12.0pt;\x0A\x09font-family:\"Times New Roman\",serif;}\x0Aspan.excl\x0A\x09{mso-style-name:excl;}\x0Aspan.high\x0A\x09{mso-style-name:high;}\x0Aspan.defla\x0A\x09{mso-style-name:def_la;}\x0Aspan.st\x0A\x09{mso-style-name:st;}\x0Aspan.NurTextZchn\x0A\x09{mso-style-name:\"Nur Text Zchn\";\x0A\x09font-family:Consolas;}\x0Aspan.mlwsenserectebase\x0A\x09{mso-style-name:mlwsenserectebase;}\x0Aspan.highlight\x0A\x09{mso-style-name:highlight;}\x0Aspan.mlwexpanrectebase\x0A\x09{mso-style-name:mlwexpanrectebase;}\x0Aspan.hyphfragment\x0A\x09{mso-style-name:hyph_fragment;}\x0Ap.innegabilisinnegabilis, li.innegabilisinnegabilis, div.innegabilisinnegabilis\x0A\x09{mso-style-name:innegabilisinnegabilis;\x0A\x09margin:0cm;\x0A\x09text-align:justify;\x0A\x09text-indent:6.5pt;\x0A\x09line-height:8.8pt;\x0A\x09punctuation-wrap:simple;\x0A\x09text-autospace:none;\x0A\x09font-size:8.5pt;\x0A\x09font-family:\"StplGaramond\",serif;}\x0Aspan.mlwsenseitalicsbase\x0A\x09{mso-style-name:mlwsenseitalicsbase;}\x0Aspan.msoIns\x0A\x09{mso-style-name:\"\";\x0A\x09text-decoration:underline;\x0A\x09color:teal;}\x0Aspan.msoDel\x0A\x09{mso-style-name:\"\";\x0A\x09text-decoration:line-through;\x0A\x09color:red;}\x0A.MsoChpDefault\x0A\x09{font-size:10.0pt;}\x0A /* Page Definitions */\x0A @page WordSection1\x0A\x09{size:21.0cm 841.95pt;\x0A\x09margin:4.0cm 53.0pt 95.0pt 54.0pt;}\x0Adiv.WordSection1\x0A\x09{page:WordSection1;}\x0A /* List Definitions */\x0A ol\x0A\x09{margin-bottom:0cm;}\x0Aul\x0A\x09{margin-bottom:0cm;}\x0A-->\x0A</style>\x0A\x0A</head>\x0A\x0A<body lang=DE link=blue vlink=\"#954F72\" style=\'word-wrap:break-word\'>\x0A\x0A<div class=WordSection1>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>k</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>littera</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>decima</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>alphabeti</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Latini.</span></i><span lang=EN-US>\xC2\xA0 </span><span\x0Aclass=jofu2><span lang=EN-US style=\'font-size:8.0pt;font-family:\"Arial\",sans-serif;\x0Acolor:#0070C0;letter-spacing:0pt\'>H\xC3\xA4berlin</span></span><span lang=EN-US>[MFSP]\xC2\xA0\x0A</span><b><span lang=EN-US>1</span></b><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>gener.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Otfr.</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>Liutb.</span><span\x0Alang=EN-US> </span><span lang=EN-US>70sqq.</span><span lang=EN-US> </span><span\x0Alang=EN-US>k</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>z</span><span lang=EN-US> </span><span\x0Alang=EN-US>sepius</span><span lang=EN-US> </span><span lang=EN-US>haec</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>Theotisca)</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>lingua</span><span\x0Alang=EN-US> </span><span lang=EN-US>extra</span><span lang=EN-US> </span><span\x0Alang=EN-US>usum</span><span lang=EN-US> </span><span lang=EN-US>Latinitatis</span><span\x0Alang=EN-US> </span><span lang=EN-US>utitur</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US\x0Astyle=\'letter-spacing:1.75pt\'>.</span><span lang=EN-US>;</span><span\x0Alang=EN-US> </span><span lang=EN-US>ob</span><span lang=EN-US> </span><span\x0Alang=EN-US>stridorem</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>dentium</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>hac</span><span lang=EN-US> </span><span lang=EN-US>lingua</span><span\x0Alang=EN-US> </span><span lang=EN-US>z</span><span lang=EN-US> </span><span\x0Alang=EN-US>utuntur,</span><span lang=EN-US> </span><span lang=EN-US>k</span><span\x0Alang=EN-US> </span><span lang=EN-US>autem</span><span lang=EN-US> </span><span\x0Alang=EN-US>ob</span><span lang=EN-US> </span><span lang=EN-US>fautium</span><span\x0Alang=EN-US> </span><span lang=EN-US>sonoritatem.</span><span lang=EN-US>[MFSP]</span><b><span\x0Alang=EN-US>2</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>mus.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>de</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>littera</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>significativa</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>\x0A</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>neumatibus</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>addita</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>(\xE2\x80\x98Romanusbuchstabe\xE2\x80\x99;</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>de</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>re</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>LexMusLat.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>vol.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>II.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>s.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x98k\xE2\x80\x99)</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Notker.</span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Balb.</span><span lang=EN-US> </span><span lang=EN-US>ad</span><span\x0Alang=EN-US> </span><span lang=EN-US>Lantb.</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>36,21</span><span\x0Alang=EN-US> </span><span lang=EN-US>k</span><span lang=EN-US> </span><span\x0Alang=EN-US>licet</span><span lang=EN-US> </span><span lang=EN-US>apud</span><span\x0Alang=EN-US> </span><span lang=EN-US>Latinos</span><span lang=EN-US> </span><span\x0Alang=EN-US>nihil</span><span lang=EN-US> </span><span lang=EN-US>valeat,</span><span\x0Alang=EN-US> </span><span lang=EN-US>apud</span><span lang=EN-US> </span><span\x0Alang=EN-US>nos</span><span lang=EN-US> </span><span lang=EN-US>tamen</span><span\x0Alang=EN-US> </span><span lang=EN-US>Alemannos</span><span lang=EN-US> </span><span\x0Alang=EN-US>pro</span><span lang=EN-US> </span><span lang=EN-US>x</span><span\x0Alang=EN-US> </span><span lang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>i.</span></i></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US\x0Astyle=\'font-family:\"OldGreekSerif Normal\"\'>x</span><span lang=EN-US>)</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>Greca</span><span\x0Alang=EN-US> </span><span lang=EN-US>positum<span style=\'letter-spacing:-1.75pt\'>:</span></span><span\x0Alang=EN-US> </span><span lang=EN-US>chlenche</span><span lang=EN-US> </span><span\x0Alang=EN-US>(klenche</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>sim.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>var.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>l.</span></i><span lang=EN-US>),</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>id</span><span\x0Alang=EN-US> </span><span lang=EN-US>est</span><span lang=EN-US> </span><span\x0Alang=EN-US>clange,</span><span lang=EN-US> </span><span lang=EN-US>clamitat</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(inde</span></i><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Frutolf.</span><span lang=EN-US> </span><span lang=EN-US>[?]</span><span\x0Alang=EN-US> </span><span lang=EN-US>brev.</span><span lang=EN-US> </span><span\x0Alang=EN-US>14</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>104.</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>al.).</span></i><span lang=EN-US>[MFSP]</span><b><span\x0Alang=EN-US>3</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>math.</span></i><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>numerum</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>CL</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>significans</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Carm.</span><span\x0Alang=EN-US> </span><span lang=EN-US>de</span><span lang=EN-US> </span><span\x0Alang=EN-US>litt.</span><span lang=EN-US> </span>11 k centenarium medium servat et\x0Aunum.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kabrates</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cabrates.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kacabre</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>cacabre.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>ka\xC3\xA7ia</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cacia.[VERWEIS]<b>kado</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cado.[VERWEIS]<b>kaganus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> caganus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kahtena</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>catena.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kaikias</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>caecias.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>20,56sqq.</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Albert.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>M.</span> meteor. 3,1,22 p. 123,46 ab oriente autem solstitiali aestivo apud\x0Anos sine nomine est, quem Graeci tamen k\xE2\x80\x91<u><span style=\'display:none\'>aiki</span></u>an\x0Avocant.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>[kaiparios</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> ceparius.<b>]</b>[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kakabre</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>cacabre.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kakodaemon</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cacodaemon.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kakotheon</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cacotheon.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kalcecutium</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>chalcecutium.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kalendae</b>, \xE2\x80\x91arum <i><span\x0Astyle=\'letter-spacing:.25pt\'>f.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>pl.</span></i> (<i><span\x0Astyle=\'letter-spacing:.25pt\'>sg.</span><span style=\'letter-spacing:-1.75pt\'>:</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>43</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span></i><i><span style=\'letter-spacing:-1.5pt\'>\xC2\xA0</span><span\x0Astyle=\'letter-spacing:.25pt\'>p.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>2542</span><span style=\'letter-spacing:\x0A-1.5pt\'>,</span></i><i><span style=\'letter-spacing:-1.5pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>18</span></i>. <i><span style=\'letter-spacing:\x0A.25pt\'>adde</span></i> <span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Primord.</span> Windb. 3 p. 563,1).[MFSP]<i><span style=\'letter-spacing:\x0A.25pt\'>script.</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>et</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>form.</span><span style=\'letter-spacing:\x0A-1.75pt\'>:</span></i>[MFSP]ca-<span style=\'letter-spacing:-1.75pt\'>:</span> <i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>41</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>43</span><span style=\'letter-spacing:\x0A-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'> </span></i><i><span\x0Astyle=\'letter-spacing:-1.5pt\'>\xC2\xA0</span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>2542</span><span\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span style=\'letter-spacing:-1.5pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>32</span></i>. <i><span\x0Astyle=\'letter-spacing:.25pt\'>al</span></i>.[MFSP]kall-<span style=\'letter-spacing:\x0A-1.75pt\'>:</span><i><span style=\'letter-spacing:.25pt\'> </span></i><i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>52</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>54</span></i>.[MFSP](ca-, ka)lan-<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span><i><span style=\'letter-spacing:.25pt\'> </span></i><i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>28</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>47</span><span style=\'letter-spacing:\x0A-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>49</span></i>. <i><span style=\'letter-spacing:\x0A.25pt\'>al.</span></i>[MFSP]<i><span style=\'letter-spacing:.25pt\'>masc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>decl.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><i><span style=\'letter-spacing:.25pt\'>l</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>30</span><span style=\'letter-spacing:\x0A-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>51</span></i>.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>I</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>proprie</span><span style=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]<b>A</b>\x0A<i><span style=\'letter-spacing:.25pt\'>strictius</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dies</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>primus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>initium</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>erster</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Tag</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>des</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monats,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monatsanfang,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Kalenden\xE2\x80\x99</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]<b>1</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>in</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>univ.</span><span style=\'letter-spacing:\x0A-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Sermo</span>\x0Ade sacril. <span lang=EN-US>23</span><span lang=EN-US> </span><span lang=EN-US>dies</span><span\x0Alang=EN-US> </span><span lang=EN-US>c<a name=\"kalendae5m_1\"></a>alandarum,</span><span\x0Alang=EN-US> </span><span lang=EN-US>quas</span><span lang=EN-US> </span><span\x0Alang=EN-US>Ianuarias</span><span lang=EN-US> </span><span lang=EN-US>vocant,</span><span\x0Alang=EN-US> </span><span lang=EN-US>a</span><span lang=EN-US> </span><span\x0Alang=EN-US>Iano,</span><span lang=EN-US> </span><span lang=EN-US>homine</span><span\x0Alang=EN-US> </span><span lang=EN-US>perdito,</span><span lang=EN-US> </span><span\x0Alang=EN-US>nomen</span><span lang=EN-US> </span><span lang=EN-US>accipit.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Comput.</span><span lang=EN-US> </span><span lang=EN-US>Borst.</span><span\x0Alang=EN-US> </span><span lang=EN-US>2,7</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>e</span><span\x0Alang=EN-US> </span><span lang=EN-US>(\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>i</span><a\x0Aname=\"kalendae2m_1\"></a><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>var.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>l.</span></i><span lang=EN-US>)</span><span lang=EN-US> </span><span\x0Alang=EN-US>interpretantur</span><span lang=EN-US> </span><span lang=EN-US>exordia</span><span\x0Alang=EN-US> </span><span lang=EN-US>mensium,</span><span lang=EN-US> </span><span\x0Alang=EN-US>sed</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>as</span><span lang=EN-US> </span><span\x0Alang=EN-US>a</span><span lang=EN-US> </span><span lang=EN-US>colendo</span><span\x0Alang=EN-US> </span><span lang=EN-US>dictis</span><span lang=EN-US> </span><span\x0Alang=EN-US>dicitur.</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Liutolf.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Sever.</span><span lang=EN-US> </span><span\x0Alang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>5</span><span\x0Alang=EN-US> </span><span lang=EN-US>interrogavi</span><span lang=EN-US> </span><span\x0Alang=EN-US>de</span><span lang=EN-US> </span><span lang=EN-US>festivitatibus</span><span\x0Alang=EN-US> </span><span lang=EN-US>sanctorum,</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>quotis</span><span\x0Alang=EN-US> </span><span lang=EN-US>essent</span><span lang=EN-US> </span><span\x0Alang=EN-US>celebrandae</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>is</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>eqs.</span></i><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Capit.</span><span\x0Alang=EN-US> </span><span lang=EN-US>episc.</span><span lang=EN-US> </span><span\x0Alang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>65,19</span><span lang=EN-US> </span><span\x0Alang=EN-US>iubemus,</span><span lang=EN-US> </span><span lang=EN-US>ut</span><span\x0Alang=EN-US> </span><span lang=EN-US>omnibus</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>is</span><span\x0Alang=EN-US> </span><span lang=EN-US>archipresbyteri</span><span lang=EN-US> </span><span\x0Alang=EN-US>nostri</span><span lang=EN-US> </span><span lang=EN-US>suos</span><span\x0Alang=EN-US> </span><span lang=EN-US>consacerdotes</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>concilium</span><span\x0Alang=EN-US> </span><span lang=EN-US>evocent</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>eqs</span></i><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>saepe.</span></i><span\x0Alang=EN-US>[MFSP]</span><b><span lang=EN-US>2</span></b><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>in</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>designatione</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>\x0A</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>certi</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>diei</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>(fere</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>forma</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>abbreviata;</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>cf.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>H.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Grotefend,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>Abriss</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>der</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Chronologie</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>des</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>dt.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>Mittelalters</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>und</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>der</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Neuzeit.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span style=\'font-size:7.0pt;\x0Aposition:relative;top:-2.0pt;letter-spacing:.25pt\'>2</span><span\x0Astyle=\'letter-spacing:.25pt\'>1912.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>32sqq.)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]<b>a</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>spectat</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>primum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>diem</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Trad.</span> Patav. <span lang=EN-US>2</span><span lang=EN-US> </span><span\x0Alang=EN-US>(a.</span><span lang=EN-US> </span><span lang=EN-US>739)</span><span\x0Alang=EN-US> </span><span lang=EN-US>qui</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(episcopus)</span></i><span lang=EN-US>\x0A</span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>consecravit</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ecclesiam)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>nomine</span><span\x0Alang=EN-US> </span><span lang=EN-US>sanctae</span><span lang=EN-US> </span><span\x0Alang=EN-US>Mariae</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>constituit</span><span lang=EN-US> </span><span\x0Alang=EN-US>diem</span><span lang=EN-US> </span><span lang=EN-US>sollemnem</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>kal.</span><span lang=EN-US> </span><span lang=EN-US>Novembris.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Calend.</span><span lang=EN-US> </span><span lang=EN-US>Karol.</span><span\x0Alang=EN-US> </span><span lang=EN-US>B</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>420,7</span><span\x0Alang=EN-US> </span><span lang=EN-US>mense</span><span lang=EN-US> </span><span\x0Alang=EN-US>Ianuario</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>c\xE2\x80\x91<u><span style=\'display:none\'>alend</span></u>i<a\x0Aname=\"kalendae3m_1\"></a>s</span><span lang=EN-US> </span><span lang=EN-US>nox</span><span\x0Alang=EN-US> </span><span lang=EN-US>habet</span><span lang=EN-US> </span><span\x0Alang=EN-US>horas</span><span lang=EN-US> </span><span lang=EN-US>octodecim,</span><span\x0Alang=EN-US> </span><span lang=EN-US>dies</span><span lang=EN-US> </span><span\x0Alang=EN-US>habet</span><span lang=EN-US> </span><span lang=EN-US>horas</span><span\x0Alang=EN-US> </span><span lang=EN-US>sex</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(v.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>notam</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>ed.)</span></i><span lang=EN-US>.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Consuet.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Vird.</span><span lang=EN-US> </span><span\x0Alang=EN-US>28</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>415,5</span><span lang=EN-US> </span><span\x0Alang=EN-US>a</span><span lang=EN-US> </span><span lang=EN-US>supra</span><span\x0Alang=EN-US> </span><span lang=EN-US>dicta</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Novembris)</span></i><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>c<a name=\"kalendae3m_2\"></a>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>alend</span></u>a</span><a name=\"kalendae1m_1\"></a><span\x0Alang=EN-US> </span><span lang=EN-US>usque</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>Dominicam</span><span\x0Alang=EN-US> </span><span lang=EN-US>Coenam</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>mandatum</span><span\x0Alang=EN-US> </span><span lang=EN-US>fratres</span><span lang=EN-US> </span><span\x0Alang=EN-US>habebunt</span><span lang=EN-US> </span><span lang=EN-US>calidam</span><span\x0Alang=EN-US> </span><span lang=EN-US>aquam.</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>persaepe.</span></i><span lang=EN-US>[MFSP]</span><b><span\x0Alang=EN-US>b</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>spectat</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>aliquos</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>dies</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>subtractos</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>a</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>primo</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>mensis</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>consequentis</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Chart.</span><span lang=EN-US> </span><span\x0Alang=EN-US>Sangall.</span><span lang=EN-US> </span><span lang=EN-US>A</span><span\x0Alang=EN-US> </span><span lang=EN-US>9</span><span lang=EN-US> </span><span\x0Alang=EN-US>(a.</span><span lang=EN-US> </span><span lang=EN-US>744)</span><span\x0Alang=EN-US> </span><span lang=EN-US>facta</span><span lang=EN-US> </span><span\x0Alang=EN-US>cartola</span><span lang=EN-US> </span><span lang=EN-US>donationis</span><span\x0Alang=EN-US> </span><span lang=EN-US>anno</span><span lang=EN-US> </span><span\x0Alang=EN-US>XXX</span><span lang=EN-US> </span><span lang=EN-US>pos</span><span\x0Alang=EN-US> </span><span lang=EN-US>regnu</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span>Dagopirti reies,<span style=\'letter-spacing:-.2pt\'> </span>die<span\x0Astyle=\'letter-spacing:-.2pt\'> </span>tertium<span style=\'letter-spacing:-.2pt\'>\x0A</span>c<a name=\"kalendae5m_2\"></a>alandas<span style=\'letter-spacing:-.2pt\'> </span>Settenbris.<i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Trad.</span> Ratisb. <span lang=EN-US>136</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>110,21</span><span lang=EN-US> </span><span lang=EN-US>actum</span><span\x0Alang=EN-US> </span><span lang=EN-US>est</span><span lang=EN-US> </span><span\x0Alang=EN-US>anno</span><span lang=EN-US> </span><span lang=EN-US>Arnulfi</span><span\x0Alang=EN-US> </span><span lang=EN-US>regis</span><span lang=EN-US> </span><span\x0Alang=EN-US>secundo</span><span lang=EN-US> </span><span lang=EN-US>VII.</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>arum</span><span\x0Alang=EN-US> </span><span lang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>corr.</span></i></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ed.</span></i><span lang=EN-US> </span>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kal</span></u>a<a name=\"kalendae5m_3\"></a>ndarum) Martialium.\x0A<span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Chron.</span> Thietm.\x0A<span lang=EN-US>7,63</span><span lang=EN-US> </span><span lang=EN-US>Heinricus</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>longa</span><span\x0Alang=EN-US> </span><span lang=EN-US>egritudine</span><span lang=EN-US> </span><span\x0Alang=EN-US>vexatus</span><span lang=EN-US> </span><span lang=EN-US>quartodecimo</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>o<a\x0Aname=\"kalendae2m_2\"></a>s</span><span lang=EN-US> </span><span lang=EN-US>Octobris</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>obiit.</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Bund.</span><span lang=EN-US> </span><span\x0Alang=EN-US>903</span><span lang=EN-US> </span><span lang=EN-US>(epist.</span><span\x0Alang=EN-US> </span><span lang=EN-US>papae)</span><span lang=EN-US> </span><span\x0Alang=EN-US>dat.</span><span lang=EN-US> </span>Lugdunum, secundo kal<a\x0Aname=\"kalendae4m_1\"></a>l. Marzii, pontificatus nostri anno vero octavo. <span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span> Ticin. 39 p. 123,28\x0A<span style=\'font-variant:small-caps;letter-spacing:.5pt\'>mcclxvii</span>, die Veneris,\x0A<span style=\'font-variant:small-caps;letter-spacing:.5pt\'>iiii</span><span\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt\'>o</span>\xC2\xA0ante k<a\x0Aname=\"kalendae4m_2\"></a>all\xE2\x80\x91<u><span style=\'display:none\'>end</span></u>as Martii\x0Ain burgo Lugani, in pallatio ecclesie episcopalis Cumane. <i><span\x0Astyle=\'letter-spacing:.25pt\'>persaepe.</span></i>[MFSP]<b>B</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>latius</span><span style=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]<b>1</b>\x0A<i><span style=\'letter-spacing:.25pt\'>d<a name=\"kalendae8m_1\"></a>ies</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>qui</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>a</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>primo</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>enumeratur,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>determinatur</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>nach</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dem</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monatsersten,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>den</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kalenden</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>gez\xC3\xA4hlter,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>bestimmter</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Tag</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>des</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monats</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>A.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Borst,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Der</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>karoling.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Reichskalender.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>2001.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>60)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Carm.</span> de temp. rat. 180 Mars et Maius, Mavors, Iulius,\x0AOctober senis nonis moderantur, denas septenas dabunt \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>as. <span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Carm.</span><span lang=EN-US> </span><span\x0Alang=EN-US>de</span><span lang=EN-US> </span><span lang=EN-US>conc.</span><span\x0Alang=EN-US> </span><span lang=EN-US>mens.</span><span lang=EN-US> </span><span\x0Alang=EN-US>1,2</span><span lang=EN-US> </span><span lang=EN-US>Ianuarius,</span><span\x0Alang=EN-US> </span><span lang=EN-US>December</span><span lang=EN-US> </span><span\x0Alang=EN-US>et</span><span lang=EN-US> </span><span lang=EN-US>Augustus</span><span\x0Alang=EN-US> </span><span lang=EN-US>pariter</span><span lang=EN-US> </span><span\x0Alang=EN-US>quarto</span><span lang=EN-US> </span><span lang=EN-US>nonas</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>as</span><span\x0Alang=EN-US> </span><span lang=EN-US>habent</span><span lang=EN-US> </span><span\x0Alang=EN-US>nono</span><span lang=EN-US> </span><span lang=EN-US>decimo.</span><span\x0Alang=EN-US> </span><span lang=EN-US>2,2</span><span lang=EN-US> </span><span\x0Alang=EN-US>Martius</span><span lang=EN-US> </span><span lang=EN-US>cum</span><span\x0Alang=EN-US> </span><span lang=EN-US>Maio,</span><span lang=EN-US> </span><span\x0Alang=EN-US>cum</span><span lang=EN-US> </span><span lang=EN-US>Octimbre</span><span\x0Alang=EN-US> </span><span lang=EN-US>Iulius</span><span lang=EN-US> </span><span\x0Alang=EN-US>sexto</span><span lang=EN-US> </span><span lang=EN-US>nonas</span><span\x0Alang=EN-US> </span><span lang=EN-US>dant</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>as</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>septimo</span><span lang=EN-US> </span><span lang=EN-US>decimo.</span><span\x0Alang=EN-US> </span><span lang=EN-US>3,3</span><span lang=EN-US> </span><span\x0Alang=EN-US>Aprilis</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>November,</span><span lang=EN-US> </span><span\x0Alang=EN-US>September</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>Iunius</span><span lang=EN-US> </span><span\x0Alang=EN-US>quarto</span><span lang=EN-US> </span><span lang=EN-US>nonas</span><span\x0Alang=EN-US> </span><span lang=EN-US>simul</span><span lang=EN-US> </span><span\x0Alang=EN-US>gestant</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>octavo</span><span lang=EN-US> </span><span\x0Alang=EN-US>decimo</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>arum.</span><span lang=EN-US>[MFSP]</span><b><span\x0Alang=EN-US>2</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>de</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>certo</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>die</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>mensis</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>i.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>q.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>dies</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Tag</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Agius</span><span\x0Alang=EN-US> </span><span lang=EN-US>comput.</span><span lang=EN-US> </span><span\x0Alang=EN-US>2,10</span><span lang=EN-US> </span><span lang=EN-US>apposui</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>numerum,</span><span\x0Alang=EN-US> </span><span lang=EN-US>quo</span><span lang=EN-US> </span><span\x0Alang=EN-US>quasque</span><span lang=EN-US> </span><span lang=EN-US>solemus</span><span\x0Alang=EN-US> </span><span lang=EN-US>una</span><span lang=EN-US> </span><span\x0Alang=EN-US>cum</span><span lang=EN-US> </span><span lang=EN-US>feriis</span><span\x0Alang=EN-US> </span><span lang=EN-US>investigare</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>as.</span><span\x0Alang=EN-US> </span><span lang=EN-US>6,17</span><span lang=EN-US> </span><span\x0Alang=EN-US>ipse</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>arum</span><span lang=EN-US> </span><span\x0Alang=EN-US>numerus</span><span lang=EN-US> </span><span lang=EN-US>hic</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>in</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>pagina</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>sexta)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>subditus</span><span lang=EN-US> </span><span lang=EN-US>una</span><span\x0Alang=EN-US> </span><span lang=EN-US>praesentis</span><span lang=EN-US> </span><span\x0Alang=EN-US>iunctus</span><span lang=EN-US> </span><span lang=EN-US>cum</span><span\x0Alang=EN-US> </span><span lang=EN-US>concurrentibus</span><span lang=EN-US> </span><span\x0Alang=EN-US>anni.</span><span lang=EN-US> </span><span lang=EN-US>8,17</span><span\x0Alang=EN-US> </span><span lang=EN-US>si</span><span lang=EN-US> </span><span\x0Alang=EN-US>nosse</span><span lang=EN-US> </span><span lang=EN-US>cupis,</span><span\x0Alang=EN-US> </span><span lang=EN-US>quis</span><span lang=EN-US> </span><span\x0Alang=EN-US>pascha</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>is,</span><span lang=EN-US> </span><span\x0Alang=EN-US>quis</span><span lang=EN-US> </span><span lang=EN-US>quoque</span><span\x0Alang=EN-US> </span><span lang=EN-US>festa</span><span lang=EN-US> </span><span\x0Alang=EN-US>cluant.</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ibid.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>al.</span></i><span lang=EN-US>[MFSP]</span><b><span lang=EN-US>3</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>de</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>spatio</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>a</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>die</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>primo</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>mensis</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>usque</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>ad</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>diem</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>primum</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>mensis</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>consequentis</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>i.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>q.</span></i><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>Monat</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Lex</span><span\x0Alang=EN-US> </span><span lang=EN-US>Baiuv.</span><span lang=EN-US> </span><span\x0Alang=EN-US>2,14</span><span lang=EN-US> </span><span lang=EN-US>ut</span><span\x0Alang=EN-US> </span><span lang=EN-US>placita</span><span lang=EN-US> </span><span\x0Alang=EN-US>fiant</span><span lang=EN-US> </span><span lang=EN-US>per</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>as</span><span\x0Alang=EN-US> </span><span lang=EN-US>aut</span><span lang=EN-US> </span><span\x0Alang=EN-US>post</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>xv</span><span lang=EN-US> </span><span\x0Alang=EN-US>dies,</span><span lang=EN-US> </span><span lang=EN-US>si</span><span\x0Alang=EN-US> </span><span lang=EN-US>necesse</span><span lang=EN-US> </span><span\x0Alang=EN-US>est,</span><span lang=EN-US> </span><span lang=EN-US>ad</span><span\x0Alang=EN-US> </span><span lang=EN-US>causas</span><span lang=EN-US> </span><span\x0Alang=EN-US>inquirendas</span><span lang=EN-US> </span><span lang=EN-US>(<i><span\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i></span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Const.</span><span lang=EN-US> </span><span\x0Alang=EN-US>Melf.</span><span lang=EN-US> </span><span lang=EN-US>1,52,1).</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Form.</span><span lang=EN-US> </span><span lang=EN-US>Augiens.</span><span\x0Alang=EN-US> </span><span lang=EN-US>C</span><span lang=EN-US> </span><span\x0Alang=EN-US>3</span><span lang=EN-US> </span><span lang=EN-US>littere</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>prudencie</span><span\x0Alang=EN-US> </span><span lang=EN-US>vestrae</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>illo</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>die)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>e</span><a\x0Aname=\"kalendae1m_2\"></a><span lang=EN-US> </span><span lang=EN-US>per</span><span\x0Alang=EN-US> </span><span lang=EN-US>horam</span><span lang=EN-US> </span><span\x0Alang=EN-US>nonam</span><span lang=EN-US> </span><span lang=EN-US>diei</span><span\x0Alang=EN-US> </span><span lang=EN-US>ad</span><span lang=EN-US> </span><span\x0Alang=EN-US>me</span><span lang=EN-US> </span><span lang=EN-US>pervenerunt,</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>senior</span><span lang=EN-US> </span><span lang=EN-US>meus</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>ill.</span><span lang=EN-US> </span><span lang=EN-US>kal.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>iter</span><span\x0Alang=EN-US> </span><span lang=EN-US>arripiebat.</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Rather.</span><span\x0Alang=EN-US> </span><span lang=EN-US>epist.</span><span lang=EN-US> </span><span\x0Alang=EN-US>25</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>126,2</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>quibus</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>is,</span><span\x0Alang=EN-US> </span><span lang=EN-US>non</span><span lang=EN-US> </span><span\x0Alang=EN-US>cures,</span><span lang=EN-US> </span><span lang=EN-US>de</span><span\x0Alang=EN-US> </span><span lang=EN-US>die</span><span lang=EN-US> </span><span\x0Alang=EN-US>solummodo</span><span lang=EN-US> </span><span lang=EN-US>cogita</span><span\x0Alang=EN-US> </span><span lang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>sim.</span></i></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>126,8).</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Vita</span><span\x0Alang=EN-US> </span><span lang=EN-US>Anselmi</span><span lang=EN-US> </span><span\x0Alang=EN-US>Non.</span><span lang=EN-US> </span><span lang=EN-US>5</span><span\x0Alang=EN-US> </span><span lang=EN-US>(MGLang.</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>568,40)</span><span\x0Alang=EN-US> </span><span lang=EN-US>ex</span><span lang=EN-US> </span><span\x0Alang=EN-US>illius</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>beneficio</span><span lang=EN-US> </span><span\x0Alang=EN-US>pauperes</span><span lang=EN-US> </span><span lang=EN-US>duocentos</span><span\x0Alang=EN-US> </span><span lang=EN-US>per</span><span lang=EN-US> </span><span\x0Alang=EN-US>omnes</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>as</span><span lang=EN-US> </span><span\x0Alang=EN-US>pascebantur</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>(v.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>notam</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>ed.)</span></i><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Carm.</span><span lang=EN-US> </span><span lang=EN-US>Bur.</span><span\x0Alang=EN-US> </span><span lang=EN-US>131</span><span lang=EN-US\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt\'>a</span><span lang=EN-US>,2,8</span><span\x0Alang=EN-US> </span><span lang=EN-US>frustra</span><span lang=EN-US> </span><span\x0Alang=EN-US>tuis</span><span lang=EN-US> </span><span lang=EN-US>litteris</span><span\x0Alang=EN-US> </span><span lang=EN-US>inniteris;</span><span lang=EN-US> </span><span\x0Alang=EN-US>moraberis</span><span lang=EN-US> </span><span lang=EN-US>per</span><span\x0Alang=EN-US> </span><span lang=EN-US>plurimas</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>as.</span><span\x0Alang=EN-US>[MFSP]</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>fort.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>huc</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>spectat</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Carm.</span><span lang=EN-US> </span><span lang=EN-US>var.</span><span\x0Alang=EN-US> </span>III 27,2,41,15 qui post me maneas, venientes adde \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>as, prosa metrique pedes tunc mihi consimiles.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>II</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>meton.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>festivitatibus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vel</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>congregationibus,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>quae</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ex</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>consuetudine</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>primo</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>habebantur</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]<b>A</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>de</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>festivitate</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ex</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ritibus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>paganis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>oriunda</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>festum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>anni</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>diei</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>primi</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Neujahrsfest,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x91feier</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>H.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>B\xC3\xA4chtold-St\xC3\xA4ubli,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Handwb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>d.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Aberglaubens.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>VI.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>1934/35.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>1020sq.;</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>RAC</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>XXV.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>878sqq.)</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Epist.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Bonif.</span><span lang=EN-US> </span><span\x0Alang=EN-US>51</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>90,20</span><span lang=EN-US> </span><span\x0Alang=EN-US>de</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>is</span><span lang=EN-US> </span><span\x0Alang=EN-US>(c<a name=\"kalendae3m_3\"></a>\xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>is</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>var.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>l.</span></i><span lang=EN-US>)</span><span\x0Alang=EN-US> </span><span style=\'letter-spacing:2.25pt\'>..</span>. Ianuariis vel\x0Aceteris auguriis, filacteriis et incantationibus <span style=\'letter-spacing:\x0A2.25pt\'>..</span>. haec et nobis et omnibus christianis detestabile et pernitiosum\x0Aesse iudicamus dicente Deo<span style=\'letter-spacing:-1.75pt\'>:</span> <i><span\x0Astyle=\'letter-spacing:.25pt\'>eqs.</span></i> (<i><span style=\'letter-spacing:\x0A.25pt\'>cf.</span></i> <span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Sermo</span>\x0Ade sacril. 17).[MFSP]<b>B</b> <i><span style=\'letter-spacing:.25pt\'>conventus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(initio</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>habitus)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Versammlung</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(am</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monatsanfang)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Fund.</span> Mur. 4 p. 12,25 ille <i><span\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>presbyter</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>T\xC3\xBCring)</span></i>\x0Anumquam ausus est clericos in locum inducere vel \xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>as\x0Aillorum observare.[MFSP]<b>C</b> <i><span style=\'letter-spacing:.7pt\'>?</span><span\x0Astyle=\'letter-spacing:.25pt\'>tributum</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>canonicis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>initio</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>solvendum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.7pt\'>?</span><span\x0Astyle=\'letter-spacing:.25pt\'>am</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>Monatsanfang</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>zu</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>entrichtende</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Abgabe</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>an</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kanoniker</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Chart.</span> episc. Halb. 1161 l. 12 (a. 1267) bona <span\x0Astyle=\'letter-spacing:2.25pt\'>..</span>. portenario <span style=\'letter-spacing:\x0A2.25pt\'>..</span>. dedimus <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>episcopus)</span></i>\x0Ain restaurum, scilicet <span style=\'letter-spacing:2.25pt\'>..</span>. officium \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalend</span></u>arum in Dhingelstide, fertonem et dimidium\x0Ain Drubeke <i><span style=\'letter-spacing:.25pt\'>eqs.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>(<i><span style=\'letter-spacing:.25pt\'>sim.</span></i>\x0A1247 l. 14). <span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span>\x0AFrancof. 368 quod die, quo computacio facta fuerit, dent <i><span\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>camerarii)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>nobis <i><span style=\'letter-spacing:\x0A.25pt\'>(sc.</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>canonicis)</span></i> \xE2\x80\x91<u><span style=\'display:\x0Anone\'>kalend</span></u>as nostras die eodem <i><span style=\'letter-spacing:\x0A.25pt\'>eqs</span></i>.[MFSP]<b>D</b> <i><span style=\'letter-spacing:.25pt\'>iunctura</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>fratres \xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>arum\x0A<i><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>collegium</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>fratrum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>calendariorum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>d.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>sog.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Kalandsbruderschaft\xE2\x80\x99</span></i>\x0A<i><span style=\'letter-spacing:.25pt\'>(de</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>re</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>L<a\x0Aname=\"kalendae10m_1\"></a>ThK.</span></i><i><span style=\'letter-spacing:.25pt\'> </span></i><span\x0Astyle=\'font-size:7.0pt;position:relative;top:-3.0pt\'>3</span><i><span\x0Astyle=\'letter-spacing:.25pt\'>V.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1140;</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span\x0Astyle=\'letter-spacing:-1.5pt\'>\xC2\xA0</span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>2543</span><span\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span style=\'letter-spacing:-1.5pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>60sqq.)</span><span style=\'letter-spacing:\x0A-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'> </span></i><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span> Westph. IV 233\x0A(a. 1234) mansum <span style=\'letter-spacing:2.25pt\'>..</span>. Heimanno plebano\x0Acontulimus <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>fratres)</span></i>\x0A<span style=\'letter-spacing:2.25pt\'>..</span>. dantes ei plenam libertatem conferendi\x0Aeundem mansum fratribus \xE2\x80\x91<u><span style=\'display:none\'>kalend</span></u>arum sive,\x0Acuicunque <span style=\'letter-spacing:2.25pt\'>..</span>. decreverit conferendum.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>[kalendaricum</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>kalendatium.<b>]</b></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span class=lemma>kalendaris</span><b>,</b>\x0A\xE2\x80\x91e.[MFSP]<i><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendas</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>pertinens</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>auf</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kalenden</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>bezogen</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Bernold.</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Const.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US>chron.</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>393,35</span><span lang=EN-US> </span><span\x0Alang=EN-US>(ed.</span><span lang=EN-US> </span><span lang=EN-US>Pertz)</span><span\x0Alang=EN-US> </span><span lang=EN-US>utrique</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Romani</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>et</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Aegyptii)</span></i><span lang=EN-US> </span><span lang=EN-US>primi</span><span\x0Alang=EN-US> </span><span lang=EN-US>sui</span><span lang=EN-US> </span><span\x0Alang=EN-US>anni</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendar</span></u>e<a name=\"kalendae9m_1\"></a>s</span><span\x0Alang=EN-US> </span><span lang=EN-US>lunae</span><span lang=EN-US> </span><span\x0Alang=EN-US>aetates</span><span lang=EN-US> </span><span lang=EN-US>pro</span><span\x0Alang=EN-US> </span><span lang=EN-US>regularibus</span><span lang=EN-US> </span><span\x0Alang=EN-US>instituentes,</span><span lang=EN-US> </span><span lang=EN-US>ut</span><span\x0Alang=EN-US> </span><span lang=EN-US>praescriptum</span><span lang=EN-US> </span><span\x0Alang=EN-US>est,</span><span lang=EN-US> </span><span lang=EN-US>ordinaverunt</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(item</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>394,4;</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>cf.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>l</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.75pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>49)</span></i><span\x0Alang=EN-US>.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><i><span style=\'letter-spacing:\x0A.25pt\'>adv.</span></i> <span style=\'font-size:6.0pt;font-family:Wingdings;\x0Aposition:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kalendariter.</b>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>secundum</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendarium</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>nach</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dem</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(Fest-,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kirchen\xE2\x80\x91)Kalender,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendarisch</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Conr.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Mur.</span> lib. ordin. <span lang=EN-US>749</span><span lang=EN-US> </span><span\x0Alang=EN-US>sanctorum</span><span lang=EN-US> </span><span lang=EN-US>memoria</span><span\x0Alang=EN-US> </span><span lang=EN-US>seu</span><span lang=EN-US> </span><span\x0Alang=EN-US>celebritas</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>succedit</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>feriam</span><span lang=EN-US> </span><span lang=EN-US>ordinis</span><span\x0Alang=EN-US> </span><span lang=EN-US>sanctorum,</span><span lang=EN-US> </span><span\x0Alang=EN-US>propter</span><span lang=EN-US> </span><span lang=EN-US>quorum</span><span\x0Alang=EN-US> </span><span lang=EN-US>festum</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendarite</span></u>r</span><span\x0Alang=EN-US> </span><span lang=EN-US>incidens</span><span lang=EN-US> </span><span\x0Alang=EN-US>ipsa</span><span lang=EN-US> </span><span lang=EN-US>memoria</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>sua</span><span lang=EN-US> </span><span lang=EN-US>feria</span><span\x0Alang=EN-US> </span><span lang=EN-US>non</span><span lang=EN-US> </span><span\x0Alang=EN-US>fuerat</span><span lang=EN-US> </span><span lang=EN-US>celebrata.</span><span\x0Alang=EN-US> </span><span lang=EN-US>1132</span><span lang=EN-US> </span><span\x0Alang=EN-US>quod</span><span lang=EN-US> </span><span lang=EN-US>celebritas</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>propter</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>festorum</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>translationem</span><span\x0Alang=EN-US> </span><span lang=EN-US>a</span><span lang=EN-US> </span><span\x0Alang=EN-US>sua</span><span lang=EN-US> </span><span lang=EN-US>feriali</span><span\x0Alang=EN-US> </span><span lang=EN-US>littera,</span><span lang=EN-US> </span><span\x0Alang=EN-US>cui</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendarite</span></u>r</span><span lang=EN-US> </span><span\x0Alang=EN-US>est</span><span lang=EN-US> </span><span lang=EN-US>asscriptum,</span><span\x0Alang=EN-US> </span><span lang=EN-US>nullatenus</span><span lang=EN-US> </span><span\x0Alang=EN-US>moveatur.</span><span lang=EN-US> </span><span lang=EN-US>1285</span><span\x0Alang=EN-US> </span><span lang=EN-US>mencio</span><span lang=EN-US> </span><span\x0Alang=EN-US>de</span><span lang=EN-US> </span><span lang=EN-US>septem</span><span\x0Alang=EN-US> </span><span lang=EN-US>Machabeis</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>loco</span><span\x0Alang=EN-US> </span><span lang=EN-US>sibi</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendarite</span></u>r</span><span\x0Alang=EN-US> </span><span lang=EN-US>ascripto</span><span lang=EN-US> </span><span\x0Alang=EN-US>habeatur</span><span lang=EN-US> </span><span lang=EN-US>(<i><span\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i></span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>1345).</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kalendarium,</span></b><span\x0Alang=EN-US> </span><span lang=EN-US>-i</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>n.</span></i><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>script.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>ca-<span style=\'letter-spacing:-1.75pt\'>:</span></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>l</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.75pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>22</span></i><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>al.</span></i><b><span lang=EN-US>[MFSP]</span></b><b><span\x0Alang=EN-US>1</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>de</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>tabula</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>rationem</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>mensium</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>et</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>dierum</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>anni</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>variis</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>indiciis</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>additis</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>indicanti</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>i.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>tabula</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>temporum</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Kalender</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US>[MFSP]</span><b><span lang=EN-US>a</span></b><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>in</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>univ.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Reinher.</span><span lang=EN-US style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span lang=EN-US style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Paderb.</span><span lang=EN-US> </span><span lang=EN-US>comput.</span><span\x0Alang=EN-US> </span><span lang=EN-US>1,24</span><span lang=EN-US> </span><span\x0Alang=EN-US>quod</span><span lang=EN-US> </span><span lang=EN-US>verae</span><span\x0Alang=EN-US> </span><span lang=EN-US>accensiones</span><span lang=EN-US> </span><span\x0Alang=EN-US>lunae</span><span lang=EN-US> </span><span lang=EN-US>diebus</span><span\x0Alang=EN-US> </span><span lang=EN-US>certis</span><span lang=EN-US> </span><span\x0Alang=EN-US>ascribantur</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>is.</span><span\x0Alang=EN-US>[MFSP]</span><b><span lang=EN-US>b</span></b><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>necrologium,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>liber</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>memoralis</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x98Nekrolog\xE2\x80\x99,</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Gedenkbuch</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Hugo</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Flav.</span><span\x0Alang=EN-US> </span><span lang=EN-US>chron.</span><span lang=EN-US> </span>2 p. 380,31\x0Aconstituit <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>abbas)</span></i>,\x0Aut in \xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>o singulorum fratrum et\x0Abenefactorum aecclesiae, qui seculo excesserant, divisis paginis nomina, anniversaria,\x0Aquaque die in capitulo recitantur, diligentius annotato, quid quisque contulisset\x0Aaecclesiae, ut <span style=\'letter-spacing:2.25pt\'>..</span>. recalesceret in eis\x0Aeorum memoria. <span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Liber</span>\x0Aordin. Patav. 3,8 p. 973,14 in quo <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>capitulo)</span></i>\x0Amox ut anuntiatum fuerit c<a name=\"kalendarium1m_1\"></a>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>alendari</span></u>um legit lector de omelia et recitatur tabula.\x0A<i><span style=\'letter-spacing:.25pt\'>al.</span></i>[MFSP]<b>c</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>catalogus</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>sanctorum,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>martyrologium</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Heiligenkalender,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Martyrologium\xE2\x80\x99</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Vita</span>\x0ALiutw. <span lang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>6</span><span\x0Alang=EN-US> </span><span lang=EN-US>cuius</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(oratorii)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>dedicationis</span><span lang=EN-US> </span><span lang=EN-US>dies</span><span\x0Alang=EN-US> </span><span lang=EN-US>eiusdem</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>i</span><span\x0Alang=EN-US> </span><span lang=EN-US>articulo</span><span lang=EN-US> </span><span\x0Alang=EN-US>annotatur,</span><span lang=EN-US> </span><span lang=EN-US>quo</span><span\x0Alang=EN-US> </span><span lang=EN-US>solemnitas</span><span lang=EN-US> </span><span\x0Alang=EN-US>martyrii</span><span lang=EN-US> </span><span lang=EN-US>ipsius</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(Dionysii)</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\xA6</span><span lang=EN-US> </span><span\x0Alang=EN-US>celebratur.</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Catal.</span><span\x0Alang=EN-US> </span><span lang=EN-US>August.</span><span lang=EN-US> </span><span\x0Alang=EN-US>(MGScript.</span><span lang=EN-US> </span><span lang=EN-US>XIII</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>278,28)</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>is</span><span\x0Alang=EN-US> </span><span lang=EN-US>quibusdam</span><span lang=EN-US> </span><span\x0Alang=EN-US>inventio</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>translatio</span><span lang=EN-US> </span><span\x0Alang=EN-US>eius</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Ciriaci</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>episcopi)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>reperitur opinione magis quam ratione veritatis.<i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Hugo</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Trimb.</span> laur. 5 quoddam \xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>um\x0Asive letaniam tam per metrum varium quam per rudam viam annuo curriculo quidam compilavit.\x0A<i><span style=\'letter-spacing:.25pt\'>al.</span></i>[MFSP]<b>2</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>tabula</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vectigalium,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>debitorum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Steuer-,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Schuldregister</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Dipl.</span>\x0AFrid. <span lang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>240</span><span\x0Alang=EN-US> </span><span lang=EN-US>dabatur</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>tributum</span><span lang=EN-US> </span><span\x0Alang=EN-US>secundum</span><span lang=EN-US> </span><span lang=EN-US>diversa</span><span\x0Alang=EN-US> </span><span lang=EN-US>tempora</span><span lang=EN-US> </span><span\x0Alang=EN-US>diverso</span><span lang=EN-US> </span><span lang=EN-US>modo,</span><span\x0Alang=EN-US> </span><span lang=EN-US>alia</span><span lang=EN-US> </span><span\x0Alang=EN-US>per</span><span lang=EN-US> </span><span lang=EN-US>quinquennium</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US style=\'letter-spacing:1.75pt\'>.</span><span lang=EN-US>,</span><span\x0Alang=EN-US> </span><span lang=EN-US>post</span><span lang=EN-US> </span><span\x0Alang=EN-US>per</span><span lang=EN-US> </span><span lang=EN-US>singulos</span><span\x0Alang=EN-US> </span><span lang=EN-US>annos</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US\x0Astyle=\'letter-spacing:1.75pt\'>.</span><span lang=EN-US>,</span><span\x0Alang=EN-US> </span><span lang=EN-US>alia</span><span lang=EN-US> </span><span\x0Alang=EN-US>per</span><span lang=EN-US> </span><span lang=EN-US>singulas</span><span\x0Alang=EN-US> </span><span lang=EN-US>kalendas,</span><span lang=EN-US> </span><span\x0Alang=EN-US>unde</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendari</span></u>um</span><span lang=EN-US> </span><span\x0Alang=EN-US>appellatur.</span><span lang=EN-US> </span><span style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Const.</span> imp. II 200,1 p. 266,22 dum debitorum\x0Anostrorum cirographa legimus, dum \xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>i\x0Anostri nomina diligentissime perscrutamur <i><span style=\'letter-spacing:.25pt\'>eqs.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>(<i><span style=\'letter-spacing:.25pt\'>sim.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Chart.</span> Friburg. 185 p. 156,29).[MFSP]<b>3</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>dies</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>qui</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>a</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>primo</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>enumeratur,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>determinatur</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>nach</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dem</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monatsersten,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>den</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kalenden</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>gez\xC3\xA4hlter,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>bestimmter</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Tag</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>des</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monats</span></i>\x0A<i><span style=\'color:black;letter-spacing:.25pt\'>(cf.</span></i><i><span\x0Astyle=\'color:black;letter-spacing:.25pt\'> </span></i><i><span style=\'color:black;letter-spacing:-1.5pt\'>\xC2\xA0</span><span style=\'color:black;letter-spacing:\x0A.25pt\'>p.</span></i><i><span style=\'color:black;letter-spacing:-1.75pt\'> </span><span\x0Astyle=\'color:black;letter-spacing:.25pt\'>2541</span><span style=\'color:black;\x0Aletter-spacing:-1.5pt\'>,</span></i><i><span style=\'color:black;letter-spacing:\x0A-1.5pt\'> </span><span style=\'color:black;letter-spacing:.25pt\'>55</span><span\x0Astyle=\'letter-spacing:.25pt\'>sqq.)</span><span style=\'letter-spacing:-1.75pt\'>:</span></i>\x0A<span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Bern.</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Const.</span><span\x0Alang=EN-US> </span><span lang=EN-US>microl.</span><span lang=EN-US> </span><span\x0Alang=EN-US>24</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>996</span><span lang=EN-US\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt\'>D</span><span lang=EN-US>\xC2\xA0</span><span\x0Alang=EN-US>ieiunium</span><span lang=EN-US> </span><span lang=EN-US>aut</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>a</span><span\x0Alang=EN-US> </span><span lang=EN-US>aliquando</span><span lang=EN-US> </span><span\x0Alang=EN-US>aut</span><span lang=EN-US> </span><span lang=EN-US>lunationem</span><span\x0Alang=EN-US> </span><span lang=EN-US>Martii</span><span lang=EN-US> </span><span\x0Alang=EN-US>aut</span><span lang=EN-US> </span><span lang=EN-US>utrumque</span><span\x0Alang=EN-US> </span><span lang=EN-US>simul</span><span lang=EN-US> </span><span\x0Alang=EN-US>incurrit<span style=\'letter-spacing:-1.75pt\'>:</span></span><span\x0Alang=EN-US> </span><span lang=EN-US>Februarii</span><span lang=EN-US> </span><span\x0Alang=EN-US>autem</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendari</span></u>a</span><span lang=EN-US> </span><span\x0Alang=EN-US>aliquando,</span><span lang=EN-US> </span><span lang=EN-US>lunationem</span><span\x0Alang=EN-US> </span><span lang=EN-US>vero</span><span lang=EN-US> </span><span\x0Alang=EN-US>nunquam</span><span lang=EN-US> </span><span lang=EN-US>attingit.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kalendarius,</b> -a, -um.[MFSP]<b>1</b><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>adi.</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]<b>a</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>spectat</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendas</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendas</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>pertinens</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>auf</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>die</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kalenden</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>bezogen</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Bernold.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Const.</span> chron. p. 393,27 (ed. Pertz) Aegiptii et Romani <span\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span style=\'letter-spacing:1.75pt\'>.</span>,\x0Aquem primum decennovenalis cycli annum habere instituerunt, eiusdem anni \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendari</span></u>a<a name=\"kalendae7m_1\"></a>s lunae aetates\x0Apro regularibus per totum eundem cyclum tenere decreverunt <i><span\x0Astyle=\'letter-spacing:.25pt\'>(<span style=\'color:black\'>cf.</span></span></i><i><span\x0Astyle=\'color:black;letter-spacing:.25pt\'> </span></i><i><span style=\'color:black;letter-spacing:-1.5pt\'>\xC2\xA0</span><span style=\'color:black;letter-spacing:\x0A.25pt\'>p.</span></i><i><span style=\'color:black;letter-spacing:-1.75pt\'> </span><span\x0Astyle=\'color:black;letter-spacing:.25pt\'>2542</span><span style=\'color:black;\x0Aletter-spacing:-1.5pt\'>,</span></i><i><span style=\'color:black;letter-spacing:\x0A-1.5pt\'> </span><span style=\'color:black;letter-spacing:.25pt\'>56</span><span\x0Astyle=\'letter-spacing:.25pt\'>)</span></i>.[MFSP]<b>b</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>spectat</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>diem</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>obitus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>in</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendario</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>inscriptum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendarium,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>tabulam</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(sanctorum)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>pertinens</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>auf</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>den</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(Heiligen)Kalender</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>bezogen,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendarisch</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Milo</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Mind.</span> ad Imm. (AnalBoll. 18. 1899. p. 19,6; s. X.<span\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt\'>ex.</span>) quorum <i><span\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Gorgonii</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>et</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Dorothei)</span></i>\x0A<span style=\'letter-spacing:2.25pt\'>..</span>. passionem sub eodem \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendari</span></u>o numero inventam <span\x0Astyle=\'letter-spacing:2.25pt\'>..</span>. vestrae caritati dirigere destinabam. <span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Epist.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Teg.</span><span lang=EN-US> </span><span\x0Alang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>22</span><span\x0Alang=EN-US> </span><span lang=EN-US>diem</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>um</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(ed.,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>ka</span><span\x0Alang=EN-US style=\'font-family:\"Cambria\",serif\'>\xC5\x82</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>cod.)</span></i><span lang=EN-US> </span><span lang=EN-US>iubete</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>comes)</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>conscribi</span><span\x0Alang=EN-US> </span><span lang=EN-US>membrana</span><span lang=EN-US> </span><span\x0Alang=EN-US>nobisque</span><span lang=EN-US> </span><span lang=EN-US>transmitti</span><span\x0Alang=EN-US> </span><span lang=EN-US>per</span><span lang=EN-US> </span><span\x0Alang=EN-US>presentem</span><span lang=EN-US> </span><span lang=EN-US>pelligerum.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Honor.</span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>August.</span><span lang=EN-US> </span><span lang=EN-US>gemm.</span><span\x0Alang=EN-US> </span><span lang=EN-US>3,125</span><span lang=EN-US> </span><span\x0Alang=EN-US>quod</span><span lang=EN-US> </span><span lang=EN-US>passio</span><span\x0Alang=EN-US> </span><span lang=EN-US>Domini</span><span lang=EN-US> </span><span\x0Alang=EN-US>vel</span><span lang=EN-US> </span><span lang=EN-US>resurrectio</span><span\x0Alang=EN-US> </span><span lang=EN-US>non</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendari</span></u>a</span><span lang=EN-US> </span><span\x0Alang=EN-US>die</span><span lang=EN-US> </span><span lang=EN-US>agitur,</span><span\x0Alang=EN-US> </span><span lang=EN-US>haec</span><span lang=EN-US> </span><span\x0Alang=EN-US>causa</span><span lang=EN-US> </span><span lang=EN-US>est,</span><span\x0Alang=EN-US> </span><span lang=EN-US>quod</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>eqs.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>al.</span></i><span lang=EN-US>[MFSP]</span><b><span lang=EN-US>c</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>i<a\x0Aname=\"kalendae6m_1\"></a>unctura</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><span lang=EN-US>fratres</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>i</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>i.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>fratres</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>kalendarum</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>q.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>d.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>sog.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>\xE2\x80\x98Kalandsbruderschaft\xE2\x80\x99</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>re</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>op.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>cit.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>[</span></i><i><span style=\'letter-spacing:-1.5pt\'>\xC2\xA0</span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>2542</span><span\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span style=\'letter-spacing:-1.5pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>63])</span><span style=\'letter-spacing:\x0A-1.75pt\'>:</span></i>[MFSP]<span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Chart.</span> Westph. <span lang=EN-US>IV</span><span lang=EN-US> </span><span\x0Alang=EN-US>234</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>155,24</span><span lang=EN-US> </span><span\x0Alang=EN-US>(a.</span><span lang=EN-US> </span><span lang=EN-US>1234)</span><span\x0Alang=EN-US> </span><span lang=EN-US>si</span><span lang=EN-US> </span><span\x0Alang=EN-US>nobis</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>fratribus</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>is</span><span\x0Alang=EN-US> </span><span lang=EN-US>locus</span><span lang=EN-US> </span><span\x0Alang=EN-US>ille</span><span lang=EN-US> </span><span lang=EN-US>videbitur</span><span\x0Alang=EN-US> </span><span lang=EN-US>incommodus,</span><span lang=EN-US> </span><span\x0Alang=EN-US>per</span><span lang=EN-US> </span><span lang=EN-US>nos</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>fratres</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendari</span></u>os</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>alium</span><span\x0Alang=EN-US> </span><span lang=EN-US>locum</span><span lang=EN-US> </span><span\x0Alang=EN-US>poterit</span><span lang=EN-US> </span><span lang=EN-US>transmutari</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>eqs.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ibid.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>2</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>subst.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>masc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>certus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dies</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>mensis,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>anni</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Monats-,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kalendertag</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Heimo</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Bamb.</span> chron. 3,22 capit.\x0A<span lang=EN-US>245</span><span lang=EN-US> </span><span lang=EN-US>supputatio</span><span\x0Alang=EN-US> </span><span lang=EN-US>temporis</span><span lang=EN-US> </span><span\x0Alang=EN-US>propheticarum</span><span lang=EN-US> </span><span lang=EN-US>ebdomadum</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>quo</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendari</span></u>o</span><span\x0Alang=EN-US> </span><span lang=EN-US>incipiantur</span><span lang=EN-US> </span><span\x0Alang=EN-US>vel</span><span lang=EN-US> </span><span lang=EN-US>finiantur.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kalendaticum</b>\x0A(ca\xE2\x80\x91), -i <i><span style=\'letter-spacing:.25pt\'>n.</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>vectigal</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kalendis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Ianuariis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>solvendum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>am</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ersten</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Januar</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>zu</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>entrichtende</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Abgabe</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Chart.</span> Ital. Ficker 192,1 p. 233,32 (a. 1196) ego Henricus\x0Ade Frascarolio sindicus <span style=\'letter-spacing:2.25pt\'>..</span>. conqueror\x0Anomine ipsius episcopi <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Vercellensis)</span></i>\x0A<span style=\'letter-spacing:2.25pt\'>..</span>. de ripatico, piscariis, c\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>alendatic</span></u>o (c\xE2\x80\x91<u><span style=\'display:none\'>alend</span></u>arico\x0A<i><span style=\'letter-spacing:.25pt\'>ed.</span></i>) <i><span\x0Astyle=\'letter-spacing:.25pt\'>eqs</span></i>. 192,2 p. 235,41 item dicebat <i><span\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>syndicus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Casalis)</span></i>,\x0Aquod ripaticum et piscariae, c\xE2\x80\x91<u><span style=\'display:none\'>alendatic</span></u>um\x0Aet curadia <span style=\'letter-spacing:2.25pt\'>..</span>. ad ecclesiam Vercellensem\x0Aseu episcopum non pertinebant. <i><span style=\'letter-spacing:.25pt\'>ibid.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kalendula</b> (ca\xE2\x80\x91),\xC2\xA0\x0A-ae <i><span style=\'letter-spacing:.25pt\'>f.</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>(orig.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>inc.;</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>H.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Genaust,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Etymologisches</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Wb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>d.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>botan.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Pflanzennamen.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span style=\'font-size:7.0pt;\x0Aposition:relative;top:-2.0pt;letter-spacing:.25pt\'>3</span><span\x0Astyle=\'letter-spacing:.25pt\'>1996.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>116)</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>Calendula</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>officinalis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>L.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Ringelblume</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Marzell,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Wb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Pflanzennam.,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>715sqq.;</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>usu</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>medic.)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Tract.</span>\x0Ade aegr. cur. p. 283,33 fiat subfumigium et fomentum ex \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kalendul</span></u>a et tapso barbasso decoctis in vino albo.\x0A<span lang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Gloss.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Roger.</span><span lang=EN-US> </span><span\x0Alang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>A</span><span\x0Alang=EN-US> </span><span lang=EN-US>2,9</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>608,41</span><span\x0Alang=EN-US> </span><span lang=EN-US>coquatur</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kalendul</span></u>a</span><span\x0Alang=EN-US> </span><span lang=EN-US>cum</span><span lang=EN-US> </span><span\x0Alang=EN-US>multo</span><span lang=EN-US> </span><span lang=EN-US>sale</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>aqua</span><span lang=EN-US> </span><span lang=EN-US>vel</span><span\x0Alang=EN-US> </span><span lang=EN-US>vino.</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Wilh.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Cong.</span><span\x0Alang=EN-US> </span><span lang=EN-US>chirurg.</span><span lang=EN-US> </span><span\x0Alang=EN-US>1416</span><span lang=EN-US> </span><span lang=EN-US>c\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>alendul</span></u>a</span><span lang=EN-US> </span><span\x0Alang=EN-US>decocta</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>aqua</span><span lang=EN-US> </span><span\x0Alang=EN-US>cum</span><span lang=EN-US> </span><span lang=EN-US>multo</span><span\x0Alang=EN-US> </span><span lang=EN-US>sale</span><span lang=EN-US> </span><span\x0Alang=EN-US>tepida</span><span lang=EN-US> </span><span lang=EN-US>circumligetur.</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kaliphus</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>calipha.</span><span lang=EN-US>[VERWEIS]</span><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kalixtia</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>caristia.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kallendae</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> kalendae.[VERWEIS]<b>kallidus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. callidus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kallos</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>callos.</span><span lang=EN-US>[MFSP]</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>88,8</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Albert.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span lang=EN-US style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>M.</span><span lang=EN-US> </span><span lang=EN-US>div.</span><span\x0Alang=EN-US> </span><span lang=EN-US>nom.</span><span lang=EN-US> </span><span\x0Alang=EN-US>4,77</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>186,26</span><span lang=EN-US> </span><span\x0Alang=EN-US>pulchrum</span><span lang=EN-US> </span><span lang=EN-US>apud</span><span\x0Alang=EN-US> </span><span lang=EN-US>Graecos</span><span lang=EN-US> </span><span\x0Alang=EN-US>dicitur</span><span lang=EN-US> </span><span lang=EN-US>k\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>allo</span></u>s.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kalo</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 4. calo.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kalodemon</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>calodaemon.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kaloius</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>coloeos.</span><span lang=EN-US>[MFSP]</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>881,7</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Albert.</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>M.</span><span lang=EN-US> </span><span\x0Alang=EN-US>eth.</span><span lang=EN-US> </span><span lang=EN-US>I</span><span\x0Alang=EN-US> </span><span lang=EN-US>695</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>595,30sqq.</span><span\x0Alang=EN-US> </span><span lang=EN-US>dicunt,</span><span lang=EN-US> </span><span\x0Alang=EN-US>quod</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x98similis\xE2\x80\x99</span><span\x0Alang=EN-US> </span><span lang=EN-US>ad</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x98similem\xE2\x80\x99</span><span lang=EN-US> </span><span lang=EN-US>coniungitur</span><span\x0Alang=EN-US> </span><span lang=EN-US>amicitia,</span><span lang=EN-US> </span><span\x0Alang=EN-US>ibi</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x98et</span><span\x0Alang=EN-US> </span><span lang=EN-US>kaloius</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>kaloium\xE2\x80\x99</span><span\x0Alang=EN-US> </span><span lang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>p.</span></i></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>1155</span></i><i><span lang=EN-US\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt;letter-spacing:.25pt\'>a</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>,32</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-family:\x0AOldGreekSerif;letter-spacing:.25pt\'>koloi\xC3\xB2n</span><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span lang=EN-US style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>pot\xC3\xAC</span><span lang=EN-US style=\'letter-spacing:.25pt\'>\x0A</span><span lang=EN-US style=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>koloi\xC3\xB3n</span><span\x0Alang=EN-US>),</span><span lang=EN-US> </span><span lang=EN-US>id</span><span\x0Alang=EN-US> </span><span lang=EN-US>est</span><span lang=EN-US> </span><span\x0Alang=EN-US>amicabilis</span><span lang=EN-US> </span><span lang=EN-US>et</span><span\x0Alang=EN-US> </span><span lang=EN-US>socialis</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>eum,</span><span\x0Alang=EN-US> </span><span lang=EN-US>qui</span><span lang=EN-US> </span><span\x0Alang=EN-US>est</span><span lang=EN-US> </span><span lang=EN-US>huiusmodi</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>eqs</span></i><span\x0Alang=EN-US>.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kalomalis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>calamaris.[VERWEIS]<b>kalor</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> calor.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kalos</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> calos.[VERWEIS]<b>kamaleon</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> chamaeleon.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kambalcha</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>balcha.[VERWEIS]<b>kamellus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> camillus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kamenata,</b><b>\x0A</b><span style=\'font-size:6.0pt;font-family:Wingdings;position:relative;\x0Atop:-2.0pt\'>\xEF\x82\xAC</span><b>kaminata</b> <i><span style=\'letter-spacing:.25pt\'>v.</span></i>\x0A<span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>caminata.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kamisia</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> camis(i)a.[VERWEIS]<b>kanale</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. canalis.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kaniparius</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> canabarius.[VERWEIS]<b>kanna</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> canna.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kanon,</span></b><b><span\x0Alang=EN-US> </span></b><b><span lang=EN-US>kanonicus</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>ca-.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kapella,</span></b><b><span lang=EN-US> </span></b><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kapilla</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>2.</span><span lang=EN-US> </span><span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>capella.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kappa</b> v. 1. cappa.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kappalanus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>capellanus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kapsa</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> capsa.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karabitus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>carabitus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>karact-</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>charact-.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>karat</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>caratum.</span><span lang=EN-US>[MFSP]</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>266,41</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Thadd.</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Florent.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US>cons.</span><span lang=EN-US> </span><span lang=EN-US>125,80</span><span\x0Alang=EN-US> </span><span lang=EN-US>postquam</span><span lang=EN-US> </span><span\x0Alang=EN-US>cocta</span><span lang=EN-US> </span><span lang=EN-US>fuerint</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>species)</span></i><span lang=EN-US>,</span><span\x0Alang=EN-US> </span><span lang=EN-US>dissolvantur</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>eo</span><span\x0Alang=EN-US> </span><span lang=EN-US>oppoponaci</span><span lang=EN-US> </span><span\x0Alang=EN-US>et</span><span lang=EN-US> </span><span lang=EN-US>bdelii,</span><span\x0Alang=EN-US> </span><span lang=EN-US>ana</span><span lang=EN-US> </span><span\x0Alang=EN-US>k\xE2\x80\x91<u><span style=\'display:none\'>ara</span></u>t</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>i</span><span lang=EN-US>,</span><span lang=EN-US> </span><span\x0Alang=EN-US>olei</span><span lang=EN-US> </span><span lang=EN-US>rutacei</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>mellis</span><span lang=EN-US> </span><span lang=EN-US>ana</span><span\x0Alang=EN-US> </span><span lang=EN-US>drachmas</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>x</span><span\x0Alang=EN-US>.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>karaxatio</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>charaxatio.</span><span lang=EN-US>[VERWEIS]</span><b><span\x0Alang=EN-US>karcer</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>carcer.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>karcharodus</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>carcharodus.</span><span lang=EN-US>[VERWEIS]</span><b><span\x0Alang=EN-US>kardinalis</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>cardinalis.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karecter</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> character.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karena</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> 2. <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>carina.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karibdis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> charybdis.[VERWEIS]<b>kariga</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> carica.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karina</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 2. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>carina.[VERWEIS]<b>kariptis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> charybdis.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karisma</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> charisma.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karistia</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span></i><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span>caristia.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karitas,</b><b> </b><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karitativus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> ca-.[VERWEIS]<b>karmen</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> carmen.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karo</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> caro.[VERWEIS]<b>[karobe</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cacabre.<b>]</b></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>karolensis</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>carol(in)ensis.</span><span lang=EN-US>[VERWEIS]</span><b><span\x0Alang=EN-US>[karolicos</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>catholicus.<b>]</b></span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>Karolida,</b> -ae\x0A<i><span style=\'letter-spacing:.25pt\'>m.</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>progenies</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Karoli</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(Magni)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Nachkomme</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Karls</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(des</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Gro\xC3\x9Fen)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Geneal.</span> Brab. app. 8 (MGScript. XXV p. 395,18; c. 1270/71)\x0AIohannes dux Lotharingie et Brabantie <span style=\'letter-spacing:2.25pt\'>..</span><span\x0Astyle=\'letter-spacing:1.75pt\'>.</span>, duodecimus K\xE2\x80\x91<u><span style=\'display:\x0Anone\'>arolid</span></u>arum a Karolo duce, qui Franciam amisit sibi debitam.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karolinensis</b><b>\x0A</b><i><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>carol(in)ensis.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karopos</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>charopos.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karpentarius</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> carpentarius.[VERWEIS]<b>karpo</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. carpo.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karpos</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> carpos.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karrada</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>carrada.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karralis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>carralis.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karrena,</b><b>\x0A</b><span style=\'font-size:6.0pt;font-family:Wingdings;position:relative;\x0Atop:-2.0pt\'>\xEF\x82\xAC</span><b>karrina</b> <i><span style=\'letter-spacing:.25pt\'>v.</span></i>\x0A2. <span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>carina.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karrinarius</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>carinarius.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karrotium</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>carrocium.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karruca</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> carruca.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>karrucium</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>carrocium.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>karta</b><b> </b><i><span\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i> cha- <i><span\x0Astyle=\'letter-spacing:.25pt\'>praeter</span><span style=\'letter-spacing:-1.75pt\'>:</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><span class=lemma>kartata</span><b>,</b>\x0A-ae <i><span style=\'letter-spacing:.25pt\'>f.</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>(theod.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vet.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kart\xC3\xA2t</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ex</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>caritas<i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>[cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Lexer,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Mittelhochdt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Handwb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1523sq.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>et</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>2147</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>s.v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>minne-br\xC3\xB4t<i><span style=\'letter-spacing:\x0A.25pt\'>;</span></i> <i><span style=\'letter-spacing:.25pt\'>Mittelniederdt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Handwb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>524.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>522</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>s.v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>karit\xC3\xA2te<i><span style=\'letter-spacing:\x0A.25pt\'>)</span></i>[MFSP]<i><span style=\'letter-spacing:.25pt\'>de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>pane</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>plebano</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>et</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dominabus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>conventus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>competenti</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>panis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>extraordinarius,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>pro</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>caritate</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>datus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Brotzulage,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>-spende,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Minnebrot\xE2\x80\x99</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Registr.</span> Geisenf. 26 in festo sancti Michahelis, cum\x0Aafferuntur reditus et panes, <span style=\'letter-spacing:2.25pt\'>..</span>. debent\x0Aplebano dari <span style=\'letter-spacing:2.25pt\'>..</span>. duo panes, qui dicuntur\x0A\xE2\x80\x91<u><span style=\'display:none\'>kartat</span></u>e (gloss.<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> minnbrot), <span style=\'letter-spacing:\x0A2.25pt\'>..</span>. item cuilibet domne de conventu <span style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>IIII</span><span style=\'font-size:7.0pt;\x0Aposition:relative;top:-2.0pt\'>or</span>\xC2\xA0panes unacum \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kartat</span></u>a.[VERWEIS]<i><span style=\'letter-spacing:\x0A.25pt\'>cf.</span></i> caritas.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kartha</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> charta.[VERWEIS]<b>karum</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> carrum.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kasta</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>casta.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>katabulum</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> 2. <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>catabulum.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>katafatkus</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>cataphaticus.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>ad</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>vol.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>II.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>361,14</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Theod.</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Trev.</span> phys. 782 divina\x0Acuncta sint, quam produnt preclua palam, apofatke sit vel ista, k\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>ata</span></u>fatk vel illa <i><span style=\'letter-spacing:\x0A.25pt\'>(v.</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>notam</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ed.)</span></i>. <i><span\x0Astyle=\'letter-spacing:.25pt\'>ibid.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>[</span></b><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>katakothimus</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span><span lang=EN-US>catocochimos.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>II.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>p.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>383,6</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US>[MFSP]</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>usu</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>subst.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>neutr.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Albert.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>M.</span><span\x0Alang=EN-US> </span><span lang=EN-US>eth.</span><span lang=EN-US> </span><span\x0Alang=EN-US>I.</span><span lang=EN-US> </span><span lang=EN-US>938</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>782,46</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x98sermones</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>morales\xE2\x80\x99</span><span\x0Alang=EN-US> </span><span lang=EN-US>exhortatorii,</span><span lang=EN-US> </span><span\x0Alang=EN-US>quamvis</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x98provocent\xE2\x80\x99</span><span\x0Alang=EN-US> </span><span lang=EN-US>ad</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x98bonum</span><span lang=EN-US> </span><span lang=EN-US>liberalem</span><span\x0Alang=EN-US> </span><span lang=EN-US>iuvenem\xE2\x80\x99,</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-family:\"StplGaramondAkzente Normal\",serif\'>&lt;</span><span\x0Alang=EN-US>qui</span><span lang=EN-US> </span><span lang=EN-US>est</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x98amore</span><span lang=EN-US> </span><span lang=EN-US>boni\xE2\x80\x99</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x98faciat</span><span lang=EN-US> </span><span lang=EN-US>utique</span><span\x0Alang=EN-US> </span><span lang=EN-US>k\xE2\x80\x91<u><span style=\'display:none\'>atakothim</span></u>um\xE2\x80\x99</span><span\x0Alang=EN-US style=\'font-family:\"StplGaramondAkzente Normal\",serif\'>&gt;</span><span\x0Alang=EN-US> </span><span lang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>cf.</span></i></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>1180</span></i><i><span\x0Alang=EN-US style=\'font-size:7.0pt;position:relative;top:-2.0pt;letter-spacing:\x0A.25pt\'>a</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>,7sq.</span></i><span\x0Alang=EN-US> </span><span style=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>\xC2\xA9pakousom\xC3\xA9nwn</span><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>t\xC3\xB4n</span><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>\xE2\x84\xA2pieik\xC3\xB4\xC3\x9F</span><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>to\xC3\xAE\xC3\x9F</span><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>\xC3\x89qesi</span><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>prohgm\xC3\xA9nwn</span>), idest universaliter repletum \xE2\x80\x98virtute\xE2\x80\x99\x0Aet honorabilitate <i><span style=\'letter-spacing:.25pt\'>eqs</span></i>.<b>]</b></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>katapant,</b><b>\x0A</b><span style=\'font-size:6.0pt;font-family:Wingdings;position:relative;\x0Atop:-2.0pt\'>\xEF\x82\xAC</span><b>katapanus</b> <i><span style=\'letter-spacing:.25pt\'>v.</span></i>\x0A<span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>catapanus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kataphaticus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>cataphaticus.[VERWEIS]<b>katapotia</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> catapotia.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kataracta</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>cataracta.</span><span lang=EN-US>[VERWEIS]</span><b><span\x0Alang=EN-US>katarrhus</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>catarrhus.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kategoria</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>categoria.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>II.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>p.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>369,44</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US>[MFSP]</span><b><span lang=EN-US>3</span></b><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>theol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Theod.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Trev.</span> phys. 90 sane <span\x0Astyle=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>qeoloGor</span><span\x0Astyle=\'font-size:9.0pt\'>um</span> verba catholicorum fore <span\x0Astyle=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>orqoDwca</span> perstat k\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>ategori</span></u>a <span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>upo-</span> principales \xE2\x80\x91<span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>ktasis</span><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>usioses</span> tres substantialitate\x0A<span style=\'font-size:9.0pt\'>y</span><span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>fistasis</span> in <span style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>enai</span> <i><span style=\'letter-spacing:.25pt\'>(v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>notam</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ed.)</span></i>.\x0A<i><span lang=EN-US style=\'letter-spacing:.25pt\'>ibid.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kategorizo</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>categorizo.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>[katenphatos</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>cacemphatus.</span><span\x0Alang=EN-US>[MFSP]</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>II.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>9,8</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>masc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Conr.</span><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'> </span><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Mur.</span><span lang=EN-US> </span><span\x0Alang=EN-US>summ.</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>55,9</span><span lang=EN-US> </span><span\x0Alang=EN-US>quartum</span><span lang=EN-US> </span><span lang=EN-US>vitium</span><span\x0Alang=EN-US> </span><span lang=EN-US>est</span><span lang=EN-US> </span><span\x0Alang=EN-US>katen\xE2\x80\x91<u><span style=\'display:none\'>phat</span></u>os,</span><span\x0Alang=EN-US> </span><span lang=EN-US>cum</span><span lang=EN-US> </span><span\x0Alang=EN-US>precedens</span><span lang=EN-US> </span><span lang=EN-US>dictio</span><span\x0Alang=EN-US> </span><span lang=EN-US>terminatur</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x98m\xE2\x80\x99</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>sequens</span><span lang=EN-US> </span><span lang=EN-US>incipit</span><span\x0Alang=EN-US> </span><span lang=EN-US>ab</span><span lang=EN-US> </span><span\x0Alang=EN-US>eadem</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>eqs</span></i><span lang=EN-US>.<b>]\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 </b><span\x0Astyle=\'color:#5B9BD5\'>[EndeLemmaStreckeAutor]</span><i><span style=\'letter-spacing:\x0A.25pt\'>H\xC3\xA4berlin</span></i></span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>katerva</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>caterva.</span><span lang=EN-US>[VERWEIS]</span><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>katfige</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>cataphyge.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kathegoricus</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>categoricus.</span><span lang=EN-US>[VERWEIS]</span><b><span\x0Alang=EN-US>kathena</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>catena.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kathinia</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>cadmia.</span><span lang=EN-US>[VERWEIS]</span><b><span\x0Alang=EN-US>katholicus</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>catholicus.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>katowa</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>catowa.[VERWEIS]<b>kattus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cattus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><span class=lemma>kavenna</span><b>,</b><b>\x0A</b>\xE2\x80\x91ae <i><span style=\'letter-spacing:.25pt\'>f.</span></i>\xC2\xA0 <span class=jofu2><span\x0Astyle=\'font-size:8.0pt;font-family:\"Arial\",sans-serif;color:#0070C0;letter-spacing:\x0A0pt\'>Mandrin</span></span>[MFSP]\xC2\xA0 (<i><span style=\'letter-spacing:.25pt\'>francog.</span></i>\x0Achevanne, chevenne; <i><span style=\'letter-spacing:.25pt\'>cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Wartburg,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Frz.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>etym.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Wb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>264</span></i><i><span\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt;letter-spacing:.25pt\'>b</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'>\xC2\xA0</span><span style=\'letter-spacing:.25pt\'>s.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>capito)[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>Leuciscus</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>idus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Aland,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>G\xC3\xA4ngling,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Rotten</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>re</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Grzimeks</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Tierleben.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>IV.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span style=\'font-size:7.0pt;\x0Aposition:relative;top:-2.0pt;letter-spacing:.25pt\'>2</span><span\x0Astyle=\'letter-spacing:.25pt\'>1980.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>330sq.)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Consuet.</span> Vird. 23 habebunt <i><span\x0Astyle=\'letter-spacing:.25pt\'>fratres</span></i> haec piscium genera<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> capitonum, bar, \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kavenn</span></u>arum <i><span style=\'letter-spacing:.25pt\'>eqs</span></i>.\x0A<i><span style=\'letter-spacing:.25pt\'>(v.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>notam</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ed.)</span></i>.[VERWEIS]<i><span\x0Astyle=\'letter-spacing:.25pt\'>cf.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>cavedanus,\x0A<span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>cavena.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kaus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> chaos.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kebulus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>chebulus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kecabre</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>cacabre.[VERWEIS]<b>kecaumenos</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span></i>cecaumenus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kefalargicus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cephalargicus.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kekabie</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span></i><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span>cacabre.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kelinus,</b> \xE2\x80\x91a,\x0A\xE2\x80\x91um.[MFSP]<i><span style=\'letter-spacing:.25pt\'>(theod.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vet.</span></i>\x0Akela; <i><span style=\'letter-spacing:.25pt\'>cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Ahd.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Wb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>V.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>73sq.)</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>ad</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>guttur</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>pertinens,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>collo</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>circumpositus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>zur</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kehle</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>geh\xC3\xB6rig,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>den</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Nacken</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>umschlie\xC3\x9Fend</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Cod</span>.\x0AEberh. I p. 151,5 quod <span style=\'letter-spacing:2.25pt\'>..</span>. Ludewicus,\x0Afilius Karoli, hoc privilegium clericis canonicam regulam servantibus dederit, ut\x0A\xE2\x80\x91<u><span style=\'display:none\'>kelin</span></u>a lappa, hoc est rubeo pelliciorum\x0Aornatu, utantur.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kembelinus</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>camelinus.</span><span\x0Alang=EN-US>[MFSP]</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>II.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>108,31sqq.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>\xC2\xA0</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Wirt.</span><span lang=EN-US> </span><span\x0Alang=EN-US>1637</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>31,35</span><span lang=EN-US> </span><span\x0Alang=EN-US>habeant</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>sorores</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>de</span><span lang=EN-US> </span><span\x0Alang=EN-US>nigro</span><span lang=EN-US> </span><span lang=EN-US>barrechano</span><span\x0Alang=EN-US> </span><span lang=EN-US>vel</span><span lang=EN-US> </span><span\x0Alang=EN-US>alio</span><span lang=EN-US> </span><span lang=EN-US>nigro</span><span\x0Alang=EN-US> </span><span lang=EN-US>panno</span><span lang=EN-US> </span><span\x0Alang=EN-US>vel</span><span lang=EN-US> </span><span lang=EN-US>de</span><span\x0Alang=EN-US> </span><span lang=EN-US>fusco</span><span lang=EN-US> </span><span\x0Alang=EN-US>kemb\xE2\x80\x91<u><span style=\'display:none\'>elin</span></u>o</span><span\x0Alang=EN-US> </span><span lang=EN-US>pallia</span><span lang=EN-US> </span><span\x0Alang=EN-US>minora.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kemeto</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>kmet(h)o.[VERWEIS]<b>kemmelinus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i>camelinus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kenkel</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> conchylium.[VERWEIS]<b>kenodoxia</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> cenodoxia.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kere</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> chaere.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kerena</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> 2. <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>carina.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kerna</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cherua.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kerno</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cherno.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>ketoniti</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>coetonites.[VERWEIS]<b>kianos</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cyaneus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>[kicles</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> helix.<b>]</b>[VERWEIS]<b>[kidion</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> sidia.<b>]</b></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kilegunda</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>vel</span></i> <span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kiligunda,</b> \xE2\x80\x91ae\x0A<i><span style=\'letter-spacing:.25pt\'>f.</span></i>[MFSP](<i><span\x0Astyle=\'letter-spacing:.25pt\'>finnice</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span></i>kihlakunta, <i><span style=\'letter-spacing:.25pt\'>estnice</span></i>\x0Akihelkond)[MFSP]<i><span style=\'letter-spacing:.25pt\'>script.</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]si\xE2\x80\x91<span style=\'letter-spacing:\x0A-1.75pt\'>:</span> <i><span style=\'letter-spacing:.25pt\'>l</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>57</span></i>.[MFSP]kyl\xE2\x80\x91<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> <i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>57</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>63</span></i>.[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>districtus</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(parvus)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>administrativus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(kleiner)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Verwaltungsbezirk,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Harde\xE2\x80\x99</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>re</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>L.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Arbusow,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>DtArch.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>8.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1951.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>148</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>c.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>adn.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>8)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Heinr.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Lett</span>. chron. 28,2 episcopo Rigensi Maritimam cum septem kile\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>gund</span></u>is (s<a name=\"kavenn18m_1\"></a>ile\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>gundis</span></u> <i><span style=\'letter-spacing:.25pt\'>S,</span></i>\x0Akili\xE2\x80\x91<u><span style=\'display:none\'>gundis</span></u> <i><span style=\'letter-spacing:\x0A.25pt\'>T,</span></i> k<a name=\"kavenn19m_1\"></a>yle\xE2\x80\x91<u><span style=\'display:\x0Anone\'>gundis</span></u> <i><span style=\'letter-spacing:.25pt\'>o</span></i>) attribuerunt\x0A<i><span style=\'letter-spacing:.25pt\'>fratres</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>militiae</span></i>\x0A<i><span style=\'letter-spacing:.25pt\'>(v.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>notam</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ed.)</span></i>.\x0A<i><span lang=EN-US style=\'letter-spacing:.25pt\'>al.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Livon.</span><span lang=EN-US> </span><span\x0Alang=EN-US>A</span><span lang=EN-US> </span><span lang=EN-US>103</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>135,3</span><span lang=EN-US> </span><span lang=EN-US>pagani</span><span\x0Alang=EN-US> </span><span lang=EN-US>de</span><span lang=EN-US> </span><span\x0Alang=EN-US>Curonia,</span><span lang=EN-US> </span><span lang=EN-US>de</span><span\x0Alang=EN-US> </span><span lang=EN-US>terris</span><span lang=EN-US> </span><span\x0Alang=EN-US>Esestua</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>kili\xE2\x80\x91<u><span style=\'display:none\'>gund</span></u>is,</span><span\x0Alang=EN-US> </span><span lang=EN-US>quarum</span><span lang=EN-US> </span><span\x0Alang=EN-US>haec</span><span lang=EN-US> </span><span lang=EN-US>sunt</span><span\x0Alang=EN-US> </span><span lang=EN-US>nomina<span style=\'letter-spacing:-1.75pt\'>:</span></span><span\x0Alang=EN-US> </span><span lang=EN-US>Thargolara,</span><span lang=EN-US> </span><span\x0Alang=EN-US>Osua,</span><span lang=EN-US> </span><span lang=EN-US>Langis</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>eqs</span></i><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>135,7</span><span lang=EN-US> </span><span\x0Alang=EN-US>de</span><span lang=EN-US> </span><span lang=EN-US>aliis</span><span\x0Alang=EN-US> </span><span lang=EN-US>kili\xE2\x80\x91<u><span style=\'display:none\'>gund</span></u>is,</span><span\x0Alang=EN-US> </span><span lang=EN-US>villis</span><span lang=EN-US> </span><span\x0Alang=EN-US>ex</span><span lang=EN-US> </span><span lang=EN-US>utraque</span><span\x0Alang=EN-US> </span><span lang=EN-US>parte</span><span lang=EN-US> </span><span\x0Alang=EN-US>Winda</span><span lang=EN-US> </span><span lang=EN-US>sitis.</span><span\x0Alang=EN-US> </span><span lang=EN-US>add.</span><span lang=EN-US> </span><span\x0Alang=EN-US>156</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>27,34</span><span lang=EN-US> </span><span\x0Alang=EN-US>ut</span><span lang=EN-US> </span><span lang=EN-US style=\'letter-spacing:\x0A2.25pt\'>..</span><span lang=EN-US>.</span><span lang=EN-US> </span><span\x0Alang=EN-US>fratres</span><span lang=EN-US> </span><span lang=EN-US>ex</span><span\x0Alang=EN-US> </span><span lang=EN-US>donatione</span><span lang=EN-US> </span><span\x0Alang=EN-US>nostra</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>episcopi)</span></i><span lang=EN-US> </span><span lang=EN-US>quartam</span><span\x0Alang=EN-US> </span><span lang=EN-US>habeant</span><span lang=EN-US> </span><span\x0Alang=EN-US>partem</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>Maritima,</span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>septem</span><span\x0Alang=EN-US> </span><span lang=EN-US>scilicet</span><span lang=EN-US> </span><span\x0Alang=EN-US>k<a name=\"kavenn19m_2\"></a>yli\xE2\x80\x91<u><span style=\'display:none\'>gund</span></u>is,</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>quinquaginta</span><span lang=EN-US> </span><span lang=EN-US>uncos</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>Maritima</span><span lang=EN-US> </span><span lang=EN-US>vel</span><span\x0Alang=EN-US> </span><span lang=EN-US>Osilia.</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>ibid.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>al</span></i><span lang=EN-US>.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kilis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>coelis.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kilosus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>chylosus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kilstrio</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>gilstrio.[VERWEIS]<b>kimba</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cymba.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>[kimbema</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>symbama.<b>]</b>[VERWEIS]<b>[kimbiles</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>cimbix.<b>]</b></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>[kimbi</span></b><b><span\x0Alang=EN-US> </span></b><b><span lang=EN-US>noxistae</span></b><span lang=EN-US>\x0A</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span><span lang=EN-US>cyminopristes.<b>]</b></span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>1.</span></b><b><span\x0Alang=EN-US> </span></b><span style=\'font-size:6.0pt;font-family:Wingdings;\x0Aposition:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span lang=EN-US>kimia</span></b><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span><span lang=EN-US>alchimia.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>436,33sqq.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>re</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>J.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>R<a\x0Aname=\"kavenn8m_1\"></a>uska,</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>QuellStudGeschNat.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>5.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1936.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>285)</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Ioh.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span>sacerd. 174 p. 221,1sq. argentum de partibus <span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>viii</span> partes <span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>iii</span>, eris usti partes\x0A<span style=\'font-variant:small-caps;letter-spacing:.5pt\'>ii</span>, chibrith dianic\x0Afunde et desuper mitte; es ustum, plumbum, deinde sulphur, et dimitte super focum\x0Amultum, donec insimul liquescat et fundatur; refrigera<i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>et erit k<a name=\"kavenn7m_1\"></a>imium;\x0Adeinde accipe auri pars <span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>i</span>, fede pars <span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>i</span>, funde insimul et adde de kimis <i><span style=\'letter-spacing:\x0A.25pt\'>(ed.,</span></i><i><span style=\'letter-spacing:.25pt\'> </span></i>kimia <i><span\x0Astyle=\'letter-spacing:.25pt\'>J.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>Ruska,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>op.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>cit.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>285)</span></i>\x0Apars <span style=\'font-variant:small-caps;letter-spacing:.5pt\'>i</span>, exit aurum\x0Aoptimum.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>2.</b><b> </b><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kimia</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>kinna.[VERWEIS]<b>kimiliarcha</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>cimel\xE2\x80\x91.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kimium</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>alchimia.</span><span lang=EN-US>[MFSP]</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>436,33sqq.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>(de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>re</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span\x0Astyle=\'letter-spacing:-1.5pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>2545</span><span\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span style=\'letter-spacing:-1.5pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>70sqq.)</span><span style=\'letter-spacing:\x0A-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><i><span style=\'letter-spacing:.25pt\'>l</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>2</span></i>.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kinna</b><b> </b>(kimia),\x0A\xE2\x80\x91ae <i><span style=\'letter-spacing:.25pt\'>f.</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>(arab.</span></i> qinn<span style=\'font-family:\x0A\"Cambria\",serif\'>\xC4\xAB</span>ya; <i><span style=\'letter-spacing:.25pt\'>cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>A.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Siggel,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Arab.-dt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Wb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>99</span></i><i><span\x0Astyle=\'font-size:7.0pt;position:relative;top:-2.0pt;letter-spacing:.25pt\'>b</span><span\x0Astyle=\'letter-spacing:.25pt\'>)</span></i>[MFSP]<i><span style=\'letter-spacing:\x0A.25pt\'>script.</span><span style=\'letter-spacing:-1.75pt\'>:</span></i>[MFSP]simia<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> <i><span\x0Astyle=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>15</span></i>.[MFSP]chemia<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> <i><span\x0Astyle=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>23</span></i>.[MFSP]chimia<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> <i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>18</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>20</span></i>.[MFSP]chimea<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> <i><span\x0Astyle=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>19</span></i>.<span\x0Astyle=\'font-size:8.0pt\'>[MFSP]</span>chimin(a)<span style=\'letter-spacing:-1.75pt\'>:</span>\x0A<i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>18</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>20</span></i>.[MFSP]kim(i)n(a)<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span> <i><span style=\'letter-spacing:.25pt\'>l</span><span style=\'letter-spacing:-.75pt\'>.</span></i><i><span\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>19</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>20</span></i>.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><i><span style=\'letter-spacing:\x0A.25pt\'>de</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>genere</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vasis</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>in</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>arte</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>alchemica</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>usitato</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ampulla</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>magna</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>rotunda</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>praecipue</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>ad</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>descensionem</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>d.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>apta</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>gro\xC3\x9Fe,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>runde,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>besonders</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>zur</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>sog.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Deszension</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>geeignete</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>Flasche</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Anon.</span><span\x0Alang=EN-US> </span><span lang=EN-US>secret.</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>82,1</span><span\x0Alang=EN-US> </span><span lang=EN-US>s<a name=\"kavenn9m_1\"></a>imia</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(cod.,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>fort.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>kimia</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>ci.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ed.)</span></i><span lang=EN-US> </span><span lang=EN-US>est</span><span\x0Alang=EN-US> </span><span lang=EN-US>vas</span><span lang=EN-US> </span><span\x0Alang=EN-US>factum</span><span lang=EN-US> </span><span lang=EN-US>de</span><span\x0Alang=EN-US> </span><span lang=EN-US>creta</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(v.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>comm.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>ed.)</span></i><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Ps.</span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Arist.</span><span lang=EN-US> </span><span lang=EN-US>magist.</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>655</span><span lang=EN-US style=\'font-size:7.0pt;position:relative;\x0Atop:-2.0pt\'>a</span><span lang=EN-US>,45</span><span lang=EN-US> </span><span\x0Alang=EN-US>fac</span><span lang=EN-US> </span><span lang=EN-US>ipsum</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>lapidem)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>descendere</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>kimiam.</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Geber</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>summ.</span><span\x0Alang=EN-US> </span><span lang=EN-US>45</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>403</span><span\x0Alang=EN-US> </span><span lang=EN-US>quod</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(vas)</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>vocatur</span><span\x0Alang=EN-US> </span><span lang=EN-US>descensorium</span><span lang=EN-US> </span><span\x0Alang=EN-US>vel</span><span lang=EN-US> </span><span lang=EN-US>c<a\x0Aname=\"kavenn10m_1\"></a>himina</span><span lang=EN-US> </span><span lang=EN-US>(c<a\x0Aname=\"kavenn11m_1\"></a>himia,</span><span lang=EN-US> </span><span lang=EN-US>c<a\x0Aname=\"kavenn12m_1\"></a>himea,</span><span lang=EN-US> </span><span lang=EN-US>k<a\x0Aname=\"kavenn13m_1\"></a>im(i)na</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>var.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>l.</span></i><span lang=EN-US>).</span><span lang=EN-US> </span><span\x0Alang=EN-US>46</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>408</span><span lang=EN-US> </span><span\x0Alang=EN-US>quedam</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>distillatio</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>est)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>per</span><span lang=EN-US> </span><span\x0Alang=EN-US>descensum</span><span lang=EN-US> </span><span lang=EN-US>c<a\x0Aname=\"kavenn10m_2\"></a>himine</span><span lang=EN-US> </span><span lang=EN-US>(in</span><span\x0Alang=EN-US> </span><span lang=EN-US>c<a name=\"kavenn11m_2\"></a>himia<i><span\x0Astyle=\'letter-spacing:.25pt\'>,</span></i></span><span lang=EN-US> </span><span\x0Alang=EN-US>in</span><span lang=EN-US> </span><span lang=EN-US>k<a\x0Aname=\"kavenn13m_2\"></a>iminam,</span><span lang=EN-US> </span><span lang=EN-US>kimie</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>var.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>l.</span></i><span lang=EN-US>;</span><span\x0Alang=EN-US> </span><span lang=EN-US>qua</span><span lang=EN-US> </span><span\x0Alang=EN-US>mediante</span><span lang=EN-US> </span><span lang=EN-US>oleum</span><span\x0Alang=EN-US> </span><span lang=EN-US>ex</span><span lang=EN-US> </span><span\x0Alang=EN-US>vegetabilibus</span><span lang=EN-US> </span><span lang=EN-US>elicitur</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>add.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>pars</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>codd.</span></i><span lang=EN-US>).</span><span lang=EN-US> </span><span\x0Alang=EN-US>forn.</span><span lang=EN-US> </span><span lang=EN-US>20</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>755</span><span lang=EN-US> </span><span lang=EN-US>quod</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>confectionis)</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>remansit</span><span lang=EN-US> </span><span\x0Alang=EN-US>spissum</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>c<a name=\"kavenn14m_1\"></a>hemia</span><span\x0Alang=EN-US> </span><span lang=EN-US>bene</span><span lang=EN-US> </span><span\x0Alang=EN-US>sigillatum</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>eqs.</span></i><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kinoteta</span></b><b><span\x0Alang=EN-US> </span></b><i><span lang=EN-US style=\'letter-spacing:.25pt\'>sim.</span></i><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>coenoteta.</span><span lang=EN-US>[VERWEIS]</span><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kirica</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>kyrica.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kirion</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>cerium.</span><span lang=EN-US>[VERWEIS]</span><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kirios,</span></b><b><span lang=EN-US> </span></b><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kirius</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span><span lang=EN-US>kyrius.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kis(s)eris</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>ciseris.</span><span lang=EN-US>[VERWEIS]</span><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kitonites</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>v.</span></i><span lang=EN-US> </span><span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span><span lang=EN-US>coetonites.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kitta</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cita.[MFSP]<i><span style=\'letter-spacing:\x0A.25pt\'>adde</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>ad</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>vol.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>II.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>645,4sqq.</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span>\x0A<span lang=EN-US>Sil.</span><span lang=EN-US> </span><span lang=EN-US>D</span><span\x0Alang=EN-US> </span><span lang=EN-US>IV</span><span lang=EN-US> </span><span\x0Alang=EN-US>276</span><span lang=EN-US> </span><span lang=EN-US>(a.</span><span\x0Alang=EN-US> </span><span lang=EN-US>1276)</span><span lang=EN-US> </span><span\x0Alang=EN-US>quilibet</span><span lang=EN-US> </span><span lang=EN-US>k<a\x0Aname=\"kavenn15m_1\"></a>meto</span><span lang=EN-US> </span><span lang=EN-US>praescriptarum</span><span\x0Alang=EN-US> </span><span lang=EN-US>villarum</span><span lang=EN-US> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>festum</span><span\x0Alang=EN-US> </span><span lang=EN-US>sancti</span><span lang=EN-US> </span><span\x0Alang=EN-US>Martini</span><span lang=EN-US> </span><span lang=EN-US>duas</span><span\x0Alang=EN-US> </span><span lang=EN-US>kittas</span><span lang=EN-US> </span><span\x0Alang=EN-US>canapi</span><span lang=EN-US> </span><span lang=EN-US>mundi</span><span\x0Alang=EN-US> </span><span lang=EN-US>ratione</span><span lang=EN-US> </span><span\x0Alang=EN-US>decimae</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>persolvere</span><span lang=EN-US> </span><span\x0Alang=EN-US>tenetur.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kliotetra</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>cliothedrum.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kmet(h)o</span></b><span lang=EN-US> </span><span lang=EN-US>(qm\xE2\x80\x91,</span><span\x0Alang=EN-US> </span><span lang=EN-US>kem\xE2\x80\x91,</span><span lang=EN-US> </span><span\x0Alang=EN-US>kym\xE2\x80\x91),</span><span lang=EN-US> </span><span lang=EN-US>\xE2\x80\x91onis</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>m.</span></i><span\x0Alang=EN-US>[MFSP]</span><span lang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>polon.</span></i></span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>kmie</span><span\x0Alang=EN-US style=\'font-family:\"Stpl_ Garamond_ Akzente\",serif\'>\xC3\xA7</span><span\x0Alang=EN-US>;</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>cf.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Lex.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Polon.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>s.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>cmetho)</span><span\x0Alang=EN-US>[MFSP]</span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>colonus,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>rusticus</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Siedler,</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Bauer</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>Sil.</span><span\x0Alang=EN-US> </span><span lang=EN-US>D</span><span lang=EN-US> </span><span\x0Alang=EN-US>III</span><span lang=EN-US> </span><span lang=EN-US>47</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>42,24</span><span lang=EN-US> </span><span lang=EN-US>(a.</span><span\x0Alang=EN-US> </span><span lang=EN-US>1252)</span><span lang=EN-US> </span><span\x0Alang=EN-US>habuit</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>dux</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>quandam</span><span lang=EN-US> </span><span\x0Alang=EN-US>sortem,</span><span lang=EN-US> </span><span lang=EN-US>que</span><span\x0Alang=EN-US> </span><span lang=EN-US>vocatur</span><span lang=EN-US> </span><span\x0Alang=EN-US>Lang,</span><span lang=EN-US> </span><span lang=EN-US>que</span><span\x0Alang=EN-US> </span><span lang=EN-US>est</span><span lang=EN-US> </span><span\x0Alang=EN-US>sita</span><span lang=EN-US> </span><span lang=EN-US>super</span><span\x0Alang=EN-US> </span><span lang=EN-US>Vartam</span><span lang=EN-US> </span><span\x0Alang=EN-US>fluvium,</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>qua</span><span lang=EN-US> </span><span\x0Alang=EN-US>ex</span><span lang=EN-US> </span><span lang=EN-US>antico</span><span\x0Alang=EN-US> </span><span lang=EN-US>erant</span><span lang=EN-US> </span><span\x0Alang=EN-US>duo</span><span lang=EN-US> </span><span lang=EN-US>kemetones</span><span\x0Alang=EN-US> </span><span lang=EN-US>proprii</span><span lang=EN-US> </span><span\x0Alang=EN-US>patris</span><span lang=EN-US> </span><span lang=EN-US>nostri</span><span\x0Alang=EN-US> </span><span lang=EN-US>venatores</span><span lang=EN-US> </span><span\x0Alang=EN-US>castorum.</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Pommerell.</span><span lang=EN-US> </span><span\x0Alang=EN-US>209</span><span lang=EN-US> </span><span lang=EN-US>abbati</span><span\x0Alang=EN-US> </span><span lang=EN-US>et</span><span lang=EN-US> </span><span\x0Alang=EN-US>conventui</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>concedimus</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>dux)</span></i><span lang=EN-US>,</span><span lang=EN-US> </span><span\x0Alang=EN-US>ut</span><span lang=EN-US> </span><span lang=EN-US>ky\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>met</span></u>hones</span><span lang=EN-US> </span><span\x0Alang=EN-US>eorum</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>ab</span><span lang=EN-US> </span><span\x0Alang=EN-US>omni</span><span lang=EN-US> </span><span lang=EN-US>exactione</span><span\x0Alang=EN-US> </span><span lang=EN-US>nostri</span><span lang=EN-US> </span><span\x0Alang=EN-US>servicii</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>plenam</span><span lang=EN-US> </span><span\x0Alang=EN-US>inperpetuum</span><span lang=EN-US> </span><span lang=EN-US>possideant</span><span\x0Alang=EN-US> </span><span lang=EN-US>libertatem.</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart</span><span\x0Alang=EN-US>.</span><span lang=EN-US> </span><span lang=EN-US>Sil.</span><span\x0Alang=EN-US> </span><span lang=EN-US>D</span><span lang=EN-US> </span><span\x0Alang=EN-US>IV</span><span lang=EN-US> </span><span lang=EN-US>276</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kme</span></u>tones.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Chart.</span><span lang=EN-US> </span><span lang=EN-US>Pommerell.</span><span\x0Alang=EN-US> </span><span lang=EN-US>320</span><span lang=EN-US> </span><span\x0Alang=EN-US>(a.</span><span lang=EN-US> </span><span lang=EN-US>1280)</span><span\x0Alang=EN-US> </span><span lang=EN-US>addidit</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>dux</span></i><span lang=EN-US> </span><span\x0Alang=EN-US>eciam</span><span lang=EN-US> </span><span lang=EN-US>lacus</span><span\x0Alang=EN-US> </span><span lang=EN-US>suos</span><span lang=EN-US> </span><span\x0Alang=EN-US>omnes</span><span lang=EN-US> </span><span lang=EN-US>ibidem</span><span\x0Alang=EN-US> </span><span lang=EN-US>eidem</span><span lang=EN-US> </span><span\x0Alang=EN-US>domui</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>iure</span><span lang=EN-US> </span><span\x0Alang=EN-US>perpetuo</span><span lang=EN-US> </span><span lang=EN-US>sine</span><span\x0Alang=EN-US> </span><span lang=EN-US>omni</span><span lang=EN-US> </span><span\x0Alang=EN-US>participatione</span><span lang=EN-US> </span><span lang=EN-US>circumsedencium</span><span\x0Alang=EN-US> </span><span lang=EN-US>militum</span><span lang=EN-US> </span><span\x0Alang=EN-US>vel</span><span lang=EN-US> </span><span lang=EN-US>qmetonum</span><span\x0Alang=EN-US> </span><span lang=EN-US>(\xE2\x80\x91<u><span style=\'display:none\'>kme</span></u>tonum</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>K</span></i><span\x0Alang=EN-US>).</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>et</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>l</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.75pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>28</span></i><span\x0Alang=EN-US>.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>koga</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cocca.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kogge(n)mester</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>coggemester.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kokemester</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cokemester.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kokko</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cocca.[VERWEIS]<b>koky</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> coccyx.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>komarcos</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>comarchus.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>konversus</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>v.</span></i><span\x0Alang=EN-US> </span><span lang=EN-US>converto.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>adde</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ad</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>vol.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>II.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>p.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>1838,10sqq.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Chart.</span><span lang=EN-US> </span><span lang=EN-US>Slag.</span><span\x0Alang=EN-US> </span><span lang=EN-US>26</span><span lang=EN-US> </span><span\x0Alang=EN-US>(a.</span><span lang=EN-US> </span><span lang=EN-US>1276)</span><span\x0Alang=EN-US> </span><span lang=EN-US>fratres</span><span lang=EN-US> </span><span\x0Alang=EN-US>Walchunus,</span><span lang=EN-US> </span><span lang=EN-US>Wernherus,</span><span\x0Alang=EN-US> </span><span lang=EN-US>Fridericus</span><span lang=EN-US> </span><span\x0Alang=EN-US>k\xE2\x80\x91<u><span style=\'display:none\'>onvers</span></u>i</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(v.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>notam</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ed.)</span></i><span lang=EN-US>.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kora</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cora.[VERWEIS]<b>koram</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> coram.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>koremede</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>curmeda.[VERWEIS]<b>koriletum</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> coryletum.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>koropalates</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> curopalates.[VERWEIS]<b>kosmus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cosmos.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kota</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cota.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kottus</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>cottus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>koufmannus</b> (kufmanus),\x0A\xE2\x80\x91i <i><span style=\'letter-spacing:.25pt\'>m.</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>(theod.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vet.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>koufman; <i><span style=\'letter-spacing:\x0A.25pt\'>cf.</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>Lexer,</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Mittelhochdt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Handwb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1696)</span></i>[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>mercator</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Kaufmann\xE2\x80\x99</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Chart</span>.\x0Ascrin. Col. A II 2 p. 17,10 (a. 1135/80) Herbort, kufmani amicus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kozzus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cozzus.[VERWEIS]<span style=\'font-size:\x0A6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kromios</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>crom(m)yon.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kronius</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> chronius.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>ktisma</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>ctisma.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kufmanus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>koufmannus.[VERWEIS]<span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kufoides</b>\x0A<i><span style=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:\x0ASymbol;position:relative;top:-1.0pt\'>*</span>cyphoides.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>kuneus</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cuneus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><span class=lemma>kungelinus</span><b>,</b>\x0A\xE2\x80\x91a, \xE2\x80\x91um.[MFSP]<i><span style=\'letter-spacing:.25pt\'>(theod.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vet.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>kuniclin;</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>cf.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Lexer,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Mittelhochdt.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Handwb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>I.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>p.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1775</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>s.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>v.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span style=\'font-size:7.0pt;\x0Aposition:relative;top:-2.0pt\'>2</span>k\xC3\xBCniclin<i><span style=\'letter-spacing:\x0A.25pt\'>)</span></i><i><span style=\'letter-spacing:.25pt\'>[MFSP]</span><span\x0Astyle=\'letter-spacing:.25pt\'>qui</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>cuniculi</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>est,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>leporinus</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Kaninchen\xE2\x80\x91</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Trad.</span>\x0AWeiss. app. II 7 p. 329,4 (a. 1265) quod pellifices in omni suo opere veteres pelles\x0Anovis \xE2\x80\x91<u><span style=\'display:none\'>kungelin</span></u>um <i><span\x0Astyle=\'letter-spacing:.25pt\'>(fort.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>subest</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>glossa)</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>leporinis non coniungent.[VERWEIS]<i><span\x0Astyle=\'letter-spacing:.25pt\'>cf.</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span>cuniculinus.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kurmeda</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>curmeda.[VERWEIS]<b>kurro</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. curro.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kurtis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> 1. <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cortis.[VERWEIS]<b>kyan\xE2\x80\x91</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cyan\xE2\x80\x91.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kylis</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>coelis.[VERWEIS]<b>kylos</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> chylus.[VERWEIS]<b>kymba</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cymba.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b>[kymbos</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>cephen.<b>]</b>[VERWEIS]<b>kymera</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> chimaera.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kymetho</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>kmet(h)o.[VERWEIS]<b>kypseli</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> cypsele.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b>kyrias</b> <i><span\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i> <span style=\'font-family:Symbol;\x0Aposition:relative;top:-1.0pt\'>*</span>kyrius.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><span class=lemma>kyrica</span>\x0A(kir\xE2\x80\x91, kyrr<span style=\'font-size:8.0pt\'>\xE2\x80\x91,</span><span style=\'font-size:8.0pt\'>\x0A</span><span style=\'font-size:8.0pt\'>\xE2\x80\x91ia,</span><span style=\'font-size:8.0pt\'> </span><span\x0Astyle=\'font-size:8.0pt\'>\xE2\x80\x91cha)</span>, \xE2\x80\x91ae <i><span style=\'letter-spacing:.25pt\'>f.</span></i>[MFSP](*<span\x0Astyle=\'font-family:OldGreekSerif;letter-spacing:.25pt\'>kurik\xC3\xAB</span>, <i><span\x0Astyle=\'letter-spacing:.25pt\'>theod.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>vet.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i>kirihha; <i><span style=\'letter-spacing:\x0A.25pt\'>cf.</span></i><i><span style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>Stotz,</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Handb.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>1,IV</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>\xC2\xA7</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>9.4</span></i><span lang=EN-US>)</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>domus</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Domini,</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Dei</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Haus</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>des</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Herrn,</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Gotteshaus,</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>\xE2\x80\x98Kirche\xE2\x80\x99</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>(fere</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>proprie</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>de</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>aedificio;</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>translate</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>de</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>institutione</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>l</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.75pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>12)</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Amalar.</span><span lang=EN-US> </span><span\x0Alang=EN-US>off.</span><span lang=EN-US> </span><span lang=EN-US>3,2,1</span><span\x0Alang=EN-US> </span><span lang=EN-US>ipsa</span><span lang=EN-US> </span><span\x0Alang=EN-US>domus</span><span lang=EN-US> </span><span lang=EN-US>vocatur</span><span\x0Alang=EN-US> </span><span lang=EN-US>ecclesia,</span><span lang=EN-US> </span><span\x0Alang=EN-US>quia</span><span lang=EN-US> </span><span lang=EN-US>ecclesiam</span><span\x0Alang=EN-US> </span><span lang=EN-US>continet;</span><span lang=EN-US> </span><span\x0Alang=EN-US>ipsa</span><span lang=EN-US> </span><span lang=EN-US>vocatur</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyric</span></u>a</span><span\x0Alang=EN-US> </span><span lang=EN-US>(kyrrica</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>P3</span></i><span lang=EN-US>),</span><span\x0Alang=EN-US> </span><span lang=EN-US>quia</span><span lang=EN-US> </span><span\x0Alang=EN-US>est</span><span lang=EN-US> </span><span lang=EN-US>dominicalis<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></span><span lang=EN-US> </span><span\x0Alang=EN-US>kyrius</span><span lang=EN-US> </span><span lang=EN-US>grece,</span><span\x0Alang=EN-US> </span><span lang=EN-US>latine</span><span lang=EN-US> </span><span\x0Alang=EN-US>dominus,</span><span lang=EN-US> </span><span lang=EN-US>ac</span><span\x0Alang=EN-US> </span><span lang=EN-US>ideo</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyric</span></u>a</span><span\x0Alang=EN-US> </span><span lang=EN-US>(kyria</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>A</span></i><span lang=EN-US>),</span><span\x0Alang=EN-US> </span><span lang=EN-US>dominicalis</span><span lang=EN-US> </span><span\x0Alang=EN-US>(<i><span style=\'letter-spacing:.25pt\'>item</span></i></span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Honor.</span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>August.</span><span lang=EN-US> </span><span lang=EN-US>sacram.</span><span\x0Alang=EN-US> </span><span lang=EN-US>31).</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Walahfr.</span><span\x0Alang=EN-US> </span><span lang=EN-US>exord.</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>481,29</span><span\x0Alang=EN-US>\xC2\xA0 </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyric</span></u>a</span><span\x0Alang=EN-US> </span><span lang=EN-US>(ki\xE2\x80\x91<u><span style=\'display:none\'>rica</span></u></span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>45</span></i><span\x0Alang=EN-US>).</span><span lang=EN-US> </span><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Wolfher.</span><span lang=EN-US> </span><span\x0Alang=EN-US>Godeh.</span><span lang=EN-US> </span><span lang=EN-US>I</span><span\x0Alang=EN-US> </span><span lang=EN-US>13</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>178,8</span><span\x0Alang=EN-US> </span><span lang=EN-US>ki\xE2\x80\x91<u><span style=\'display:none\'>ric</span></u>as</span><span\x0Alang=EN-US> </span><span lang=EN-US>(kirias</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>1</span></i><span lang=EN-US>)</span><span\x0Alang=EN-US> </span><span lang=EN-US>plures</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>construxit.</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Donizo</span><span\x0Alang=EN-US> </span><span lang=EN-US>Mathild.</span><span lang=EN-US> </span><span\x0Alang=EN-US>1,651</span><span lang=EN-US> </span><span lang=EN-US>libera</span><span\x0Alang=EN-US> </span><span lang=EN-US>per</span><span lang=EN-US> </span><span\x0Alang=EN-US>papam</span><span lang=EN-US> </span><span lang=EN-US>mea</span><span\x0Alang=EN-US> </span><span lang=EN-US>k<a name=\"kavenn16m_1\"></a>yrrica</span><span\x0Alang=EN-US> </span><span lang=EN-US>(gloss.<span style=\'letter-spacing:-1.75pt\'>:</span></span><span\x0Alang=EN-US> </span><span lang=EN-US>i.</span><span lang=EN-US> </span><span\x0Alang=EN-US>e.</span><span lang=EN-US> </span><span lang=EN-US>ecclesia)</span><span\x0Alang=EN-US> </span><span lang=EN-US>permanet</span><span lang=EN-US> </span><span\x0Alang=EN-US>alma.</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Honor.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>August.</span><span\x0Alang=EN-US> </span><span lang=EN-US>spec.</span><span lang=EN-US> </span><span\x0Alang=EN-US>add.</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>9,24</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyri</span></u>cha.</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>al.</span></i></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><b><span lang=EN-US>kyrieleison</span></b><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>sim.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><span style=\'font-family:Symbol;position:relative;\x0Atop:-1.0pt\'>*</span><span lang=EN-US>kyrius.</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kyrieleizo</span></b><span lang=EN-US> </span><span lang=EN-US>(cy\xE2\x80\x91),</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91are.</span><span lang=EN-US>[MFSP]</span><span\x0Alang=EN-US>(kyrieleison;</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>cf.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Stotz,</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Handb.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>2,VI</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xC2\xA7</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>104.7</span></i>)[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>carmen</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>sacrum</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Kyrieeleison\xE2\x80\x99</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>d.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dicere,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>cantare</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>das</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x98Kyrieeleison\xE2\x80\x99</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>genannte</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Gebet</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>sprechen,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>singen</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Hugeb.</span>\x0A<span lang=EN-US>Wynneb.</span><span lang=EN-US> </span><span lang=EN-US>13</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>117,2</span><span lang=EN-US> </span><span lang=EN-US>omnis</span><span\x0Alang=EN-US> </span><span lang=EN-US>plebs</span><span lang=EN-US> </span><span\x0Alang=EN-US>comitantes</span><span lang=EN-US> </span><span lang=EN-US>cy\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>rieleiza</span></u>bant</span><span lang=EN-US> </span><span\x0Alang=EN-US>(k\xE2\x80\x91<u><span style=\'display:none\'>yrieleiza</span></u>bant</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>2,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>4,</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>4</span></i><i><span\x0Alang=EN-US style=\'font-size:7.0pt;position:relative;top:-2.0pt;letter-spacing:\x0A.25pt\'>b</span></i><span lang=EN-US>).</span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><span class=lemma><span\x0Alang=EN-US>kyrius</span></span><span lang=EN-US> </span><span lang=EN-US>(kir\xE2\x80\x91,</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91rr\xE2\x80\x91),</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91i</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>m.</span></i><span lang=EN-US>[MFSP]</span><span\x0Alang=EN-US>(</span><span lang=EN-US style=\'font-family:OldGreekSerif;\x0Aletter-spacing:.25pt\'>k\xC3\xBArio\xC3\x9F</span><span lang=EN-US>)</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>script.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US>[MFSP]</span><span\x0Alang=EN-US>quir\xE2\x80\x91</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><i><span style=\'letter-spacing:-1.5pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>2548</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.5pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>8</span></i><span\x0Alang=EN-US>.</span><span lang=EN-US>[MFSP]</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.7pt\'>?</span></i><span lang=EN-US>gir\xE2\x80\x91<span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></span><span lang=EN-US> </span><i><span style=\'letter-spacing:-1.5pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>2548</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.5pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>24</span></i><span\x0Alang=EN-US>.</span><span lang=EN-US>[MFSP]</span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>form.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'font-size:\x0A9.0pt;letter-spacing:.25pt\'>voc.</span></i><i><span lang=EN-US\x0Astyle=\'font-size:9.0pt;letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'font-size:9.0pt;letter-spacing:.25pt\'>vel</span></i><i><span lang=EN-US\x0Astyle=\'font-size:9.0pt;letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'font-size:9.0pt;letter-spacing:.25pt\'>nom.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US>[MFSP]</span><span\x0Alang=EN-US>\xE2\x80\x91os<span style=\'letter-spacing:-1.75pt\'>:</span></span><span\x0Alang=EN-US> </span><i><span style=\'letter-spacing:-1.5pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>p.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>2548</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.5pt\'>,</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A-1.5pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>3</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-.75pt\'>.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'> </span><span style=\'letter-spacing:.25pt\'>20</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>23</span><span style=\'letter-spacing:\x0A-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>26</span></i>.[MFSP]\xE2\x80\x91as<span style=\'letter-spacing:\x0A-1.75pt\'>:</span> <i><span style=\'letter-spacing:.25pt\'>l</span><span\x0Astyle=\'letter-spacing:-.75pt\'>.</span></i><i><span style=\'letter-spacing:-1.75pt\'>\x0A</span><span style=\'letter-spacing:.25pt\'>25</span></i>.</p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>dominus</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x93</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>Herr</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US>[MFSP]</span><b><span\x0Alang=EN-US>1</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>de</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>Deo,</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>Christo</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US>[MFSP]</span><b><span\x0Alang=EN-US>a</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>in</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>univ.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Hymn.</span><span lang=EN-US> </span><span\x0Alang=EN-US>abeced.</span><span lang=EN-US> </span><span lang=EN-US>K</span><span\x0Alang=EN-US> </span><span lang=EN-US>1</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyri</span></u>a<a name=\"kavenn3m_1\"></a>s,</span><span\x0Alang=EN-US> </span><span lang=EN-US>culmen,</span><span lang=EN-US> </span><span\x0Alang=EN-US>creator</span><span lang=EN-US> </span><span lang=EN-US>celse</span><span\x0Alang=EN-US> </span><span lang=EN-US>celicorum</span><span lang=EN-US> </span><span\x0Alang=EN-US>lexque</span><span lang=EN-US> </span><span lang=EN-US>rerum,</span><span\x0Alang=EN-US> </span><span lang=EN-US>ominum</span><span lang=EN-US> </span><span\x0Alang=EN-US>et</span><span lang=EN-US> </span><span lang=EN-US>angelorum</span><span\x0Alang=EN-US> </span><i><span lang=EN-US style=\'letter-spacing:.25pt\'>(v.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>comm.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>ed.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>p.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>84)</span></i><span lang=EN-US>.</span><span lang=EN-US> </span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Rhythm.</span> 81,17,5 terra\x0Atremescit c<span style=\'font-family:\"Cambria\",serif\'>\xC4\x99</span>lestium impetu, iudex\x0Aadvenit <span style=\'letter-spacing:3.0pt\'>homousion</span> \xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kyri</span></u>us (81,47,1. 90,1,6). <span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Hraban.</span><span\x0Alang=EN-US> </span><span lang=EN-US>carm.</span><span lang=EN-US> </span><span\x0Alang=EN-US>39,99,6</span><span lang=EN-US> </span><span lang=EN-US>ore,</span><span\x0Alang=EN-US> </span><span lang=EN-US>corde</span><span lang=EN-US> </span><span\x0Alang=EN-US>et</span><span lang=EN-US> </span><span lang=EN-US>opere</span><span\x0Alang=EN-US> </span><span lang=EN-US>te</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Christum)</span></i><span lang=EN-US> </span><span lang=EN-US>canam</span><span\x0Alang=EN-US> </span><span lang=EN-US>laudem,</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyri</span></u>e.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Carm.</span><span lang=EN-US> </span><span lang=EN-US>Bur.</span><span\x0Alang=EN-US> </span><span lang=EN-US>51</span><span lang=EN-US style=\'font-size:\x0A7.0pt;position:relative;top:-2.0pt\'>a</span><span lang=EN-US>,1,8</span><span\x0Alang=EN-US> </span><span lang=EN-US>miserere,</span><span lang=EN-US> </span><span\x0Alang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyri</span></u>o<a name=\"kavenn4m_1\"></a>s,</span><span\x0Alang=EN-US> </span><span lang=EN-US>salva</span><span lang=EN-US> </span><span\x0Alang=EN-US>tuos</span><span lang=EN-US> </span><span lang=EN-US>famulos.</span><span\x0Alang=EN-US> </span><span lang=EN-US style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Vita</span><span lang=EN-US> </span><span lang=EN-US>Hildeg.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Bing.</span><span lang=EN-US> </span><span\x0Alang=EN-US>I</span><span lang=EN-US> </span><span lang=EN-US>3,16</span><span\x0Alang=EN-US> </span><span lang=EN-US>l.</span><span lang=EN-US> </span><span\x0Alang=EN-US>34</span><span lang=EN-US> </span><span lang=EN-US>(CCCont.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Med.</span><span lang=EN-US> </span><span\x0Alang=EN-US>CXXXI.</span><span lang=EN-US> </span><span lang=EN-US>1993.</span><span\x0Alang=EN-US> </span><span lang=EN-US>p.</span><span lang=EN-US> </span><span\x0Alang=EN-US>54)</span><span lang=EN-US> </span><span lang=EN-US>in</span><span\x0Alang=EN-US> </span><span lang=EN-US>hunc</span><span lang=EN-US> </span><span\x0Alang=EN-US>modum</span><span lang=EN-US> </span><span lang=EN-US>exposuit</span><span\x0Alang=EN-US> </span><span lang=EN-US>litteras<span style=\'letter-spacing:-1.75pt\'>:</span></span><span\x0Alang=EN-US> </span><span lang=EN-US>K</span><span lang=EN-US> </span><span\x0Alang=EN-US>kirium</span><span lang=EN-US> </span><span lang=EN-US>(\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>kyri</span></u>e</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>B</span></i><span lang=EN-US>),</span><span\x0Alang=EN-US> </span><span lang=EN-US>P</span><span lang=EN-US> </span><span\x0Alang=EN-US>presbyter</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>eqs</span></i><span lang=EN-US>.</span><span\x0Alang=EN-US>[MFSP]</span><b><span lang=EN-US>b</span></b><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'font-size:8.0pt;letter-spacing:.25pt\'>iunctura</span></i><i><span\x0Alang=EN-US style=\'font-size:8.0pt;letter-spacing:.25pt\'> </span></i><span\x0Alang=EN-US>Kyrieleison</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>sim.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>i.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>q.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>carmen</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>sacrum</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x98Kyrieeleison\xE2\x80\x99</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>\x0A</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>d.</span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>das</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>\xE2\x80\x98Kyrieeleison\xE2\x80\x99</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>\x0A</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'>genannte</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>Gebet</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Conc.</span><span\x0Alang=EN-US> </span><span lang=EN-US>Merov.</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>56,23</span><span\x0Alang=EN-US> </span><span lang=EN-US>ut</span><span lang=EN-US> </span><span\x0Alang=EN-US>Q<a name=\"kavenn17m_1\"></a>uirieleison</span><span lang=EN-US> </span><span\x0Alang=EN-US>(Quiriaeleison,</span><span lang=EN-US> </span><span lang=EN-US>Quyrieleson,</span><span\x0Alang=EN-US> </span><span lang=EN-US>Queirie</span><span lang=EN-US> </span><span\x0Alang=EN-US>heleison,</span><span lang=EN-US> </span><span lang=EN-US>K\xE2\x80\x91<u><span\x0Astyle=\'display:none\'>yri</span></u>eleison,</span><span lang=EN-US> </span><span\x0Alang=EN-US>Kirieleison</span><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>var.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>l.</span></i><span lang=EN-US>)</span><span lang=EN-US> </span><span\x0Alang=EN-US>frequentius</span><span lang=EN-US> </span><span lang=EN-US\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span lang=EN-US>.</span><span\x0Alang=EN-US> </span><span lang=EN-US>dicatur.</span><span lang=EN-US> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Epist.</span><span\x0Alang=EN-US> </span><span lang=EN-US>var.</span><span lang=EN-US> </span>II 4,7 ut\x0Afinitis cursibus incoepturi K\xE2\x80\x91<u><span style=\'display:none\'>yri</span></u>eleison\x0A(Kyrr\xE2\x80\x91<u><span style=\'display:none\'>ieleison</span></u> <i><span\x0Astyle=\'letter-spacing:.25pt\'>T</span></i>) genua flectant <i><span\x0Astyle=\'letter-spacing:.25pt\'>fratres</span></i>. <span style=\'font-variant:\x0Asmall-caps;letter-spacing:.5pt\'>Walahfr.</span> exord. 23 p. 497,17 laetaniae <span\x0Astyle=\'letter-spacing:2.25pt\'>..</span><span style=\'letter-spacing:1.75pt\'>.</span>,\x0Aquae sequuntur, id est Kyrie (Kirie <i><span style=\'letter-spacing:.25pt\'>var.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>l.</span></i>)\x0Aeleison et Christe eleison, a Grecorum usu sumptae creduntur.[MFSP]<i><span\x0Astyle=\'letter-spacing:.25pt\'>translate</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>i.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>q.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>infelicitas,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>miseria</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>\xE2\x80\x93</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Ungl\xC3\xBCck,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Jammer</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i><i><span style=\'letter-spacing:.25pt\'>\x0A</span></i><span style=\'font-variant:small-caps;letter-spacing:.5pt\'>Bruno</span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Querf.</span> fratr. 32 p. 84,3\x0Asibi Alleluia habuerunt <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>iusti)</span></i>,\x0Anobis K\xE2\x80\x91<u><span style=\'display:none\'>yri</span></u>eleyson dimiserunt.[MFSP]<b>2</b>\x0A<i><span style=\'letter-spacing:.25pt\'>usu</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>communi</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>de</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>omni</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>regnante,</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>dominante</span><span\x0Astyle=\'letter-spacing:-1.75pt\'>:</span></i> <span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'>Ioh.</span><span style=\'font-variant:small-caps;\x0Aletter-spacing:.5pt\'> </span><span style=\'font-variant:small-caps;letter-spacing:\x0A.5pt\'>Scot.</span> carm. 8,1,1 kyrrie <i><span style=\'letter-spacing:.25pt\'>(sc.</span></i><i><span\x0Astyle=\'letter-spacing:.25pt\'> </span><span style=\'letter-spacing:.25pt\'>Karolus)</span></i>,\x0Acaeligenae cui pollet gratia formae <span style=\'letter-spacing:2.25pt\'>..</span><span\x0Astyle=\'letter-spacing:1.75pt\'>.</span>, salve, Christicolum vertex, gratissime regum.\x0A<span lang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Benzo</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US>ad</span><span lang=EN-US> </span><span lang=EN-US>Heinr.</span><span\x0Alang=EN-US> </span><span lang=EN-US>4,41</span><span lang=EN-US> </span><span\x0Alang=EN-US>p.</span><span lang=EN-US> </span><span lang=EN-US>424,10</span><span\x0Alang=EN-US> </span><span lang=EN-US>in</span><span lang=EN-US> </span><span\x0Alang=EN-US>sanctis</span><span lang=EN-US> </span><span lang=EN-US>narratur</span><span\x0Alang=EN-US> </span><span lang=EN-US>aecclesiis,</span><span lang=EN-US> </span><span\x0Alang=EN-US>quod</span><span lang=EN-US> </span><span lang=EN-US>homo</span><span\x0Alang=EN-US> </span><span lang=EN-US>sit</span><span lang=EN-US> </span><span\x0Alang=EN-US>k<a name=\"kavenn4m_2\"></a>yrrios</span><span lang=EN-US> </span><span\x0Alang=EN-US>bestiis,</span><span lang=EN-US> </span><span lang=EN-US>utens</span><span\x0Alang=EN-US> </span><span lang=EN-US>est</span><span lang=EN-US> </span><span\x0Alang=EN-US>quippe</span><span lang=EN-US> </span><span lang=EN-US>rationibus,</span><span\x0Alang=EN-US> </span><span lang=EN-US>quod</span><span lang=EN-US> </span><span\x0Alang=EN-US>denegatum</span><span lang=EN-US> </span><span lang=EN-US>est</span><span\x0Alang=EN-US> </span><span lang=EN-US>pecoribus</span><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>(cf.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>Vulg.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span><span\x0Astyle=\'letter-spacing:.25pt\'>Gen.</span></i><i><span style=\'letter-spacing:\x0A.25pt\'> </span><span style=\'letter-spacing:.25pt\'>1,26)</span></i>. <span\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Chron.</span> Ebersh. <span\x0Alang=EN-US>2</span><span lang=EN-US> </span><span lang=EN-US>p.</span><span\x0Alang=EN-US> </span><span lang=EN-US>432,16</span><span lang=EN-US> </span><span\x0Alang=EN-US>Greca</span><span lang=EN-US> </span><span lang=EN-US>etymologia</span><span\x0Alang=EN-US> </span><span lang=EN-US>Mercurius</span><span lang=EN-US> </span><span\x0Alang=EN-US>quasi</span><span lang=EN-US> </span><span lang=EN-US>mercatorum</span><span\x0Alang=EN-US> </span><span lang=EN-US>k<a name=\"kavenn4m_4\"></a>irios</span><span\x0Alang=EN-US> </span><span lang=EN-US>vocatur.</span><span lang=EN-US>[MFSP]</span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>fort.</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>add.</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US>\xC2\xA0</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Gesta</span><span\x0Alang=EN-US> </span><span lang=EN-US>Apoll.</span><span lang=EN-US> </span><span\x0Alang=EN-US>786</span><span lang=EN-US>\xC2\xA0 </span><span lang=EN-US>urbis</span><span\x0Alang=EN-US> </span><span lang=EN-US>nunc</span><span lang=EN-US> </span><span\x0Alang=EN-US>e</span><span lang=EN-US> </span><span lang=EN-US>g<a\x0Aname=\"kavenn2m_1\"></a>irius</span><span lang=EN-US> </span><span lang=EN-US>non</span><span\x0Alang=EN-US> </span><span lang=EN-US>te</span><span lang=EN-US> </span><span\x0Alang=EN-US>felicior</span><span lang=EN-US> </span><span lang=EN-US>ullus.</span><span\x0Alang=EN-US>[MFSP]</span><b><span lang=EN-US>3</span></b><span lang=EN-US> </span><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>per</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>compar.</span></i><i><span lang=EN-US style=\'letter-spacing:.25pt\'> </span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'>de</span></i><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'> </span></i><i><span lang=EN-US style=\'letter-spacing:\x0A.25pt\'>gustu</span></i><i><span lang=EN-US style=\'letter-spacing:-1.75pt\'>:</span></i><i><span\x0Alang=EN-US style=\'letter-spacing:.25pt\'> </span></i><span lang=EN-US\x0Astyle=\'font-variant:small-caps;letter-spacing:.5pt\'>Rein.</span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'> </span><span\x0Alang=EN-US style=\'font-variant:small-caps;letter-spacing:.5pt\'>Alem.</span><span\x0Alang=EN-US> </span><span lang=EN-US>phagifac.</span><span lang=EN-US> </span><span\x0Alang=EN-US>360</span><span lang=EN-US> </span><span lang=EN-US>regna</span><span\x0Alang=EN-US> </span><span lang=EN-US>tenet</span><span lang=EN-US> </span><span\x0Alang=EN-US>gustus,</span><span lang=EN-US> </span><span lang=EN-US>ferclorum</span><span\x0Alang=EN-US> </span><span lang=EN-US>\xE2\x80\x91<u><span style=\'display:none\'>kyri</span></u>os<a\x0Aname=\"kavenn4m_3\"></a>,</span><span lang=EN-US> </span><span lang=EN-US>ad</span><span\x0Alang=EN-US> </span><span lang=EN-US>plus</span><span lang=EN-US> </span><span\x0Alang=EN-US>lata</span><span lang=EN-US> </span><span lang=EN-US>tribus</span><span\x0Alang=EN-US> </span><span lang=EN-US>digitis. <span style=\'color:#5B9BD5\'>[EndeLemmaStreckeAutor]</span><i><span\x0Astyle=\'letter-spacing:.25pt\'>Mandrin</span></i></span></p>\x0A\x0A<p class=MsoNormal style=\'text-indent:6.5pt\'><span style=\'font-size:6.0pt;\x0Afont-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kyrrica</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>kyrica.</span><span lang=EN-US>[VERWEIS]</span><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kyrrie,</span></b><b><span lang=EN-US> </span></b><span\x0Astyle=\'font-size:6.0pt;font-family:Wingdings;position:relative;top:-2.0pt\'>\xEF\x82\xAC</span><b><span\x0Alang=EN-US>kyrrios</span></b><span lang=EN-US> </span><i><span lang=EN-US\x0Astyle=\'letter-spacing:.25pt\'>v.</span></i><span lang=EN-US> </span><span\x0Astyle=\'font-family:Symbol;position:relative;top:-1.0pt\'>*</span><span\x0Alang=EN-US>kyrius.</span></p>\x0A\x0A</div>\x0A\x0A</body>\x0A\x0A</html>\x0A");
F.line = 139;
rawEcho(HEX24_369098760((source_520094267).length));
F.line = 140;
var res_520094338 = HEX28HEX29_520094268(document_520094057, source_520094267, 0);
F.line = 141;
rawEcho([45,45,45]);
F.line = 142;
rawEcho(asSxpr_1124074057(res_520094338.Field0));
F.line = 143;
rawEcho([45,45,45]);
Label3: {
  F.line = 144;
  var e_520094361 = [null];
  F.line = 241;
  F.filename = "iterators.nim";
  var i_520094380 = 0;
  F.line = 242;
  var L_520094381 = (res_520094338.Field1).length;
  Label4: {
    F.line = 243;
      Label5: while (true) {
      if (!(i_520094380 < L_520094381)) break Label5;
        F.line = 144;
        F.filename = "XMLParser.nim";
        e_520094361[0] = res_520094338.Field1[chckIndx(i_520094380, 0, (res_520094338.Field1).length - 1)];
        F.line = 144;
        rawEcho(HEX24_1073741903(e_520094361[0]));
        F.line = 144;
        rawEcho([]);
        F.line = 245;
        F.filename = "iterators.nim";
        i_520094380 = addInt(i_520094380, 1);
        if (!(((res_520094338.Field1).length == L_520094381))) {
        F.line = 246;
        failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
        }
        
      }
  };
};
framePtr = F.prev;
var F = {procname: "module XMLParser", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/examples/XMLParser.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal_33557113(message_33557116) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_33557116, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");
  framePtr = F.prev;

  
}

function chckNilDisp(p_33557112, p_33557112_Idx) {
    if ((p_33557112 == null && p_33557112_Idx == 0)) {
    sysFatal_33557113([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function clear_1325400603(t_1325400606) {
  var F = {procname: "clear.clear", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 151;
      F.filename = "tableimpl.nim";
      var i_1325400670 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520094716 = 0;
      F.line = 151;
      F.filename = "tableimpl.nim";
      colontmp__520094716 = (t_1325400606.data).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094717 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094717 < colontmp__520094716)) break Label3;
            F.line = 151;
            F.filename = "tableimpl.nim";
            i_1325400670 = i_520094717;
            F.line = 153;
            t_1325400606.data[chckIndx(i_1325400670, 0, (t_1325400606.data).length - 1)].Field0 = 0;
            F.line = 154;
            t_1325400606.data[chckIndx(i_1325400670, 0, (t_1325400606.data).length - 1)].Field1 = 0;
            F.line = 155;
            t_1325400606.data[chckIndx(i_1325400670, 0, (t_1325400606.data).length - 1)].Field2 = nimCopy(t_1325400606.data[chckIndx(i_1325400670, 0, (t_1325400606.data).length - 1)].Field2, {Field0: null, Field1: 0}, NTI1325400121);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094717 = addInt(i_520094717, 1);
          }
      };
    };
    F.line = 156;
    F.filename = "tableimpl.nim";
    t_1325400606.counter = 0;
  framePtr = F.prev;

  
}

function cleanUp_1325400550(self_1325400551) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 208;
    F.filename = "parse.nim";
    clear_1325400603(self_1325400551.visited);
  framePtr = F.prev;

  
}

function cleanUp_1325409590(self_1325409591) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1728;
    F.filename = "parse.nim";
    cleanUp_1325400550(self_1325409591);
  framePtr = F.prev;

  
}

function clear_1325409079(t_1325409082) {
  var F = {procname: "clear.clear", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 151;
      F.filename = "tableimpl.nim";
      var i_1325409145 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520094720 = 0;
      F.line = 151;
      F.filename = "tableimpl.nim";
      colontmp__520094720 = (t_1325409082.data).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520094721 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520094721 < colontmp__520094720)) break Label3;
            F.line = 151;
            F.filename = "tableimpl.nim";
            i_1325409145 = i_520094721;
            F.line = 153;
            t_1325409082.data[chckIndx(i_1325409145, 0, (t_1325409082.data).length - 1)].Field0 = 0;
            F.line = 154;
            t_1325409082.data[chckIndx(i_1325409145, 0, (t_1325409082.data).length - 1)].Field1 = 0;
            F.line = 155;
            t_1325409082.data[chckIndx(i_1325409145, 0, (t_1325409082.data).length - 1)].Field2 = 0;
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520094721 = addInt(i_520094721, 1);
          }
      };
    };
    F.line = 156;
    F.filename = "tableimpl.nim";
    t_1325409082.counter = 0;
  framePtr = F.prev;

  
}

function cleanUp_1325409026(self_1325409027) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1673;
    F.filename = "parse.nim";
    clear_1325409079(self_1325409027.recursionCounter);
    F.line = 1674;
    cleanUp_1325400550(self_1325409027);
  framePtr = F.prev;

  
}

function cleanUp_1325401040(self_1325400551) {
  var F = {procname: "parse.cleanUp", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1325400551);
    if (isObj(self_1325400551.m_type, NTI1325406151)) {
    F.line = 207;
    F.filename = "parse.nim";
    cleanUp_1325409590(self_1325400551);
    }
    else {
    if (isObj(self_1325400551.m_type, NTI1325404793)) {
    F.line = 207;
    cleanUp_1325409026(self_1325400551);
    }
    else {
    if (isObj(self_1325400551.m_type, NTI1325400132)) {
    F.line = 207;
    cleanUp_1325400550(self_1325400551);
    }
    }}
  framePtr = F.prev;

  
}

function HEX24_1325405206(self_1325405207) {
  var result_1325405208 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1028;
    F.filename = "parse.nim";
    result_1325405208 = nimCopy(null, nsuJoinSep([[34], nsuReplaceStr(self_1325405207.text, [34], [92,34]), [34]], []), NTI33554449);
  framePtr = F.prev;

  return result_1325405208;

}

function HEX24_1325405665(self_1325405666) {
  var result_1325405667 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1143;
    F.filename = "parse.nim";
    result_1325405667 = nimCopy(null, nsuJoinSep([[47], nsuReplaceStr(self_1325405666.reInfo.Field0, [47], [92,47]), [47]], []), NTI33554449);
  framePtr = F.prev;

  return result_1325405667;

}

function HEX24_1325405554(self_1325405555) {
  var result_1325405556 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1096;
    F.filename = "parse.nim";
    result_1325405556 = nimCopy(null, nsuJoinSep([[105,99,34], nsuReplaceStr(self_1325405555.text, [34], [92,34]), [34]], []), NTI33554449);
  framePtr = F.prev;

  return result_1325405556;

}

function HEX3DHEX3D_1325406042(x_1325406044, y_1325406045) {
  var result_1325406046 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((x_1325406044["Field0"] == y_1325406045["Field0"]))) {
    F.line = 1708;
    F.filename = "system.nim";
    result_1325406046 = false;
    break BeforeRet;
    }
    
    if (!((x_1325406044["Field1"] == y_1325406045["Field1"]))) {
    F.line = 1708;
    result_1325406046 = false;
    break BeforeRet;
    }
    
    F.line = 1709;
    result_1325406046 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406046;

}

function HEX24_1325405975(self_1325405976) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_1325405977 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1326;
    F.filename = "parse.nim";
    F.line = 1327;
    var postfix_1325405982 = (grammar_1325401580(self_1325405976).flags[0] != undefined);
    F.line = 1328;
    var subP_1325405983 = self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)];
    F.line = 1330;
    var subStr_1325405984 = [];
    if (((postfix_1325405982 && eqStrings(name_1325401136(subP_1325405983), [])) && contains_939524145(NaryParsers_1325400329, type_1325401129(subP_1325405983)))) {
    F.line = 1334;
    if (!(eqStrings(self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)].pname, []))) {
    Temporary1 = self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)].pname;
    }
    else {
    Temporary1 = HEX24_1325401404(self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)]);
    }
    
    subStr_1325405984 = nimCopy(null, nsuJoinSep([[40], nimCopy(null, Temporary1, NTI33554449), [41]], []), NTI33554449);
    }
    else {
      F.line = 1336;
      if (!(eqStrings(self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)].pname, []))) {
      Temporary2 = self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)].pname;
      }
      else {
      Temporary2 = HEX24_1325401404(self_1325405976.subParsers[chckIndx(0, 0, (self_1325405976.subParsers).length - 1)]);
      }
      
      subStr_1325405984 = nimCopy(null, Temporary2, NTI33554449);
    }
    
    if (HEX3DHEX3D_1325406042(self_1325405976.repRange, {Field0: 0, Field1: 1})) {
    if (postfix_1325405982) {
    Temporary4 = (subStr_1325405984 || []).concat([63] || []);
    }
    else {
    Temporary4 = nsuJoinSep([[91], nimCopy(null, subStr_1325405984, NTI33554449), [93]], []);
    }
    
    Temporary3 = Temporary4;
    }
    else {
    if (((self_1325405976.repRange["Field0"] == 0) && (1073741824 <= self_1325405976.repRange["Field1"]))) {
    if (postfix_1325405982) {
    Temporary5 = (subStr_1325405984 || []).concat([42] || []);
    }
    else {
    Temporary5 = nsuJoinSep([[123], nimCopy(null, subStr_1325405984, NTI33554449), [125]], []);
    }
    
    Temporary3 = Temporary5;
    }
    else {
    if (((self_1325405976.repRange["Field0"] == 1) && (1073741824 <= self_1325405976.repRange["Field1"]))) {
    if (postfix_1325405982) {
    Temporary6 = (subStr_1325405984 || []).concat([43] || []);
    }
    else {
    Temporary6 = nsuJoinSep([[123], nimCopy(null, subStr_1325405984, NTI33554449), [125,43]], []);
    }
    
    Temporary3 = Temporary6;
    }
    else {
      F.line = 1347;
      var tmpTuple_1325406052 = nimCopy(null, self_1325405976.repRange, NTI1325403997);
      F.line = 1347;
      var min_1325406053 = tmpTuple_1325406052["Field0"];
      F.line = 1347;
      var max_1325406054 = tmpTuple_1325406052["Field1"];
    Temporary3 = nsuJoinSep([nimCopy(null, subStr_1325405984, NTI33554449), [40], HEX24_369098766(BigInt(min_1325406053)), [44,32], HEX24_369098766(BigInt(max_1325406054)), [41]], []);
    }
    }}
    result_1325405977 = nimCopy(null, Temporary3, NTI33554449);
  framePtr = F.prev;

  return result_1325405977;

}

function HEX24_1325405823(self_1325405824) {
  var result_1325405825 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1213;
    F.filename = "parse.nim";
    result_1325405825 = nimCopy(null, [126], NTI33554449);
  framePtr = F.prev;

  return result_1325405825;

}

function HEX24_1325406536(self_1325406537) {
              var Temporary5;
              var Temporary6;

  var result_1325406538 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1492;
    F.filename = "parse.nim";
    F.line = 1492;
    F.line = 1492;
    var collectResult_1325406539 = [];
    Label1: {
      F.line = 1493;
      var i_1325406615 = (-1);
      Label2: {
        F.line = 1493;
        var subP_1325406619 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094725 = 0;
        F.line = 242;
        var L_520094726 = (self_1325406537.subParsers).length;
        Label3: {
          F.line = 243;
            Label4: while (true) {
            if (!(i_520094725 < L_520094726)) break Label4;
              F.line = 1494;
              F.filename = "parse.nim";
              subP_1325406619 = self_1325406537.subParsers[chckIndx(i_520094725, 0, (self_1325406537.subParsers).length - 1)];
              F.line = 1494;
              i_1325406615 = addInt(i_1325406615, 1);
              F.line = 1495;
              if (!(eqStrings(subP_1325406619.pname, []))) {
              Temporary5 = subP_1325406619.pname;
              }
              else {
              Temporary5 = HEX24_1325401404(subP_1325406619);
              }
              
              var subStr_1325406625 = nimCopy(null, Temporary5, NTI33554449);
              F.line = 1496;
              if ((i_1325406615 == chckRange(self_1325406537.mandatory, (-2147483648), 2147483647))) {
              Temporary6 = [194,167];
              }
              else {
              Temporary6 = [];
              }
              
              var marker_1325406626 = nimCopy(null, Temporary6, NTI33554449);
              if ((contains_939524145([[58,65,108,116,101,114,110,97,116,105,118,101], [58,83,101,114,105,101,115]], type_1325401129(subP_1325406619)) && eqStrings(name_1325401136(subP_1325406619), []))) {
              F.line = 341;
              F.filename = "sugar.nim";
              collectResult_1325406539.push(nsuJoinSep([nimCopy(null, marker_1325406626, NTI33554449), [40], nimCopy(null, subStr_1325406625, NTI33554449), [41]], []));;
              }
              else {
                if (!(eqStrings(marker_1325406626, []))) {
                F.line = 341;
                collectResult_1325406539.push((marker_1325406626 || []).concat(subStr_1325406625 || []));;
                }
                else {
                  F.line = 341;
                  var Temporary7 = nimCopy(null, subStr_1325406625, NTI33554449);
                collectResult_1325406539.push(Temporary7);;
                }
                
              }
              
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094725 = addInt(i_520094725, 1);
              if (!(((self_1325406537.subParsers).length == L_520094726))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var subStrs_1325406696 = nimCopy(null, collectResult_1325406539, NTI1325400827);
    result_1325406538 = nimCopy(null, nsuJoinSep(subStrs_1325406696, [32]), NTI33554449);
  framePtr = F.prev;

  return result_1325406538;

}

function HEX24_1325406119(self_1325406120) {
            var Temporary4;

  var result_1325406121 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1383;
    F.filename = "parse.nim";
    F.line = 1383;
    F.line = 1383;
    var collectResult_1325406122 = [];
    Label1: {
      F.line = 1384;
      var subP_1325406136 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094729 = 0;
      F.line = 242;
      var L_520094730 = (self_1325406120.subParsers).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094729 < L_520094730)) break Label3;
            F.line = 1384;
            F.filename = "parse.nim";
            subP_1325406136 = self_1325406120.subParsers[chckIndx(i_520094729, 0, (self_1325406120.subParsers).length - 1)];
            F.line = 1384;
            if (!(eqStrings(subP_1325406136.pname, []))) {
            Temporary4 = subP_1325406136.pname;
            }
            else {
            Temporary4 = HEX24_1325401404(subP_1325406136);
            }
            
            var Temporary5 = nimCopy(null, Temporary4, NTI33554449);
            collectResult_1325406122.push(Temporary5);;
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094729 = addInt(i_520094729, 1);
            if (!(((self_1325406120.subParsers).length == L_520094730))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var subStrs_1325406141 = nimCopy(null, collectResult_1325406122, NTI1325400827);
    result_1325406121 = nimCopy(null, nsuJoinSep(subStrs_1325406141, [124]), NTI33554449);
  framePtr = F.prev;

  return result_1325406121;

}

function HEX24_1325409572(self_1325409573) {
    var Temporary1;

  var result_1325409574 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1706;
    F.filename = "parse.nim";
    if (!(eqStrings(self_1325409573.subParsers[chckIndx(0, 0, (self_1325409573.subParsers).length - 1)].pname, []))) {
    Temporary1 = self_1325409573.subParsers[chckIndx(0, 0, (self_1325409573.subParsers).length - 1)].pname;
    }
    else {
    Temporary1 = HEX24_1325401404(self_1325409573.subParsers[chckIndx(0, 0, (self_1325409573.subParsers).length - 1)]);
    }
    
    result_1325409574 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1325409574;

}

function HEX24_1325406885(self_1325406886) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;

  var result_1325406887 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 1582;
    F.filename = "parse.nim";
    F.line = 1583;
    if (self_1325406886.positive) {
    Temporary1 = [38];
    }
    else {
    Temporary1 = [60,45,38];
    }
    
    var prefix_1325406888 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 1584;
    var subP_1325406889 = self_1325406886.subParsers[chckIndx(0, 0, (self_1325406886.subParsers).length - 1)];
    if ((contains_939524145(NaryParsers_1325400329, type_1325401129(subP_1325406889)) && eqStrings(name_1325401136(subP_1325406889), []))) {
    if (!(eqStrings(subP_1325406889.pname, []))) {
    Temporary3 = subP_1325406889.pname;
    }
    else {
    Temporary3 = HEX24_1325401404(subP_1325406889);
    }
    
    Temporary2 = nsuJoinSep([nimCopy(null, prefix_1325406888, NTI33554449), [40], nimCopy(null, Temporary3, NTI33554449), [41]], []);
    }
    else {
      if (!(eqStrings(subP_1325406889.pname, []))) {
      Temporary4 = subP_1325406889.pname;
      }
      else {
      Temporary4 = HEX24_1325401404(subP_1325406889);
      }
      
    Temporary2 = (prefix_1325406888 || []).concat(Temporary4 || []);
    }
    
    result_1325406887 = nimCopy(null, Temporary2, NTI33554449);
  framePtr = F.prev;

  return result_1325406887;

}

function HEX24_1325401366(self_1325401367) {
  var result_1325401368 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 295;
    F.filename = "parse.nim";
    F.line = 295;
    var args_1325401376 = [];
    Label1: {
      F.line = 296;
      var p_1325401380 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094733 = 0;
      F.line = 242;
      var L_520094734 = (self_1325401367.subParsers).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094733 < L_520094734)) break Label3;
            F.line = 296;
            F.filename = "parse.nim";
            p_1325401380 = self_1325401367.subParsers[chckIndx(i_520094733, 0, (self_1325401367.subParsers).length - 1)];
            if (!((p_1325401380 == null))) {
            F.line = 297;
            args_1325401376.push(HEX24_1325401404(p_1325401380));;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094733 = addInt(i_520094733, 1);
            if (!(((self_1325401367.subParsers).length == L_520094734))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1325401368 = nimCopy(null, nsuJoinSep([nimCopy(null, self_1325401367.pname, NTI33554449), [58], type_1325401129(self_1325401367), [40], nsuJoinSep(args_1325401376, [44,32]), [41]], []), NTI33554449);
  framePtr = F.prev;

  return result_1325401368;

}

function HEX24_1325401404(self_1325401367) {
  var result_1325401405 = [];

  var F = {procname: "parse.$", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1325401367);
    if (isObj(self_1325401367.m_type, NTI1325403225)) {
    F.line = 294;
    F.filename = "parse.nim";
    result_1325401405 = HEX24_1325405206(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325403832)) {
    F.line = 294;
    result_1325401405 = HEX24_1325405665(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325403264)) {
    F.line = 294;
    result_1325401405 = HEX24_1325405554(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325403999)) {
    F.line = 294;
    result_1325401405 = HEX24_1325405975(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325403903)) {
    F.line = 294;
    result_1325401405 = HEX24_1325405823(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325404342)) {
    F.line = 294;
    result_1325401405 = HEX24_1325406536(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325404150)) {
    F.line = 294;
    result_1325401405 = HEX24_1325406119(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325404793)) {
    F.line = 294;
    result_1325401405 = HEX24_1325409572(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325404690)) {
    F.line = 294;
    result_1325401405 = HEX24_1325406885(self_1325401367);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401367.m_type, NTI1325400132)) {
    F.line = 294;
    result_1325401405 = HEX24_1325401366(self_1325401367);
    break BeforeRet;
    }
    }}}}}}}}}
  };
  framePtr = F.prev;

  return result_1325401405;

}

function refdParsers_1325404315(self_1325404316) {
              var Temporary4;
              var Temporary8;
              var Temporary12;

  var result_1325404317 = [];

  var F = {procname: "parse.refdParsers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((self_1325404316.referredParsers).length == 0)) {
    F.line = 766;
    F.filename = "parse.nim";
    self_1325404316.referredParsers = nimCopy(null, self_1325404316.subParsers, NTI1325400149);
    Label1: {
      F.line = 767;
      var matcher_1325404324 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094737 = 0;
      F.line = 242;
      var L_520094738 = (self_1325404316.skipList).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094737 < L_520094738)) break Label3;
            F.line = 767;
            F.filename = "parse.nim";
            matcher_1325404324 = self_1325404316.skipList[chckIndx(i_520094737, 0, (self_1325404316.skipList).length - 1)];
            F.line = 767;
            switch (matcher_1325404324.kind) {
            case 3:
              F.line = 770;
              var Temporary4 = matcher_1325404324;
              if (ConstSet23[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1325400124)); }
              self_1325404316.referredParsers.push(Temporary4.consumeParser);;
              break;
            default: 
              break;
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094737 = addInt(i_520094737, 1);
            if (!(((self_1325404316.skipList).length == L_520094738))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label5: {
      F.line = 772;
      F.filename = "parse.nim";
      var matcher_1325404332 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094741 = 0;
      F.line = 242;
      var L_520094742 = (self_1325404316.resumeList).length;
      Label6: {
        F.line = 243;
          Label7: while (true) {
          if (!(i_520094741 < L_520094742)) break Label7;
            F.line = 772;
            F.filename = "parse.nim";
            matcher_1325404332 = self_1325404316.resumeList[chckIndx(i_520094741, 0, (self_1325404316.resumeList).length - 1)];
            F.line = 772;
            switch (matcher_1325404332.kind) {
            case 3:
              F.line = 775;
              var Temporary8 = matcher_1325404332;
              if (ConstSet24[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1325400124)); }
              self_1325404316.referredParsers.push(Temporary8.consumeParser);;
              break;
            default: 
              break;
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094741 = addInt(i_520094741, 1);
            if (!(((self_1325404316.resumeList).length == L_520094742))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      F.line = 777;
      F.filename = "parse.nim";
      var errMatcher_1325404359 = {Field0: ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null}), Field1: []};
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094745 = 0;
      F.line = 242;
      var L_520094746 = (self_1325404316.errorList).length;
      Label10: {
        F.line = 243;
          Label11: while (true) {
          if (!(i_520094745 < L_520094746)) break Label11;
            F.line = 777;
            F.filename = "parse.nim";
            errMatcher_1325404359 = self_1325404316.errorList[chckIndx(i_520094745, 0, (self_1325404316.errorList).length - 1)];
            F.line = 777;
            switch (errMatcher_1325404359.Field0.kind) {
            case 3:
              F.line = 780;
              var Temporary12 = errMatcher_1325404359.Field0;
              if (ConstSet25[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1325400124)); }
              self_1325404316.referredParsers.push(Temporary12.consumeParser);;
              break;
            default: 
              break;
            }
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094745 = addInt(i_520094745, 1);
            if (!(((self_1325404316.errorList).length == L_520094746))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      if (!(((self_1325404316.subParsers).length <= (self_1325404316.referredParsers).length))) {
      F.line = 783;
      F.filename = "parse.nim";
      failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(783, 5) `self.referredParsers.len >= self.subParsers.len` "));
      }
      
    }
    
    F.line = 784;
    result_1325404317 = self_1325404316["referredParsers"];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404317;

}

function refdParsers_1325401408(self_1325401409) {
  var result_1325401410 = [];

  var F = {procname: "parse.refdParsers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 311;
    F.filename = "parse.nim";
    result_1325401410 = self_1325401409["subParsers"];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325401410;

}

function refdParsers_1325401427(self_1325401409) {
  var result_1325401428 = [];

  var F = {procname: "parse.refdParsers", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1325401409);
    if (isObj(self_1325401409.m_type, NTI1325400133)) {
    F.line = 306;
    F.filename = "parse.nim";
    result_1325401428 = refdParsers_1325404315(self_1325401409);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325401409.m_type, NTI1325400132)) {
    F.line = 306;
    result_1325401428 = refdParsers_1325401408(self_1325401409);
    break BeforeRet;
    }
    }
  };
  framePtr = F.prev;

  return result_1325401428;

}

function grammarHEX3D_1325401592(self_1325401593, grammar_1325401594) {
  var F = {procname: "parse.grammar=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 409;
    F.filename = "parse.nim";
    var uniqueID_1325401595 = 0;
    Label1: {
      F.line = 410;
      var p_1325401599 = null;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__520094749 = [];
      F.line = 376;
      F.filename = "parse.nim";
      colontmp__520094749 = descendants_1325401536(self_1325401593, refdSubs_1325401455);
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094750 = 0;
      F.line = 242;
      var L_520094751 = (colontmp__520094749).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094750 < L_520094751)) break Label3;
            F.line = 376;
            F.filename = "parse.nim";
            p_1325401599 = colontmp__520094749[chckIndx(i_520094750, 0, (colontmp__520094749).length - 1)];
            if (!((p_1325401599.grammarVar == GrammarPlaceholder_1325400546))) {
            F.line = 411;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(411, 5) `p.grammarVar == GrammarPlaceholder` "));
            }
            
            F.line = 412;
            p_1325401599.grammarVar = grammar_1325401594;
            F.line = 376;
            uniqueID_1325401595 = ((uniqueID_1325401595 + 1) >>> 0);
            F.line = 414;
            p_1325401599.uniqueID = uniqueID_1325401595;
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094750 = addInt(i_520094750, 1);
            if (!(((colontmp__520094749).length == L_520094751))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 378;
    F.filename = "parse.nim";
    resetTraversalTracker_1325401561(self_1325401593);
  framePtr = F.prev;

  
}

function grammarHEX3D_1325405790(self_1325405791, grammar_1325405792) {
  var F = {procname: "parse.grammar=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    if (!((((HEX3DHEX3D_1325401654(grammar_1325405792.commentRe, NeverMatchRegex_1325400128) || HEX3DHEX3D_1325401654(grammar_1325405792.commentRe, self_1325405791.comment.Field1)) || HEX3DHEX3D_1325401654(self_1325405791.comment.Field1, NeverMatchRegex_1325400128)) || ((self_1325405791.comment.Field0).length == 0)))) {
    F.line = 1204;
    F.filename = "parse.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1204, 3) `grammar.commentRe == NeverMatchRegex or grammar.commentRe == self.comment.regex or\x0A    self.comment.regex == NeverMatchRegex or\x0A    self.comment.reStr.len == 0` Multiple definitions of comments or insignificant whitespace not allowed!"));
    }
    
    F.line = 1207;
    grammarHEX3D_1325401592(self_1325405791, grammar_1325405792);
    if (((0 < (self_1325405791.comment.Field0).length) && !(HEX3DHEX3D_1325401654(self_1325405791.comment.Field1, NeverMatchRegex_1325400128)))) {
    if (!(HEX3DHEX3D_1325401654(grammar_1325405792.commentRe, NeverMatchRegex_1325400128))) {
    F.line = 1209;
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim(1209, 5) `grammar.commentRe == NeverMatchRegex` implicit whitespace must only be defined once per grammar!"));
    }
    
    F.line = 1211;
    grammar_1325405792.commentRe = nimCopy(grammar_1325405792.commentRe, self_1325405791.comment.Field1, NTI1291845873);
    }
    
  framePtr = F.prev;

  
}

function grammarHEX3D_1325401629(self_1325401593, grammar_1325401594) {
  var F = {procname: "parse.grammar=", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1325401593);
    if (isObj(self_1325401593.m_type, NTI1325403903)) {
    F.line = 408;
    F.filename = "parse.nim";
    grammarHEX3D_1325405790(self_1325401593, grammar_1325401594);
    }
    else {
    if (isObj(self_1325401593.m_type, NTI1325400132)) {
    F.line = 408;
    grammarHEX3D_1325401592(self_1325401593, grammar_1325401594);
    }
    }
  framePtr = F.prev;

  
}

function nsuContinuesWith(s_754976212, substr_754976213, start_754976214) {
  var result_754976215 = false;

  var F = {procname: "strutils.continuesWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1668;
    F.filename = "strutils.nim";
    var i_754976216 = 0;
    Label1: {
      F.line = 1669;
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_754976213).length <= i_754976216)) {
          F.line = 1670;
          result_754976215 = true;
          break BeforeRet;
          }
          
          if ((((s_754976212).length <= addInt(i_754976216, start_754976214)) || !((s_754976212[chckIndx(addInt(i_754976216, start_754976214), 0, (s_754976212).length - 1)] == substr_754976213[chckIndx(i_754976216, 0, (substr_754976213).length - 1)])))) {
          F.line = 1671;
          result_754976215 = false;
          break BeforeRet;
          }
          
          F.line = 1672;
          i_754976216 = addInt(i_754976216, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_754976215;

}

function parse_1325405188(self_1325405189, location_1325405190) {
      var Temporary1;

  var result_1325405191 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (nsuContinuesWith((Temporary1 = str_1291845749(grammar_1325401580(self_1325405189).document), Temporary1)[0][Temporary1[1]], self_1325405189.text, chckRange(location_1325405190, 0, 2147483647))) {
    if ((self_1325405189.flags[9] != undefined)) {
    F.line = 1021;
    F.filename = "parse.nim";
    var colontmp__520094753 = EmptyNode_1325400358;
    F.line = 1021;
    var colontmp__520094754 = addInt(location_1325405190, (((self_1325405189.text).length) | 0));
    F.line = 1021;
    result_1325405191 = nimCopy(result_1325405191, {Field0: colontmp__520094753, Field1: colontmp__520094754}, NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1024;
    var colontmp__520094755 = init_1124074226(new_1124074179(), self_1325405189.nodeName[0], self_1325405189.nodeName[1], self_1325405189.slice, null);
    F.line = 1024;
    var colontmp__520094756 = addInt(location_1325405190, (((self_1325405189.text).length) | 0));
    F.line = 1024;
    result_1325405191 = nimCopy(result_1325405191, {Field0: colontmp__520094755, Field1: colontmp__520094756}, NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1025;
    var colontmp__520094757 = null;
    F.line = 1025;
    var colontmp__520094758 = location_1325405190;
    F.line = 1025;
    result_1325405191 = nimCopy(result_1325405191, {Field0: colontmp__520094757, Field1: colontmp__520094758}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405191;

}

function matchLen_1291845992(slice_1291845993, pattern_1291845994, location_1291845995) {
    var Temporary1;

  var result_1291845996 = 0;

  var F = {procname: "strslice.matchLen", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(((0 <= location_1291845995) && (location_1291845995 <= addInt(subInt(slice_1291845993.Field2, slice_1291845993.Field1), 1))))) {
    F.line = 250;
    F.filename = "strslice.nim";
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim(250, 5) `location >= 0 and location <= slice.stop - slice.start + 1` "));
    }
    
    F.line = 251;
    pattern_1291845994.Field0.lastIndex = addInt(location_1291845995, slice_1291845993.Field1);
    F.line = 252;
    var m_1291846002 = (toJSStr((Temporary1 = str_1291845749(slice_1291845993), Temporary1)[0][Temporary1[1]]).match(pattern_1291845994.Field0) || []);
    if ((0 < (m_1291846002).length)) {
    if (!(((m_1291846002).length == 1))) {
    F.line = 254;
    failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim(254, 7) `m.len == 1` "));
    }
    
    F.line = 255;
    result_1291845996 = (((cstrToNimstr(m_1291846002[chckIndx(0, 0, (m_1291846002).length - 1)])).length) | 0);
    break BeforeRet;
    }
    
    F.line = 256;
    result_1291845996 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1291845996;

}

function parse_1325405630(self_1325405631, location_1325405632) {
  var result_1325405633 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1132;
    F.filename = "parse.nim";
    var l_1325405634 = matchLen_1291845992(grammar_1325401580(self_1325405631).document, self_1325405631.reInfo.Field1, location_1325405632);
    if ((0 <= l_1325405634)) {
    if ((self_1325405631.flags[9] != undefined)) {
    F.line = 1135;
    var colontmp__520094760 = EmptyNode_1325400358;
    F.line = 1135;
    var colontmp__520094761 = addInt(location_1325405632, l_1325405634);
    F.line = 1135;
    result_1325405633 = nimCopy(result_1325405633, {Field0: colontmp__520094760, Field1: colontmp__520094761}, NTI1325400121);
    break BeforeRet;
    }
    else {
    if (((self_1325405631.flags[7] != undefined) && (l_1325405634 == 0))) {
    F.line = 1137;
    var colontmp__520094762 = EmptyNode_1325400358;
    F.line = 1137;
    var colontmp__520094763 = location_1325405632;
    F.line = 1137;
    result_1325405633 = nimCopy(result_1325405633, {Field0: colontmp__520094762, Field1: colontmp__520094763}, NTI1325400121);
    break BeforeRet;
    }
    }
    F.line = 1138;
    var text_1325405654 = nimCopy(null, cut_1291845777(grammar_1325401580(self_1325405631).document, HEX2EHEX2E_1291845699(location_1325405632, subInt(addInt(location_1325405632, l_1325405634), 1))), NTI1291845635);
    F.line = 1139;
    var colontmp__520094764 = init_1124074226(new_1124074179(), self_1325405631.nodeName[0], self_1325405631.nodeName[1], text_1325405654, null);
    F.line = 1139;
    var colontmp__520094765 = addInt(location_1325405632, l_1325405634);
    F.line = 1139;
    result_1325405633 = nimCopy(result_1325405633, {Field0: colontmp__520094764, Field1: colontmp__520094765}, NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1140;
    var colontmp__520094766 = null;
    F.line = 1140;
    var colontmp__520094767 = location_1325405632;
    F.line = 1140;
    result_1325405633 = nimCopy(result_1325405633, {Field0: colontmp__520094766, Field1: colontmp__520094767}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405633;

}

function parse_1325405522(self_1325405523, location_1325405524) {
      var Temporary1;

  var result_1325405525 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (self_1325405523.compare((Temporary1 = str_1291845749(grammar_1325401580(self_1325405523).document), Temporary1)[0][Temporary1[1]], location_1325405524, self_1325405523.text)) {
    if ((self_1325405523.flags[9] != undefined)) {
    F.line = 1090;
    F.filename = "parse.nim";
    var colontmp__520094768 = EmptyNode_1325400358;
    F.line = 1090;
    var colontmp__520094769 = addInt(location_1325405524, (((self_1325405523.text).length) | 0));
    F.line = 1090;
    result_1325405525 = nimCopy(result_1325405525, {Field0: colontmp__520094768, Field1: colontmp__520094769}, NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1091;
    var nextLoc_1325405530 = addInt(location_1325405524, (((self_1325405523.text).length) | 0));
    F.line = 1092;
    var colontmp__520094770 = init_1124074226(new_1124074179(), self_1325405523.nodeName[0], self_1325405523.nodeName[1], cut_1291845777(grammar_1325401580(self_1325405523).document, HEX2EHEX2E_1291845699(location_1325405524, subInt(nextLoc_1325405530, 1))), null);
    F.line = 1092;
    var colontmp__520094771 = nextLoc_1325405530;
    F.line = 1092;
    result_1325405525 = nimCopy(result_1325405525, {Field0: colontmp__520094770, Field1: colontmp__520094771}, NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1093;
    var colontmp__520094772 = null;
    F.line = 1093;
    var colontmp__520094773 = location_1325405524;
    F.line = 1093;
    result_1325405525 = nimCopy(result_1325405525, {Field0: colontmp__520094772, Field1: colontmp__520094773}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405525;

}

function max_1325405929(x_1325405931, y_1325405932) {
    var Temporary1;

  var result_1325405933 = 0;

    if ((y_1325405932 <= x_1325405931)) {
    Temporary1 = x_1325405931;
    }
    else {
    Temporary1 = y_1325405932;
    }
    
    result_1325405933 = Temporary1;

  return result_1325405933;

}

function infiniteLoopWarning_1325405826(parser_1325405827, node_1325405828, location_1325405829) {
  var F = {procname: "parse.infiniteLoopWarning", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1223;
    F.filename = "parse.nim";
    break BeforeRet;
  };
  framePtr = F.prev;

  
}

function parse_1325405922(self_1325405923, location_1325405924) {
  var result_1325405925 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1299;
    F.filename = "parse.nim";
    var nodes_1325405934 = [];
    F.line = 1300;
    var loc_1325405935 = location_1325405924;
    F.line = 1301;
    var lastLoc_1325405936 = location_1325405924;
    F.line = 1302;
    var node_1325405937 = null;
    Label1: {
      F.line = 1303;
      var i_1325405950 = 0;
      F.line = 70;
      F.filename = "iterators_1.nim";
      var res_520094778 = 1;
      Label2: {
        F.line = 71;
          Label3: while (true) {
          if (!(res_520094778 <= self_1325405923.repRange.Field0)) break Label3;
            F.line = 1303;
            F.filename = "parse.nim";
            i_1325405950 = res_520094778;
            F.line = 1304;
            var __1325405951 = nimCopy(null, HEX28HEX29_1325403998(self_1325405923.subParsers[chckIndx(0, 0, (self_1325405923.subParsers).length - 1)], loc_1325405935), NTI1325400121);
            F.line = 1304;
            node_1325405937 = __1325405951["Field0"];
            F.line = 1304;
            loc_1325405935 = __1325405951["Field1"];
            if ((node_1325405937 == null)) {
            F.line = 1306;
            var colontmp__520094775 = null;
            F.line = 1306;
            var colontmp__520094776 = lastLoc_1325405936;
            F.line = 1306;
            result_1325405925 = nimCopy(result_1325405925, {Field0: colontmp__520094775, Field1: colontmp__520094776}, NTI1325400121);
            break BeforeRet;
            }
            else {
              F.line = 1308;
            nodes_1325405934.push(node_1325405937);;
            }
            
            if ((loc_1325405935 <= lastLoc_1325405936)) {
            F.line = 1310;
            infiniteLoopWarning_1325405826(self_1325405923, node_1325405937, loc_1325405935);
            F.line = 1311;
            break Label1;
            }
            
            F.line = 1312;
            lastLoc_1325405936 = loc_1325405935;
            F.line = 73;
            F.filename = "iterators_1.nim";
            res_520094778 = ((res_520094778 + 1) >>> 0);
          }
      };
    };
    Label4: {
      F.line = 1313;
      F.filename = "parse.nim";
      var i_1325405964 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__520094781 = 0;
      F.line = 1313;
      F.filename = "parse.nim";
      colontmp__520094781 = ((self_1325405923.repRange.Field0 + 1) >>> 0);
      F.line = 70;
      F.filename = "iterators_1.nim";
      var res_520094782 = colontmp__520094781;
      Label5: {
        F.line = 71;
          Label6: while (true) {
          if (!(res_520094782 <= self_1325405923.repRange.Field1)) break Label6;
            F.line = 1313;
            F.filename = "parse.nim";
            i_1325405964 = res_520094782;
            F.line = 1314;
            var __1325405965 = nimCopy(null, HEX28HEX29_1325403998(self_1325405923.subParsers[chckIndx(0, 0, (self_1325405923.subParsers).length - 1)], loc_1325405935), NTI1325400121);
            F.line = 1314;
            node_1325405937 = __1325405965["Field0"];
            F.line = 1314;
            loc_1325405935 = __1325405965["Field1"];
            if ((node_1325405937 == null)) {
            F.line = 1316;
            break Label4;
            }
            else {
              F.line = 1318;
            nodes_1325405934.push(node_1325405937);;
            }
            
            if ((loc_1325405935 <= lastLoc_1325405936)) {
            F.line = 1320;
            infiniteLoopWarning_1325405826(self_1325405923, node_1325405937, loc_1325405935);
            F.line = 1321;
            break Label4;
            }
            
            F.line = 1322;
            lastLoc_1325405936 = loc_1325405935;
            F.line = 73;
            F.filename = "iterators_1.nim";
            res_520094782 = ((res_520094782 + 1) >>> 0);
          }
      };
    };
    F.line = 1323;
    F.filename = "parse.nim";
    var colontmp__520094784 = grammar_1325401580(self_1325405923).returnSequence(self_1325405923, nodes_1325405934);
    F.line = 1323;
    var colontmp__520094785 = loc_1325405935;
    F.line = 1323;
    result_1325405925 = nimCopy(result_1325405925, {Field0: colontmp__520094784, Field1: colontmp__520094785}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405925;

}

function parse_1325405755(self_1325405756, location_1325405757) {
  var result_1325405758 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1194;
    F.filename = "parse.nim";
    var l_1325405759 = matchLen_1291845992(grammar_1325401580(self_1325405756).document, self_1325405756.combined.Field1, location_1325405757);
    if ((0 <= l_1325405759)) {
    if (((0 < l_1325405759) || !((self_1325405756.flags[7] != undefined)))) {
    if ((self_1325405756.flags[9] != undefined)) {
    F.line = 1198;
    var colontmp__520094786 = EmptyNode_1325400358;
    F.line = 1198;
    var colontmp__520094787 = addInt(location_1325405757, l_1325405759);
    F.line = 1198;
    result_1325405758 = nimCopy(result_1325405758, {Field0: colontmp__520094786, Field1: colontmp__520094787}, NTI1325400121);
    break BeforeRet;
    }
    
    F.line = 1199;
    var text_1325405779 = nimCopy(null, cut_1291845777(grammar_1325401580(self_1325405756).document, HEX2EHEX2E_1291845699(location_1325405757, subInt(addInt(location_1325405757, l_1325405759), 1))), NTI1291845635);
    F.line = 1200;
    var colontmp__520094788 = init_1124074226(new_1124074179(), self_1325405756.nodeName[0], self_1325405756.nodeName[1], text_1325405779, null);
    F.line = 1200;
    var colontmp__520094789 = addInt(location_1325405757, l_1325405759);
    F.line = 1200;
    result_1325405758 = nimCopy(result_1325405758, {Field0: colontmp__520094788, Field1: colontmp__520094789}, NTI1325400121);
    break BeforeRet;
    }
    
    }
    
    F.line = 1201;
    var colontmp__520094790 = EmptyNode_1325400358;
    F.line = 1201;
    var colontmp__520094791 = location_1325405757;
    F.line = 1201;
    result_1325405758 = nimCopy(result_1325405758, {Field0: colontmp__520094790, Field1: colontmp__520094791}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325405758;

}

function reentry_1325404394(catcher_1325404395, location_1325404396) {
  var result_1325404399 = {Field0: null, Field1: 0};

  var F = {procname: "parse.reentry", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 792;
    F.filename = "parse.nim";
    var node_1325404400 = EmptyNode_1325400358;
    F.line = 793;
    var reloc_1325404401 = (-1);
    if ((0 < (catcher_1325404395.skipList).length)) {
    F.line = 795;
    var gr_1325404405 = grammar_1325401580(catcher_1325404395);
    F.line = 796;
    var __1325404406 = nimCopy(null, reentry_point_1325401640(gr_1325404405.document, location_1325404396, catcher_1325404395.skipList, gr_1325404405.commentRe, 10000), NTI1325401020);
    F.line = 796;
    node_1325404400 = __1325404406["Field0"];
    F.line = 796;
    reloc_1325404401 = __1325404406["Field1"];
    if (!((node_1325404400 == null))) {
    F.line = 799;
    var nd_1325404410 = node_1325404400;
    F.line = 800;
    var colontmp__520094801 = nd_1325404410;
    F.line = 800;
    var colontmp__520094802 = reloc_1325404401;
    F.line = 800;
    result_1325404399 = nimCopy(result_1325404399, {Field0: colontmp__520094801, Field1: colontmp__520094802}, NTI1325402609);
    break BeforeRet;
    }
    
    }
    
    F.line = 801;
    var colontmp__520094803 = init_1325400336(new_1124074179(), [95,95,90,79,77,66,73,69], [], null);
    F.line = 801;
    var colontmp__520094804 = (-1);
    F.line = 801;
    result_1325404399 = nimCopy(result_1325404399, {Field0: colontmp__520094803, Field1: colontmp__520094804}, NTI1325402609);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404399;

}

function startsWith_1325404452(str_1325404454, sub_1325404455) {
  var result_1325404456 = false;

  var F = {procname: "startsWith.startsWith", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((len_1291845761(str_1325404454) < (((sub_1325404455).length) | 0))) {
    F.line = 135;
    F.filename = "strslice.nim";
    result_1325404456 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 140;
      var idx_1325404457 = 0;
      F.line = 140;
      var c_1325404458 = 0;
      F.line = 193;
      F.filename = "iterators.nim";
      var i_520094815 = 0;
      F.line = 194;
      var L_520094816 = (sub_1325404455).length;
      Label2: {
        F.line = 195;
          Label3: while (true) {
          if (!(i_520094815 < L_520094816)) break Label3;
            F.line = 140;
            F.filename = "strslice.nim";
            idx_1325404457 = i_520094815;
            F.line = 140;
            c_1325404458 = sub_1325404455[chckIndx(i_520094815, 0, (sub_1325404455).length - 1)];
            if (!((str_1325404454.Field0[0][str_1325404454.Field0[1]][chckIndx(addInt(((idx_1325404457) | 0), str_1325404454.Field1), 0, (str_1325404454.Field0[0][str_1325404454.Field0[1]]).length - 1)] == c_1325404458))) {
            F.line = 141;
            result_1325404456 = false;
            break BeforeRet;
            }
            
            F.line = 197;
            F.filename = "iterators.nim";
            i_520094815 = addInt(i_520094815, 1);
            if (!(((sub_1325404455).length == L_520094816))) {
            F.line = 198;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 142;
    F.filename = "strslice.nim";
    result_1325404456 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404456;

}

function HEX3DHEX3D_1325404447(str_1325404449, cmp_1325404450) {
  var result_1325404451 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/strslice.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!((len_1291845761(str_1325404449) == (((cmp_1325404450).length) | 0)))) {
    F.line = 147;
    F.filename = "strslice.nim";
    result_1325404451 = false;
    break BeforeRet;
    }
    
    F.line = 153;
    result_1325404451 = startsWith_1325404452(str_1325404449, cmp_1325404450);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404451;

}

function integerOutOfRangeError_771752261() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_771752299(s_771752300, b_771752301, b_771752301_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752302 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    F.filename = "parseutils.nim";
    var sign_771752303 = (-1n);
    F.line = 430;
    var i_771752304 = 0;
    if ((i_771752304 < (s_771752300).length)) {
    if ((s_771752300[chckIndx(i_771752304, 0, (s_771752300).length - 1)] == 43)) {
    F.line = 432;
    i_771752304 += 1;
    }
    else {
    if ((s_771752300[chckIndx(i_771752304, 0, (s_771752300).length - 1)] == 45)) {
    F.line = 434;
    i_771752304 += 1;
    F.line = 435;
    sign_771752303 = 1n;
    }
    }
    }
    
      if (!(i_771752304 < (s_771752300).length)) Temporary1 = false; else {        Temporary1 = (ConstSet31[s_771752300[chckIndx(i_771752304, 0, (s_771752300).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 437;
    b_771752301[b_771752301_Idx] = 0n;
    Label2: {
      F.line = 438;
        Label3: while (true) {
          if (!(i_771752304 < (s_771752300).length)) Temporary4 = false; else {            Temporary4 = (ConstSet32[s_771752300[chckIndx(i_771752304, 0, (s_771752300).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 439;
          var c_771752338 = (s_771752300[chckIndx(i_771752304, 0, (s_771752300).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_771752338)) / 10n <= b_771752301[b_771752301_Idx])) {
          F.line = 441;
          b_771752301[b_771752301_Idx] = ((b_771752301[b_771752301_Idx] * 10n) - BigInt(c_771752338));
          }
          else {
            F.line = 443;
          integerOutOfRangeError_771752261();
          }
          
          F.line = 444;
          i_771752304 += 1;
          Label5: {
            F.line = 445;
              Label6: while (true) {
              if (!((i_771752304 < (s_771752300).length) && (s_771752300[chckIndx(i_771752304, 0, (s_771752300).length - 1)] == 95))) break Label6;
                F.line = 445;
                i_771752304 += 1;
              }
          };
        }
    };
    if (((sign_771752303 == (-1n)) && (b_771752301[b_771752301_Idx] == (-9223372036854775808n)))) {
    F.line = 447;
    integerOutOfRangeError_771752261();
    }
    else {
      F.line = 449;
      b_771752301[b_771752301_Idx] = (b_771752301[b_771752301_Idx] * sign_771752303);
      F.line = 450;
      result_771752302 = i_771752304;
    }
    
    }
    
  framePtr = F.prev;

  return result_771752302;

}

function npuParseBiggestInt(s_771752361, number_771752362, number_771752362_Idx) {
  var result_771752363 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 464;
    F.filename = "parseutils.nim";
    var res_771752364 = [0n];
    F.line = 467;
    result_771752363 = rawParseInt_771752299(s_771752361, res_771752364, 0);
    if (!((result_771752363 == 0))) {
    F.line = 469;
    number_771752362[number_771752362_Idx] = res_771752364[0];
    }
    
  framePtr = F.prev;

  return result_771752363;

}

function npuParseInt(s_771752366, number_771752367, number_771752367_Idx) {
  var result_771752368 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    F.filename = "parseutils.nim";
    var res_771752369 = [0n];
    F.line = 483;
    result_771752368 = npuParseBiggestInt(s_771752366, res_771752369, 0);
    if (((res_771752369[0] < (-2147483648n)) || (2147483647n < res_771752369[0]))) {
    F.line = 486;
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752368 == 0))) {
    F.line = 488;
    number_771752367[number_771752367_Idx] = chckRange(Number(res_771752369[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_771752368;

}

function parseInt_771752879(s_771752880, number_771752881, number_771752881_Idx, start_771752882) {
  var result_771752883 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 999;
    F.filename = "parseutils.nim";
    result_771752883 = npuParseInt((s_771752880.slice(start_771752882, (s_771752880).length - 1 + 1)), number_771752881, number_771752881_Idx);
  framePtr = F.prev;

  return result_771752883;

}

function nsuParseInt(s_754975577) {
  var result_754975578 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/Users/di68kap/Entwicklung/Fremde/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1134;
    F.filename = "strutils.nim";
    result_754975578[0] = 0;
    F.line = 1135;
    var L_754975579 = parseInt_771752879(s_754975577, result_754975578, 0, 0);
    if ((!((L_754975579 == (s_754975577).length)) || (L_754975579 == 0))) {
    F.line = 1137;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_754975577 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_754975578[0];

}

function violation_1325404421(catcher_1325404422, location_1325404423, wasLookAhead_1325404424, expected_1325404425, reloc_1325404426, errorNode_1325404427) {
    var Temporary1;
    var Temporary3;
              
function match_1325404431(rule_1325404432, text_1325404433, location_1325404434) {
                    var Temporary1;
                    var Temporary2;
                    var Temporary3;
                    var Temporary4;
                    var Temporary5;

                var result_1325404435 = false;

                var F = {procname: "violation.match", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
                framePtr = F;
                BeforeRet: {
                  F.line = 812;
                  F.filename = "parse.nim";
                  switch (rule_1325404432.kind) {
                  case 0:
                    F.line = 814;
                    var Temporary1 = rule_1325404432;
                    if (ConstSet26[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rxInfo\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1325400124)); }
                    result_1325404435 = (0 <= matchLen_1291845992(text_1325404433, Temporary1.rxInfo.Field1, location_1325404434));
                    break BeforeRet;
                    break;
                  case 1:
                    F.line = 816;
                    var Temporary2 = rule_1325404432;
                    if (ConstSet27[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1325400124)); }
                    var Temporary3 = rule_1325404432;
                    if (ConstSet28[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cmpStr\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1325400124)); }
                    result_1325404435 = HEX3DHEX3D_1325404447(cut_1291845777(text_1325404433, HEX2EHEX2E_1291845699(location_1325404434, subInt(addInt(location_1325404434, (((Temporary2.cmpStr).length) | 0)), 1))), Temporary3.cmpStr);
                    break BeforeRet;
                    break;
                  case 2:
                    F.line = 818;
                    var Temporary4 = rule_1325404432;
                    if (ConstSet29[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'findProc\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1325400124)); }
                    result_1325404435 = (0 <= Temporary4.findProc(text_1325404433, location_1325404434, location_1325404434)["Field0"]);
                    break BeforeRet;
                    break;
                  case 3:
                    F.line = 820;
                    var Temporary5 = rule_1325404432;
                    if (ConstSet30[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'consumeParser\' is not accessible for type \'Matcher\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1325400124)); }
                    var parser_1325404459 = Temporary5.consumeParser;
                    F.line = 821;
++excHandler;
                    try {
                    F.line = 822;
                    var tmpTuple_1325404460 = HEX28HEX29_1325403998(parser_1325404459, location_1325404434);
                    F.line = 822;
                    var node_1325404461 = tmpTuple_1325404460["Field0"];
                    F.line = 822;
                    var pos_1325404462 = tmpTuple_1325404460["Field1"];
                    F.line = 823;
                    result_1325404435 = !((node_1325404461 == null));
                    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    framePtr = F;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI1325400142))) {
                    F.line = 825;
                    var pe_1325404466 = getCurrentException();
                    F.line = 825;
                    var msg_1325404467 = ([69,114,114,111,114,32,119,104,105,108,101,32,112,105,99,107,105,110,103,32,101,114,114,111,114,32,109,101,115,115,97,103,101,32,119,105,116,104,58,32] || []).concat(HEX24_1325401404(parser_1325404459) || []);
                    F.line = 826;
                    var error_1325404471 = init_1073741848(new_1325401735(), msg_1325404467, location_1325404434, 1301, (-1), (-1), (-1), [], (-1), []);
                    F.line = 827;
                    grammar_1325401580(parser_1325404459).errors.push(error_1325404471);;
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    framePtr = F;
                    }
                    break;
                  }
                };
                framePtr = F.prev;

                return result_1325404435;

              }

  var result_1325404430 = {Field0: null, Field1: 0};

  var F = {procname: "parse.violation", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 830;
    F.filename = "parse.nim";
    var gr_1325404485 = grammar_1325401580(catcher_1325404422);
    F.line = 831;
    var snippet_1325404494 = cstrToNimstr(replace_1291846014(cut_1291845777(gr_1325404485.document, HEX2EHEX2E_1291845699(location_1325404423, addInt(location_1325404423, 9))), ure_1325400104([92,110]), [92,110]));
    F.line = 832;
    if ((len_1291845761(gr_1325404485.document) <= location_1325404423)) {
    Temporary1 = [69,79,70];
    }
    else {
      Label2: {
        F.line = 832;
        var fmtRes_1325404499 = [mnewString(0)];
        F.line = 832;
        fmtRes_1325404499[0].push.apply(fmtRes_1325404499[0], [194,187]);;
        F.line = 832;
        formatValue_1090519211(fmtRes_1325404499, 0, snippet_1325404494, []);
        F.line = 832;
        fmtRes_1325404499[0].push.apply(fmtRes_1325404499[0], [194,171]);;
      };
    Temporary1 = fmtRes_1325404499[0];
    }
    
    var found_1325404500 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 833;
    if ((catcher_1325404422.symbol == null)) {
    Temporary3 = HEX24_1325401404(catcher_1325404422);
    }
    else {
    Temporary3 = catcher_1325404422.symbol.pname;
    }
    
    var sym_1325404504 = nimCopy(null, Temporary3, NTI33554449);
    F.line = 835;
    var errCode_1325404505 = 1010;
    F.line = 836;
    Label4: {
      F.line = 836;
      var fmtRes_1325404510 = [mnewString(0)];
      F.line = 836;
      formatValue_1090519211(fmtRes_1325404510, 0, expected_1325404425, []);
      F.line = 836;
      fmtRes_1325404510[0].push.apply(fmtRes_1325404510[0], [32,101,120,112,101,99,116,101,100,32,98,121,32,112,97,114,115,101,114,32]);;
      F.line = 836;
      formatValue_1090519211(fmtRes_1325404510, 0, sym_1325404504, []);
      F.line = 836;
      fmtRes_1325404510[0].push.apply(fmtRes_1325404510[0], [44,32,98,117,116,32]);;
      F.line = 836;
      formatValue_1090519211(fmtRes_1325404510, 0, found_1325404500, []);
      F.line = 836;
      fmtRes_1325404510[0].push.apply(fmtRes_1325404510[0], [32,102,111,117,110,100,33]);;
    };
    var message_1325404511 = nimCopy(null, fmtRes_1325404510[0], NTI33554449);
    Label5: {
      F.line = 838;
      var rule_1325404515 = ({kind: 0, rxInfo: {Field0: [], Field1: {Field0: null, Field1: null}}, cmpStr: [], findProc: null, consumeParser: null});
      F.line = 838;
      var msg_1325404516 = [];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094808 = 0;
      F.line = 242;
      var L_520094809 = (catcher_1325404422.errorList).length;
      Label6: {
        F.line = 243;
          Label7: while (true) {
          if (!(i_520094808 < L_520094809)) break Label7;
            F.line = 838;
            F.filename = "parse.nim";
            rule_1325404515 = catcher_1325404422.errorList[chckIndx(i_520094808, 0, (catcher_1325404422.errorList).length - 1)]["Field0"];
            F.line = 838;
            msg_1325404516 = catcher_1325404422.errorList[chckIndx(i_520094808, 0, (catcher_1325404422.errorList).length - 1)]["Field1"];
            if (match_1325404431(rule_1325404515, gr_1325404485.document, location_1325404423)) {
            F.line = 840;
            var i_1325404517 = addInt(nsuFindChar(msg_1325404516, 58, 0, (-1)), 1);
            F.line = 841;
++excHandler;
            try {
            if ((0 < i_1325404517)) {
            F.line = 842;
            errCode_1325404505 = nsuParseInt(HEX5BHEX5D_754975999(msg_1325404516, HEX2EHEX2E_989855792(0, subInt(i_1325404517, 1))));
            }
            
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = F;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
            F.line = 844;
            i_1325404517 = 0;
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            framePtr = F;
            }
            F.line = 845;
            message_1325404511 = nimCopy(null, nsuReplaceStr(nsuReplaceStr(HEX5BHEX5D_754976027(msg_1325404516, HEX2EHEX2E_939524200(i_1325404517, 1)), [123,48,125], expected_1325404425), [123,49,125], found_1325404500), NTI33554449);
            F.line = 846;
            break Label5;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094808 = addInt(i_520094808, 1);
            if (!(((catcher_1325404422.errorList).length == L_520094809))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if ((wasLookAhead_1325404424 && (len_1291845761(gr_1325404485.document) <= location_1325404423))) {
    F.line = 848;
    F.filename = "parse.nim";
    errCode_1325404505 = 1015;
    }
    
    F.line = 849;
    var error_1325404563 = init_1073741848(new_1325401735(), message_1325404511, location_1325404423, errCode_1325404505, (-1), (-1), (-1), [], (-1), []);
    F.line = 850;
    gr_1325404485.errors.push(error_1325404563);;
    F.line = 851;
    var colontmp__520094811 = error_1325404563;
    F.line = 851;
    var colontmp__520094812 = addInt(location_1325404423, nimMax(reloc_1325404426, 0));
    F.line = 851;
    result_1325404430 = nimCopy(result_1325404430, {Field0: colontmp__520094811, Field1: colontmp__520094812}, NTI1325402625);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325404430;

}

function parse_1325406446(self_1325406447, location_1325406448) {
                var Temporary5;

  var result_1325406449 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1458;
    F.filename = "parse.nim";
    var results_1325406456 = [];
    F.line = 1459;
    var loc_1325406457 = location_1325406448;
    F.line = 1460;
    var reloc_1325406458 = 0;
    F.line = 1461;
    var error_1325406459 = null;
    F.line = 1462;
    var node_1325406460 = null;
    F.line = 1462;
    var nd_1325406461 = null;
    F.line = 1463;
    var someNode_1325406462 = null;
    Label1: {
      F.line = 1465;
      var pos_1325406463 = (-1);
      Label2: {
        F.line = 1464;
        var parser_1325406467 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_520094796 = 0;
        F.line = 242;
        var L_520094797 = (self_1325406447.subParsers).length;
        Label3: {
          F.line = 243;
            Label4: while (true) {
            if (!(i_520094796 < L_520094797)) break Label4;
              F.line = 1465;
              F.filename = "parse.nim";
              parser_1325406467 = self_1325406447.subParsers[chckIndx(i_520094796, 0, (self_1325406447.subParsers).length - 1)];
              F.line = 1465;
              pos_1325406463 = addInt(pos_1325406463, 1);
              F.line = 1465;
              var __1325406473 = nimCopy(null, HEX28HEX29_1325403998(parser_1325406467, loc_1325406457), NTI1325400121);
              F.line = 1465;
              node_1325406460 = __1325406473["Field0"];
              F.line = 1465;
              loc_1325406457 = __1325406473["Field1"];
              if ((node_1325406460 == null)) {
              if ((pos_1325406463 < self_1325406447.mandatory)) {
              F.line = 1468;
              var colontmp__520094794 = null;
              F.line = 1468;
              var colontmp__520094795 = location_1325406448;
              F.line = 1468;
              result_1325406449 = nimCopy(result_1325406449, {Field0: colontmp__520094794, Field1: colontmp__520094795}, NTI1325400121);
              break BeforeRet;
              }
              else {
                F.line = 1470;
                var __1325406477 = nimCopy(null, reentry_1325404394(self_1325406447, loc_1325406457), NTI1325402609);
                F.line = 1470;
                someNode_1325406462 = __1325406477["Field0"];
                F.line = 1470;
                reloc_1325406458 = __1325406477["Field1"];
                F.line = 1471;
                if (!(eqStrings(parser_1325406467.pname, []))) {
                Temporary5 = parser_1325406467.pname;
                }
                else {
                Temporary5 = HEX24_1325401404(parser_1325406467);
                }
                
                var __1325406478 = nimCopy(null, violation_1325404421(self_1325406447, loc_1325406457, false, Temporary5, reloc_1325406458, someNode_1325406462), NTI1325402625);
                F.line = 1471;
                error_1325406459 = __1325406478["Field0"];
                F.line = 1471;
                loc_1325406457 = __1325406478["Field1"];
                if ((0 <= reloc_1325406458)) {
                F.line = 1473;
                var __1325406479 = nimCopy(null, HEX28HEX29_1325403998(parser_1325406467, loc_1325406457), NTI1325400121);
                F.line = 1473;
                nd_1325406461 = __1325406479["Field0"];
                F.line = 1473;
                loc_1325406457 = __1325406479["Field1"];
                if (!((nd_1325406461 == null))) {
                F.line = 1475;
                results_1325406456.push(someNode_1325406462);;
                F.line = 1476;
                someNode_1325406462 = nd_1325406461;
                }
                
                if ((!((((someNode_1325406462.childrenSeq).length == 0) && (len_1291845761(someNode_1325406462.textSlice) == 0))) || !((((someNode_1325406462.nameRef[0][someNode_1325406462.nameRef[1]]).length == 0) || (someNode_1325406462.nameRef[0][someNode_1325406462.nameRef[1]][chckIndx(0, 0, (someNode_1325406462.nameRef[0][someNode_1325406462.nameRef[1]]).length - 1)] == 58))))) {
                F.line = 1478;
                results_1325406456.push(someNode_1325406462);;
                }
                
                }
                else {
                  F.line = 1480;
                  results_1325406456.push(someNode_1325406462);;
                  F.line = 1481;
                  break Label2;
                }
                
              }
              
              }
              else {
              if ((!((((node_1325406460.childrenSeq).length == 0) && (len_1291845761(node_1325406460.textSlice) == 0))) || !((((node_1325406460.nameRef[0][node_1325406460.nameRef[1]]).length == 0) || (node_1325406460.nameRef[0][node_1325406460.nameRef[1]][chckIndx(0, 0, (node_1325406460.nameRef[0][node_1325406460.nameRef[1]]).length - 1)] == 58))))) {
              F.line = 1483;
              results_1325406456.push(node_1325406460);;
              }
              }
              F.line = 245;
              F.filename = "iterators.nim";
              i_520094796 = addInt(i_520094796, 1);
              if (!(((self_1325406447.subParsers).length == L_520094797))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    F.line = 1484;
    F.filename = "parse.nim";
    someNode_1325406462 = grammar_1325401580(self_1325406447).returnSequence(self_1325406447, results_1325406456);
    if (!((error_1325406459 == null))) {
    F.line = 177;
    F.filename = "nodetree.nim";
    var _ = assignSourcePos_1124074099(someNode_1325406462, location_1325406448);
    F.line = 1486;
    F.filename = "parse.nim";
    raiseException({origin: self_1325406447, node: someNode_1325406462, node_orig_len: subInt(loc_1325406457, location_1325406448), location: location_1325406448, error: error_1325406459, first_throw: true, m_type: NTI1325400142, parent: null, name: null, message: [], trace: [], up: null}, "ParsingException:ObjectType");
    }
    
    F.line = 1489;
    var colontmp__520094799 = someNode_1325406462;
    F.line = 1489;
    var colontmp__520094800 = loc_1325406457;
    F.line = 1489;
    result_1325406449 = nimCopy(result_1325406449, {Field0: colontmp__520094799, Field1: colontmp__520094800}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406449;

}

function parse_1325406103(self_1325406104, location_1325406105) {
  var result_1325406106 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1374;
    F.filename = "parse.nim";
    var loc_1325406107 = location_1325406105;
    F.line = 1375;
    var node_1325406108 = null;
    Label1: {
      F.line = 1376;
      var parser_1325406112 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520094823 = 0;
      F.line = 242;
      var L_520094824 = (self_1325406104.subParsers).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520094823 < L_520094824)) break Label3;
            F.line = 1376;
            F.filename = "parse.nim";
            parser_1325406112 = self_1325406104.subParsers[chckIndx(i_520094823, 0, (self_1325406104.subParsers).length - 1)];
            F.line = 1377;
            var __1325406113 = nimCopy(null, HEX28HEX29_1325403998(parser_1325406112, loc_1325406107), NTI1325400121);
            F.line = 1377;
            node_1325406108 = __1325406113["Field0"];
            F.line = 1377;
            loc_1325406107 = __1325406113["Field1"];
            if (!((node_1325406108 == null))) {
            F.line = 1379;
            var colontmp__520094821 = grammar_1325401580(self_1325406104).returnItem(self_1325406104, node_1325406108);
            F.line = 1379;
            var colontmp__520094822 = loc_1325406107;
            F.line = 1379;
            result_1325406106 = nimCopy(result_1325406106, {Field0: colontmp__520094821, Field1: colontmp__520094822}, NTI1325400121);
            break BeforeRet;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520094823 = addInt(i_520094823, 1);
            if (!(((self_1325406104.subParsers).length == L_520094824))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/Users/di68kap/Entwicklung/Fremde/Nim/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 1380;
    F.filename = "parse.nim";
    var colontmp__520094826 = null;
    F.line = 1380;
    var colontmp__520094827 = location_1325406105;
    F.line = 1380;
    result_1325406106 = nimCopy(result_1325406106, {Field0: colontmp__520094826, Field1: colontmp__520094827}, NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325406106;

}

function parse_1325409568(self_1325409569, location_1325409570) {
  var result_1325409571 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1702;
    F.filename = "parse.nim";
    result_1325409571 = nimCopy(result_1325409571, HEX28HEX29_1325403998(self_1325409569.subParsers[chckIndx(0, 0, (self_1325409569.subParsers).length - 1)], location_1325409570), NTI1325400121);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1325409571;

}

function parse_1325406861(self_1325406862, location_1325406863) {
  var result_1325406864 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1568;
    F.filename = "parse.nim";
    var loc_1325406865 = 0;
    F.line = 1569;
    var node_1325406866 = null;
    F.line = 1571;
    var __1325406867 = nimCopy(null, HEX28HEX29_1325403998(self_1325406862.subParsers[chckIndx(0, 0, (self_1325406862.subParsers).length - 1)], location_1325406863), NTI1325400121);
    F.line = 1571;
    node_1325406866 = __1325406867["Field0"];
    F.line = 1571;
    loc_1325406865 = __1325406867["Field1"];
    if ((self_1325406862.positive != (node_1325406866 == null))) {
    if ((self_1325406862.flags[7] != undefined)) {
    F.line = 1574;
    node_1325406866 = EmptyNode_1325400358;
    }
    else {
      F.line = 1576;
      node_1325406866 = init_1325404028(new_1124074179(), self_1325406862.nodeName[0], self_1325406862.nodeName[1], [], null);
    }
    
    F.line = 1577;
    var colontmp__520094828 = node_1325406866;
    F.line = 1577;
    var colontmp__520094829 = location_1325406863;
    F.line = 1577;
    result_1325406864 = nimCopy(result_1325406864, {Field0: colontmp__520094828, Field1: colontmp__520094829}, NTI1325400121);
    break BeforeRet;
    }
    else {
      F.line = 1579;
      var colontmp__520094830 = null;
      F.line = 1579;
      var colontmp__520094831 = location_1325406863;
      F.line = 1579;
      result_1325406864 = nimCopy(result_1325406864, {Field0: colontmp__520094830, Field1: colontmp__520094831}, NTI1325400121);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_1325406864;

}

function parse_1325402149(self_1325402150, location_1325402151) {
  var result_1325402152 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
    F.line = 577;
    F.filename = "parse.nim";
    rawEcho([80,97,114,115,101,114,46,112,97,114,115,101]);
    F.line = 578;
    var colontmp__520094832 = null;
    F.line = 578;
    var colontmp__520094833 = 0;
    F.line = 578;
    result_1325402152 = nimCopy(result_1325402152, {Field0: colontmp__520094832, Field1: colontmp__520094833}, NTI1325400121);
  framePtr = F.prev;

  return result_1325402152;

}

function parse_1325402153(self_1325402150, location_1325402151) {
  var result_1325402154 = {Field0: null, Field1: 0};

  var F = {procname: "parse.parse", prev: framePtr, filename: "/Users/di68kap/Entwicklung/DHParser/nim_rewrite/src/nimparser/parse.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1325402150);
    if (isObj(self_1325402150.m_type, NTI1325403225)) {
    F.line = 576;
    F.filename = "parse.nim";
    result_1325402154 = nimCopy(result_1325402154, parse_1325405188(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325403832)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325405630(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325403264)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325405522(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325403999)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325405922(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325403903)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325405755(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325404342)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325406446(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325404150)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325406103(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325404793)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325409568(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325404690)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325406861(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    else {
    if (isObj(self_1325402150.m_type, NTI1325400132)) {
    F.line = 576;
    result_1325402154 = nimCopy(result_1325402154, parse_1325402149(self_1325402150, location_1325402151), NTI1325400121);
    break BeforeRet;
    }
    }}}}}}}}}
  };
  framePtr = F.prev;

  return result_1325402154;

}
